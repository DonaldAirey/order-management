<ResourceDictionary xmlns:controls="clr-namespace:Teraque.Windows.Controls"
					xmlns:data="clr-namespace:Teraque.Windows.Data"
					xmlns:documents="clr-namespace:Teraque.Windows.Documents"
					xmlns:input="clr-namespace:Teraque.Windows.Input"
					xmlns:local="clr-namespace:Teraque.Windows"
					xmlns:navigation="clr-namespace:Teraque.Windows.Navigation"
					xmlns:primitives="clr-namespace:Teraque.Windows.Controls.Primitives"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
	<!-- DateTime Converter -->
	<data:DateTimeConverter x:Key="DateTimeConverterKey"/>
	<!-- FileSize Converter -->
	<data:FileSizeConverter x:Key="FileSizeConverterKey"/>
	<!-- IndentConverter -->
	<data:IndentConverter x:Key="IndentConverterKey"/>
	<!-- Uri Converter -->
	<data:UriConverter x:Key="UriConverterKey"/>
	<!-- DropShadow Effect -->
	<DropShadowEffect BlurRadius="3"
					  Color="Black"
					  Direction="315"
					  x:Key="DropShadowEffect"
					  Opacity="0.5"
					  ShadowDepth="5"/>
	<!--Grayscale Effect -->
	<local:GrayscaleEffect x:Key="GrayscaleEffect"/>
	<!-- MenuItemHighlightBackground Brush -->
	<LinearGradientBrush EndPoint="0.0,1.0"
						 x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type controls:Gadget}, ResourceId=MenuItemHighlightBackgroundBrush}"
						 StartPoint="0.0,0.0">
		<GradientStop Color="#66F4F9FF"
					  Offset="0.0"/>
		<GradientStop Color="#66D6E8FF"
					  Offset="1.0"/>
	</LinearGradientBrush>
	<!-- MenuItemHighlightInnerBorderBrush -->
	<LinearGradientBrush EndPoint="0.0,1.0"
						 x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type controls:Gadget}, ResourceId=MenuItemHighlightInnerBorderBrush}"
						 StartPoint="0.0,0.0">
		<GradientStop Color="#9CFBFBFF"
					  Offset="0.0"/>
		<GradientStop Color="#9CEDF5FF"
					  Offset="1.0"/>
	</LinearGradientBrush>
	<!-- ToolTipBackground Brush -->
	<LinearGradientBrush EndPoint="0.0,1.0"
						 x:Key="ToolTipBackgroundBrushKey"
						 StartPoint="0.0,0.0">
		<LinearGradientBrush.GradientStops>
			<GradientStop Color="#FFFFFF"
						  Offset="0.00"/>
			<GradientStop Color="#E4E5F0"
						  Offset="1.00"/>
		</LinearGradientBrush.GradientStops>
	</LinearGradientBrush>
	<!-- TravelBarInnerBorderBrush -->
	<LinearGradientBrush EndPoint="0.0,1.0"
						 x:Key="TravelBarInnerBorderBrushKey"
						 StartPoint="0.0,0.0">
		<GradientStop Color="#EEFFFFFF"
					  Offset="0.0"/>
		<GradientStop Color="#E8FFFFFF"
					  Offset="1.0"/>
	</LinearGradientBrush>
	<!-- TravelBarNormalBottomBackground Brush -->
	<LinearGradientBrush EndPoint="0.0,1.0"
						 x:Key="TravelBarNormalBottomBackgroundBrushKey"
						 StartPoint="0.0,0.0">
		<LinearGradientBrush.GradientStops>
			<GradientStop Color="#B8FFFFFF"
						  Offset="0.13"/>
			<GradientStop Color="#B7FFFFFF"
						  Offset="0.38"/>
			<GradientStop Color="#B5FFFFFF"
						  Offset="0.63"/>
			<GradientStop Color="#B3FFFFFF"
						  Offset="0.88"/>
		</LinearGradientBrush.GradientStops>
	</LinearGradientBrush>
	<!-- TravelBarNormalTopBackground Brush -->
	<LinearGradientBrush EndPoint="0.0,1.0"
						 x:Key="TravelBarNormalTopBackgroundBrushKey"
						 StartPoint="0.0,0.0">
		<LinearGradientBrush.GradientStops>
			<GradientStop Color="#B4FFFFFF"
						  Offset="0.17"/>
			<GradientStop Color="#B6FFFFFF"
						  Offset="0.50"/>
			<GradientStop Color="#B8FFFFFF"
						  Offset="0.83"/>
		</LinearGradientBrush.GradientStops>
	</LinearGradientBrush>
	<!-- TravelBarOuterBorder Brush -->
	<LinearGradientBrush EndPoint="0.0,1.0"
						 x:Key="TravelBarOuterBorderBrushKey"
						 StartPoint="0.0,0.0">
		<GradientStop Color="#EEFFFFFF"
					  Offset="0.00"/>
		<GradientStop Color="#E8FFFFFF"
					  Offset="1.00"/>
	</LinearGradientBrush>
	<!-- JournalEntryUnifiedView Converter -->
	<JournalEntryUnifiedViewConverter x:Key="JournalEntryUnifiedViewConverterKey"/>
	<!-- MenuItemHighlightOuterBorder Brush -->
	<SolidColorBrush Color="#C098C4F9"
					 x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type controls:Gadget}, ResourceId=MenuItemHighlightOuterBorderBrush}"/>
	<!-- MenuPopupBackground Brush -->
	<SolidColorBrush Color="#F0F0F0"
					 x:Key="MenuPopupBackgroundBrushKey"/>
	<!-- MenuPopupBevel Brush -->
	<SolidColorBrush Color="#F5F5F5"
					 x:Key="MenuPopupBevelBrushKey"/>
	<!-- MenuPopupBorder Brush -->
	<SolidColorBrush Color="#979797"
					 x:Key="MenuPopupBorderBrushKey"/>
	<!-- MenuPopupSeparatorHighlight Brush -->
	<SolidColorBrush Color="White"
					 x:Key="MenuPopupSeparatorHighlightBrushKey"/>
	<!-- MenuPopupSeparatorShadow Brush -->
	<SolidColorBrush Color="#E0E0E0"
					 x:Key="MenuPopupSeparatorShadowBrushKey"/>
	<!-- ToolTipBorder Brush -->
	<SolidColorBrush Color="#767676"
					 x:Key="ToolTipBorderBrushKey"/>
	<!-- ToolTipForeground Brush -->
	<SolidColorBrush Color="#575757"
					 x:Key="ToolTipForegroundBrushKey"/>
	<!--TravelBarHighlightBackground Brush -->
	<SolidColorBrush Color="#A0FFFFFF"
					 x:Key="TravelBarHighlightBackgroundBrushKey"/>
	<!-- TravelBarNormalCenterBackground Brush -->
	<SolidColorBrush Color="#B8FFFFFF"
					 x:Key="TravelBarNormalCenterBackgroundBrushKey"/>
	<!-- ButtonPress Transform -->
	<TranslateTransform x:Key="ButtonPressTransformKey"
						X="1"
						Y="1"/>
	<!-- ToolTip Style -->
	<Style x:Key="ToolTipStyleKey"
		   TargetType="ToolTip">
		<Setter Property="BorderThickness"
				Value="1"/>
		<Setter Property="Background"
				Value="{StaticResource ToolTipBackgroundBrushKey}"/>
		<Setter Property="BorderBrush"
				Value="{StaticResource ToolTipBorderBrushKey}"/>
		<Setter Property="Foreground"
				Value="{StaticResource ToolTipForegroundBrushKey}"/>
		<Setter Property="FontFamily"
				Value="{DynamicResource {x:Static SystemFonts.StatusFontFamilyKey}}"/>
		<Setter Property="FontSize"
				Value="{DynamicResource {x:Static SystemFonts.StatusFontSizeKey}}"/>
		<Setter Property="FontStyle"
				Value="{DynamicResource {x:Static SystemFonts.StatusFontStyleKey}}"/>
		<Setter Property="FontWeight"
				Value="{DynamicResource {x:Static SystemFonts.StatusFontWeightKey}}"/>
		<Setter Property="Padding"
				Value="5,0,6,2"/>
		<Setter Property="HorizontalContentAlignment"
				Value="Left"/>
		<Setter Property="VerticalContentAlignment"
				Value="Center"/>
		<Setter Property="HasDropShadow"
				Value="{DynamicResource {x:Static SystemParameters.DropShadowKey}}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ToolTip">
					<Border Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							CornerRadius="2"
							Name="DropDownBorder"
							Padding="{TemplateBinding Padding}">
						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
										  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="HasDropShadow"
								 Value="True">
							<Setter Property="Margin"
									TargetName="DropDownBorder"
									Value="0,0,5,5"/>
							<Setter Property="Grid.Effect"
									TargetName="DropDownBorder"
									Value="{StaticResource DropShadowEffect}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!-- MenuItemHighlightBorder Template -->
	<ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type controls:Gadget}, ResourceId=MenuItemHighlightBorderTemplateKey}"
					 TargetType="Control">
		<Border BorderBrush="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type controls:Gadget}, ResourceId=MenuItemHighlightOuterBorderBrush}}"
				BorderThickness="1"
				CornerRadius="2"
				SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
			<Border Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type controls:Gadget}, ResourceId=MenuItemHighlightBackgroundBrush}}"
					BorderBrush="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type controls:Gadget}, ResourceId=MenuItemHighlightInnerBorderBrush}}"
					BorderThickness="1"
					CornerRadius="2"/>
		</Border>
	</ControlTemplate>
	<!-- NormalBorder Template -->
	<ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type controls:Gadget}, ResourceId=NormalBorderTemplateKey}"
					 TargetType="Control">
		<Border Background="Transparent"
				SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
	</ControlTemplate>
	<!-- GadgetTopLevelHeader Template -->
	<ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type controls:Gadget}, ResourceId=GadgetTopLevelHeaderTemplate}"
					 TargetType="controls:Gadget">
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition Width="Auto"/>
			</Grid.ColumnDefinitions>
			<Grid Name="ButtonBorder"
				  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
				  Visibility="Collapsed">
				<Control Focusable="False"
						 Name="ButtonNormalBorder"
						 Opacity="{TemplateBinding NormalOpacity}"
						 Template="{TemplateBinding ButtonNormalBorder}"/>
				<Control Focusable="False"
						 Name="ButtonHighlightBorder"
						 Opacity="{TemplateBinding HighlightOpacity}"
						 Template="{TemplateBinding ButtonHighlightBorder}"/>
				<Control Focusable="False"
						 Name="ButtonPressedBorder"
						 Opacity="{TemplateBinding PressedOpacity}"
						 Template="{TemplateBinding ButtonPressedBorder}"/>
			</Grid>
			<Grid Grid.ColumnSpan="2"
				  Name="MenuItemBorder"
				  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
				<Control Focusable="False"
						 Name="MenuItemNormalBorder"
						 Opacity="{TemplateBinding NormalOpacity}"
						 Template="{TemplateBinding MenuItemNormalBorder}"/>
				<Control Focusable="False"
						 Name="MenuItemHighlightBorder"
						 Opacity="{TemplateBinding HighlightOpacity}"
						 Template="{TemplateBinding MenuItemHighlightBorder}"/>
				<Control Focusable="False"
						 Name="MenuItemPressedBorder"
						 Opacity="{TemplateBinding PressedOpacity}"
						 Template="{TemplateBinding MenuItemPressedBorder}"/>
			</Grid>
			<StackPanel Margin="{TemplateBinding ContentPadding}"
						Name="Content"
						Orientation="Horizontal">
				<documents:PixelSnapper Margin="{TemplateBinding IconMargin}"
										x:Name="Icon"
										VerticalAlignment="Center"
										Visibility="{TemplateBinding IconVisibility}">
					<Image Source="{TemplateBinding Icon}"
						   Stretch="None"/>
				</documents:PixelSnapper>
				<ContentPresenter ContentSource="Header"
								  Grid.Column="2"
								  Margin="{TemplateBinding HeaderMargin}"
								  Name="Header"
								  RecognizesAccessKey="True"
								  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
								  VerticalAlignment="Center"
								  Visibility="{TemplateBinding HeaderVisibility}"/>
			</StackPanel>
			<documents:PixelSnapper Grid.Column="1"
									HorizontalAlignment="Center"
									Margin="{TemplateBinding OpenPadding}"
									x:Name="OpenGlyph"
									Opacity="1.0"
									VerticalAlignment="Center"
									Visibility="{TemplateBinding OpenVisibility}">
				<Grid>
					<Image Name="OpenImage"
						   Source="{TemplateBinding OpenGlyph}"
						   Stretch="None"/>
					<Image Name="OverflowImage"
						   Opacity="0.0"
						   Source="{TemplateBinding OverflowGlyph}"
						   Stretch="None"/>
					<Image Name="PressedImage"
						   Opacity="0.0"
						   Source="{TemplateBinding PressedGlyph}"
						   Stretch="None"/>
				</Grid>
			</documents:PixelSnapper>
			<Grid Background="Transparent"
				  Name="PART_Button"
				  Visibility="Collapsed"/>
			<Grid Background="Transparent"
				  Grid.ColumnSpan="2"
				  Name="PART_MenuItem"/>
			<Popup AllowsTransparency="true"
				   Focusable="false"
				   HorizontalOffset="{TemplateBinding HorizontalOffset}"
				   IsOpen="{Binding Path=IsSubmenuOpen,RelativeSource={RelativeSource TemplatedParent}}"
				   Name="PART_Popup"
				   Placement="{TemplateBinding Placement}"
				   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
				   VerticalOffset="{TemplateBinding VerticalOffset}">
				<Grid Name="DropDownGrid">
					<Rectangle Fill="{StaticResource MenuPopupBorderBrushKey}"/>
					<Rectangle Fill="{StaticResource MenuPopupBevelBrushKey}"
							   Margin="1"/>
					<Rectangle Fill="{StaticResource MenuPopupBackgroundBrushKey}"
							   Margin="3"/>
					<ScrollViewer CanContentScroll="True"
								  Margin="3"
								  Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=MenuScrollViewer}}">
						<ItemsPresenter Grid.ColumnSpan="2"
										KeyboardNavigation.DirectionalNavigation="Cycle"
										KeyboardNavigation.TabNavigation="None"
										x:Name="PART_ItemsPresenter"
										SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
					</ScrollViewer>
				</Grid>
			</Popup>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="HasDropShadow"
					 SourceName="PART_Popup"
					 Value="True">
				<Setter Property="Margin"
						TargetName="DropDownGrid"
						Value="0,0,5,5"/>
				<Setter Property="Effect"
						TargetName="DropDownGrid"
						Value="{StaticResource DropShadowEffect}"/>
			</Trigger>
			<Trigger Property="IsButton"
					 Value="True">
				<Setter Property="Visibility"
						TargetName="ButtonBorder"
						Value="Visible"/>
				<Setter Property="Visibility"
						TargetName="PART_Button"
						Value="Visible"/>
				<Setter Property="Grid.Column"
						TargetName="MenuItemBorder"
						Value="1"/>
				<Setter Property="Grid.ColumnSpan"
						TargetName="MenuItemBorder"
						Value="1"/>
				<Setter Property="Grid.Column"
						TargetName="PART_MenuItem"
						Value="1"/>
				<Setter Property="Grid.ColumnSpan"
						TargetName="PART_MenuItem"
						Value="1"/>
			</Trigger>
			<Trigger Property="Icon"
					 Value="{x:Null}">
				<Setter Property="Visibility"
						TargetName="Icon"
						Value="Collapsed"/>
			</Trigger>
			<Trigger Property="Header"
					 Value="{x:Null}">
				<Setter Property="Visibility"
						TargetName="Header"
						Value="Collapsed"/>
			</Trigger>
			<Trigger Property="HasAsNeededItems"
					 Value="True">
				<Setter Property="Opacity"
						TargetName="OpenImage"
						Value="0.0"/>
				<Setter Property="Opacity"
						TargetName="OverflowImage"
						Value="1.0"/>
			</Trigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsHighlighted"
							   Value="True"/>
					<Condition Property="IsHighlightAnimated"
							   Value="True"/>
				</MultiTrigger.Conditions>
				<Setter Property="NormalOpacity"
						Value="0.0"/>
				<MultiTrigger.EnterActions>
					<BeginStoryboard>
						<Storyboard>
							<DoubleAnimation Duration="0:0:0.25"
											 Storyboard.TargetProperty="HighlightOpacity"
											 To="1.0"/>
						</Storyboard>
					</BeginStoryboard>
				</MultiTrigger.EnterActions>
				<MultiTrigger.ExitActions>
					<BeginStoryboard>
						<Storyboard>
							<DoubleAnimation Duration="0:0:0.25"
											 Storyboard.TargetProperty="HighlightOpacity"
											 To="0.0"/>
						</Storyboard>
					</BeginStoryboard>
				</MultiTrigger.ExitActions>
			</MultiTrigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsHighlighted"
							   Value="True"/>
					<Condition Property="IsHighlightAnimated"
							   Value="False"/>
				</MultiTrigger.Conditions>
				<Setter Property="NormalOpacity"
						Value="0.0"/>
				<Setter Property="HighlightOpacity"
						Value="1.0"/>
			</MultiTrigger>
			<Trigger Property="IsPressed"
					 Value="True">
				<Setter Property="NormalOpacity"
						Value="0.0"/>
				<Setter Property="PressedOpacity"
						Value="1.0"/>
				<Setter Property="Opacity"
						TargetName="OpenImage"
						Value="0.0"/>
				<Setter Property="Opacity"
						TargetName="OverflowImage"
						Value="0.0"/>
				<Setter Property="Opacity"
						TargetName="PressedImage"
						Value="1.0"/>
				<Setter Property="RenderTransform"
						TargetName="Content"
						Value="{Binding Path=ContentPressedTransform,RelativeSource={RelativeSource TemplatedParent}}"/>
				<Setter Property="RenderTransform"
						TargetName="OpenGlyph"
						Value="{Binding Path=OpenPressedTransform,RelativeSource={RelativeSource TemplatedParent}}"/>
			</Trigger>
			<Trigger Property="IsSubmenuOpen"
					 Value="True">
				<Setter Property="NormalOpacity"
						Value="0.0"/>
				<Setter Property="PressedOpacity"
						Value="1.0"/>
				<Setter Property="Opacity"
						TargetName="OpenImage"
						Value="0.0"/>
				<Setter Property="Opacity"
						TargetName="OverflowImage"
						Value="0.0"/>
				<Setter Property="Opacity"
						TargetName="PressedImage"
						Value="1.0"/>
				<Setter Property="RenderTransform"
						TargetName="Content"
						Value="{Binding Path=ContentPressedTransform,RelativeSource={RelativeSource TemplatedParent}}"/>
				<Setter Property="RenderTransform"
						TargetName="OpenGlyph"
						Value="{Binding Path=OpenPressedTransform,RelativeSource={RelativeSource TemplatedParent}}"/>
			</Trigger>
			<Trigger Property="IsSuspendingPopupAnimation"
					 Value="True">
				<Setter Property="PopupAnimation"
						TargetName="PART_Popup"
						Value="None"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<!-- GadgetTopLevelItem Template -->
	<ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type controls:Gadget}, ResourceId=GadgetTopLevelItemTemplateKey}"
					 TargetType="controls:Gadget">
		<Grid>
			<Grid Grid.ColumnSpan="2"
				  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
				<Control Focusable="False"
						 Name="MenuItemNormalBorder"
						 Opacity="{TemplateBinding NormalOpacity}"
						 Template="{TemplateBinding MenuItemNormalBorder}"/>
				<Control Focusable="False"
						 Name="MenuItemHighlightBorder"
						 Opacity="{TemplateBinding HighlightOpacity}"
						 Template="{TemplateBinding MenuItemHighlightBorder}"/>
				<Control Focusable="False"
						 Name="MenuItemPressedBorder"
						 Opacity="{TemplateBinding PressedOpacity}"
						 Template="{TemplateBinding MenuItemPressedBorder}"/>
			</Grid>
			<StackPanel Margin="{TemplateBinding ContentPadding}"
						Name="Content"
						Orientation="Horizontal">
				<documents:PixelSnapper Margin="{TemplateBinding IconMargin}"
										x:Name="Icon"
										VerticalAlignment="Center"
										Visibility="{TemplateBinding IconVisibility}">
					<Image Source="{TemplateBinding Icon}"
						   Stretch="None"/>
				</documents:PixelSnapper>
				<ContentPresenter ContentSource="Header"
								  Grid.Column="2"
								  Margin="{TemplateBinding HeaderMargin}"
								  Name="Header"
								  RecognizesAccessKey="True"
								  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
								  VerticalAlignment="Center"
								  Visibility="{TemplateBinding HeaderVisibility}"/>
			</StackPanel>
			<Grid Background="Transparent"
				  Grid.ColumnSpan="2"
				  Name="PART_MenuItem"/>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="Icon"
					 Value="{x:Null}">
				<Setter Property="Visibility"
						TargetName="Icon"
						Value="Collapsed"/>
			</Trigger>
			<Trigger Property="Header"
					 Value="{x:Null}">
				<Setter Property="Visibility"
						TargetName="Header"
						Value="Collapsed"/>
			</Trigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsHighlighted"
							   Value="True"/>
					<Condition Property="IsHighlightAnimated"
							   Value="True"/>
				</MultiTrigger.Conditions>
				<MultiTrigger.EnterActions>
					<BeginStoryboard>
						<Storyboard>
							<DoubleAnimation Duration="0:0:0.25"
											 Storyboard.TargetProperty="HighlightOpacity"
											 To="1.0"/>
						</Storyboard>
					</BeginStoryboard>
				</MultiTrigger.EnterActions>
				<MultiTrigger.ExitActions>
					<BeginStoryboard>
						<Storyboard>
							<DoubleAnimation Duration="0:0:0.25"
											 Storyboard.TargetProperty="HighlightOpacity"
											 To="0.0"/>
						</Storyboard>
					</BeginStoryboard>
				</MultiTrigger.ExitActions>
			</MultiTrigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsHighlighted"
							   Value="True"/>
					<Condition Property="IsHighlightAnimated"
							   Value="False"/>
				</MultiTrigger.Conditions>
				<Setter Property="HighlightOpacity"
						Value="1.0"/>
			</MultiTrigger>
			<Trigger Property="IsPressed"
					 Value="True">
				<Setter Property="PressedOpacity"
						Value="1.0"/>
				<Setter Property="RenderTransform"
						TargetName="Content"
						Value="{Binding Path=ContentPressedTransform,RelativeSource={RelativeSource TemplatedParent}}"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<!-- GadgetSubmenuHeader Template -->
	<ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type controls:Gadget}, ResourceId=GadgetSubmenuHeaderTemplateKey}"
					 TargetType="controls:Gadget">
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition MinWidth="{Binding Path=IconColumnWidth,RelativeSource={RelativeSource AncestorType=controls:Gadget, AncestorLevel=2}}"
								  SharedSizeGroup="IconColumnGroup"
								  Width="Auto"/>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition SharedSizeGroup="IgtColumnGroup"
								  Width="Auto"/>
				<ColumnDefinition MinWidth="{Binding Path=OpenColumnWidth,RelativeSource={RelativeSource AncestorType=controls:Gadget,AncestorLevel=2}}"
								  SharedSizeGroup="NextColumnGroup"
								  Width="Auto"/>
			</Grid.ColumnDefinitions>
			<StackPanel HorizontalAlignment="Right"
						Orientation="Horizontal">
				<Rectangle Fill="{StaticResource MenuPopupSeparatorShadowBrushKey}"
						   Width="1"/>
				<Rectangle Fill="{StaticResource MenuPopupSeparatorHighlightBrushKey}"
						   Width="1"/>
			</StackPanel>
			<Control Grid.ColumnSpan="4"
					 Name="MenuItemNormalBorder"
					 Opacity="1.0"
					 Template="{TemplateBinding MenuItemNormalBorder}"/>
			<Control Grid.ColumnSpan="4"
					 Name="MenuItemHighlightBorder"
					 Opacity="0.0"
					 Template="{TemplateBinding MenuItemHighlightBorder}"/>
			<Control Grid.ColumnSpan="4"
					 Name="MenuItemPressedBorder"
					 Opacity="0.0"
					 Template="{TemplateBinding MenuItemPressedBorder}"/>
			<documents:PixelSnapper Margin="{Binding Path=SubmenuIconMargin,RelativeSource={RelativeSource AncestorType=controls:Gadget,AncestorLevel=2}}"
									x:Name="Icon"
									VerticalAlignment="Center">
				<Image Source="{TemplateBinding Icon}"
					   Stretch="None"/>
			</documents:PixelSnapper>
			<documents:PixelSnapper Margin="{Binding Path=SubmenuIconMargin,RelativeSource={RelativeSource AncestorType=controls:Gadget,AncestorLevel=2}}"
									x:Name="CheckGlyph"
									VerticalAlignment="Center"
									Visibility="Collapsed">
				<Image Source="{TemplateBinding CheckGlyph}"
					   Stretch="None"/>
			</documents:PixelSnapper>
			<Grid Grid.Column="1"
				  Margin="{Binding Path=SubmenuHeaderMargin,RelativeSource={RelativeSource AncestorType=controls:Gadget,AncestorLevel=2}}"
				  Name="NormalHeader"
				  VerticalAlignment="Center">
				<TextBlock Text="{TemplateBinding Header}"/>
			</Grid>
			<Grid DataContext="{TemplateBinding Header}"
				  Grid.Column="1"
				  Margin="{Binding Path=SubmenuHeaderMargin,RelativeSource={RelativeSource AncestorType=controls:Gadget,AncestorLevel=2}}"
				  Name="ParentHeader"
				  VerticalAlignment="Center"
				  Visibility="Hidden">
				<ContentPresenter ContentSource="Header"
								  RecognizesAccessKey="True">
					<ContentPresenter.RenderTransform>
						<TransformGroup>
							<ScaleTransform ScaleX="1.17"/>
							<TranslateTransform X="1.0"/>
						</TransformGroup>
					</ContentPresenter.RenderTransform>
				</ContentPresenter>
				<ContentPresenter ContentSource="Header"
								  RecognizesAccessKey="True">
					<ContentPresenter.RenderTransform>
						<TransformGroup>
							<ScaleTransform ScaleX="1.17"/>
						</TransformGroup>
					</ContentPresenter.RenderTransform>
				</ContentPresenter>
			</Grid>
			<documents:PixelSnapper Grid.Column="4"
									HorizontalAlignment="Left"
									Margin="{Binding Path=SubmenuOpenPadding,RelativeSource={RelativeSource AncestorType=controls:Gadget,AncestorLevel=2}}"
									VerticalAlignment="Center"
									Visibility="{TemplateBinding OpenVisibility}">
				<Image Source="{TemplateBinding OpenGlyph}"
					   Stretch="None"/>
			</documents:PixelSnapper>
			<Popup AllowsTransparency="true"
				   Focusable="false"
				   HorizontalOffset="{TemplateBinding HorizontalOffset}"
				   IsOpen="{Binding Path=IsSubmenuOpen,RelativeSource={RelativeSource TemplatedParent}}"
				   Name="PART_Popup"
				   Placement="{TemplateBinding Placement}"
				   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
				   VerticalOffset="{TemplateBinding VerticalOffset}">
				<Grid Name="DropDownGrid">
					<Rectangle Fill="{StaticResource MenuPopupBorderBrushKey}"/>
					<Rectangle Fill="{StaticResource MenuPopupBevelBrushKey}"
							   Margin="1"/>
					<Rectangle Fill="{StaticResource MenuPopupBackgroundBrushKey}"
							   Margin="3"/>
					<ScrollViewer CanContentScroll="True"
								  Margin="3"
								  Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=MenuScrollViewer}}">
						<ItemsPresenter KeyboardNavigation.DirectionalNavigation="Cycle"
										KeyboardNavigation.TabNavigation="None"
										Name="PART_ItemsPresenter"
										SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
					</ScrollViewer>
				</Grid>
			</Popup>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="HasDropShadow"
					 SourceName="PART_Popup"
					 Value="True">
				<Setter Property="Margin"
						TargetName="DropDownGrid"
						Value="0,0,5,5"/>
				<Setter Property="Effect"
						TargetName="DropDownGrid"
						Value="{StaticResource DropShadowEffect}"/>
			</Trigger>
			<Trigger Property="Icon"
					 Value="{x:Null}">
				<Setter Property="Visibility"
						TargetName="Icon"
						Value="Collapsed"/>
			</Trigger>
			<Trigger Property="IsChecked"
					 Value="True">
				<Setter Property="Visibility"
						TargetName="CheckGlyph"
						Value="Visible"/>
				<Setter Property="Visibility"
						TargetName="Icon"
						Value="Collapsed"/>
			</Trigger>
			<Trigger Property="IsEnabled"
					 Value="False">
				<Setter Property="Foreground"
						Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
				<Setter Property="Effect"
						TargetName="Icon"
						Value="{StaticResource GrayscaleEffect}"/>
				<Setter Property="Opacity"
						TargetName="Icon"
						Value="0.4"/>
			</Trigger>
			<Trigger Property="IsHighlighted"
					 Value="True">
				<Setter Property="Opacity"
						TargetName="MenuItemNormalBorder"
						Value="0.0"/>
				<Setter Property="Opacity"
						TargetName="MenuItemHighlightBorder"
						Value="1.0"/>
			</Trigger>
			<Trigger Property="IsParent"
					 Value="True">
				<Setter Property="Visibility"
						TargetName="NormalHeader"
						Value="Hidden"/>
				<Setter Property="Visibility"
						TargetName="ParentHeader"
						Value="Visible"/>
			</Trigger>
			<Trigger Property="IsSuspendingPopupAnimation"
					 Value="true">
				<Setter Property="PopupAnimation"
						TargetName="PART_Popup"
						Value="None"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<!-- GadgetSubmenuItem Template -->
	<ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type controls:Gadget}, ResourceId=GadgetSubmenuItemTemplateKey}"
					 TargetType="controls:Gadget">
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition MinWidth="{Binding Path=IconColumnWidth,RelativeSource={RelativeSource AncestorType=controls:Gadget, AncestorLevel=2}}"
								  SharedSizeGroup="IconColumnGroup"
								  Width="Auto"/>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition SharedSizeGroup="IgtColumnGroup"
								  Width="Auto"/>
				<ColumnDefinition MinWidth="{Binding Path=OpenColumnWidth,RelativeSource={RelativeSource AncestorType=controls:Gadget,AncestorLevel=2}}"
								  SharedSizeGroup="NextColumnGroup"
								  Width="Auto"/>
			</Grid.ColumnDefinitions>
			<StackPanel HorizontalAlignment="Right"
						Orientation="Horizontal">
				<Rectangle Fill="{StaticResource MenuPopupSeparatorShadowBrushKey}"
						   Width="1"/>
				<Rectangle Fill="{StaticResource MenuPopupSeparatorHighlightBrushKey}"
						   Width="1"/>
			</StackPanel>
			<Control Grid.ColumnSpan="4"
					 Name="MenuItemNormalBorder"
					 Opacity="1.0"
					 Template="{TemplateBinding MenuItemNormalBorder}"/>
			<Control Grid.ColumnSpan="4"
					 Name="MenuItemHighlightBorder"
					 Opacity="0.0"
					 Template="{TemplateBinding MenuItemHighlightBorder}"/>
			<Control Grid.ColumnSpan="4"
					 Name="MenuItemPressedBorder"
					 Opacity="0.0"
					 Template="{TemplateBinding MenuItemPressedBorder}"/>
			<documents:PixelSnapper Margin="{Binding Path=SubmenuIconMargin,RelativeSource={RelativeSource AncestorType=controls:Gadget,AncestorLevel=2}}"
									x:Name="Icon"
									VerticalAlignment="Center">
				<Image Source="{TemplateBinding Icon}"
					   Stretch="None"/>
			</documents:PixelSnapper>
			<documents:PixelSnapper Margin="{Binding Path=SubmenuIconMargin,RelativeSource={RelativeSource AncestorType=controls:Gadget,AncestorLevel=2}}"
									x:Name="CheckGlyph"
									VerticalAlignment="Center"
									Visibility="Collapsed">
				<Image Source="{TemplateBinding CheckGlyph}"
					   Stretch="None"/>
			</documents:PixelSnapper>
			<Grid Grid.Column="1"
				  Margin="{Binding Path=SubmenuHeaderMargin,RelativeSource={RelativeSource AncestorType=controls:Gadget,AncestorLevel=2}}"
				  Name="NormalHeader"
				  VerticalAlignment="Center">
				<ContentPresenter ContentSource="Header"
								  RecognizesAccessKey="True"/>
			</Grid>
			<Grid DataContext="{TemplateBinding Header}"
				  Grid.Column="1"
				  Margin="{Binding Path=SubmenuHeaderMargin,RelativeSource={RelativeSource AncestorType=controls:Gadget,AncestorLevel=2}}"
				  Name="ParentHeader"
				  VerticalAlignment="Center"
				  Visibility="Hidden">
				<ContentPresenter ContentSource="Header"
								  RecognizesAccessKey="True">
					<ContentPresenter.RenderTransform>
						<TransformGroup>
							<ScaleTransform ScaleX="1.17"/>
							<TranslateTransform X="1.0"/>
						</TransformGroup>
					</ContentPresenter.RenderTransform>
				</ContentPresenter>
				<ContentPresenter ContentSource="Header"
								  RecognizesAccessKey="True">
					<ContentPresenter.RenderTransform>
						<TransformGroup>
							<ScaleTransform ScaleX="1.17"/>
						</TransformGroup>
					</ContentPresenter.RenderTransform>
				</ContentPresenter>
			</Grid>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="Icon"
					 Value="{x:Null}">
				<Setter Property="Visibility"
						TargetName="Icon"
						Value="Collapsed"/>
			</Trigger>
			<Trigger Property="IsChecked"
					 Value="True">
				<Setter Property="Visibility"
						TargetName="CheckGlyph"
						Value="Visible"/>
				<Setter Property="Visibility"
						TargetName="Icon"
						Value="Collapsed"/>
			</Trigger>
			<Trigger Property="IsEnabled"
					 Value="False">
				<Setter Property="Foreground"
						Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
				<Setter Property="Effect"
						TargetName="Icon"
						Value="{StaticResource GrayscaleEffect}"/>
				<Setter Property="Opacity"
						TargetName="Icon"
						Value="0.4"/>
			</Trigger>
			<Trigger Property="IsHighlighted"
					 Value="True">
				<Setter Property="Opacity"
						TargetName="MenuItemNormalBorder"
						Value="0.0"/>
				<Setter Property="Opacity"
						TargetName="MenuItemHighlightBorder"
						Value="1.0"/>
			</Trigger>
			<Trigger Property="IsParent"
					 Value="True">
				<Setter Property="Visibility"
						TargetName="NormalHeader"
						Value="Hidden"/>
				<Setter Property="Visibility"
						TargetName="ParentHeader"
						Value="Visible"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<!-- Gadget Style -->
	<Style TargetType="controls:Gadget">
		<Style.Triggers>
			<Trigger Property="Role"
					 Value="TopLevelHeader">
				<Setter Property="OpenVisibility"
						Value="Visible"/>
				<Setter Property="Template"
						Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type controls:Gadget}, ResourceId=GadgetTopLevelHeaderTemplate}}"/>
			</Trigger>
			<Trigger Property="Role"
					 Value="TopLevelItem">
				<Setter Property="OpenVisibility"
						Value="Collapsed"/>
				<Setter Property="Template"
						Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type controls:Gadget}, ResourceId=GadgetTopLevelItemTemplateKey}}"/>
			</Trigger>
			<Trigger Property="Role"
					 Value="SubmenuHeader">
				<Setter Property="HorizontalOffset"
						Value="-3"/>
				<Setter Property="OpenGlyph"
						Value="/Teraque.PresentationFramework;Component/Resources/MenuItem Next.png"/>
				<Setter Property="OpenVisibility"
						Value="Visible"/>
				<Setter Property="Placement"
						Value="Right"/>
				<Setter Property="Template"
						Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type controls:Gadget}, ResourceId=GadgetSubmenuHeaderTemplateKey}}"/>
				<Setter Property="VerticalOffset"
						Value="-3"/>
			</Trigger>
		</Style.Triggers>
		<Setter Property="ButtonNormalBorder"
				Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type controls:Gadget}, ResourceId=NormalBorderTemplateKey}}"/>
		<Setter Property="CheckGlyph"
				Value="/Teraque.PresentationFramework;Component/Resources/MenuItem Check.png"/>
		<Setter Property="FocusVisualStyle"
				Value="{x:Null}"/>
		<Setter Property="FontFamily"
				Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}"/>
		<Setter Property="FontSize"
				Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}"/>
		<Setter Property="FontStyle"
				Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}"/>
		<Setter Property="FontWeight"
				Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}"/>
		<Setter Property="Foreground"
				Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"/>
		<Setter Property="IconColumnWidth"
				Value="28"/>
		<Setter Property="MenuItemHighlightBorder"
				Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type controls:Gadget}, ResourceId=MenuItemHighlightBorderTemplateKey}}"/>
		<Setter Property="MenuItemNormalBorder"
				Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type controls:Gadget}, ResourceId=NormalBorderTemplateKey}}"/>
		<Setter Property="OpenColumnWidth"
				Value="14"/>
		<Setter Property="OpenVisibility"
				Value="Collapsed"/>
		<Setter Property="OpenPressedTransform"
				Value="{StaticResource ButtonPressTransformKey}"/>
		<Setter Property="SnapsToDevicePixels"
				Value="True"/>
		<Setter Property="SubmenuHeaderMargin"
				Value="4,2,38,4"/>
		<Setter Property="SubmenuIconMargin"
				Value="3,3,0,3"/>
		<Setter Property="Template"
				Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type controls:Gadget}, ResourceId=GadgetSubmenuItemTemplateKey}}"/>
	</Style>
	<!-- BreadcrumbBar Style -->
	<Style TargetType="controls:BreadcrumbBar">
		<Style.Resources>
			<!-- BreadcrumbBar BreadcrumbButtonHighlightBackground Brush -->
			<LinearGradientBrush EndPoint="0.0,1.0"
								 x:Key="BreadcrumbButtonHighlightBackgroundBrushKey"
								 StartPoint="0.0,0.0">
				<GradientBrush.GradientStops>
					<GradientStop Color="#D3EDFB"
								  Offset="0.00"/>
					<GradientStop Color="#C6E9FA"
								  Offset="0.44"/>
					<GradientStop Color="#A2DAF7"
								  Offset="0.44"/>
					<GradientStop Color="#89D0F5"
								  Offset="1.00"/>
				</GradientBrush.GradientStops>
			</LinearGradientBrush>
			<!-- BreadcrumbBar BreadcrumbButtonHighlightInnerBorder Brush -->
			<LinearGradientBrush EndPoint="0.0,1.0"
								 x:Key="BreadcrumbButtonHighlightInnerBorderBrushKey"
								 StartPoint="0.0,0.0">
				<GradientBrush.GradientStops>
					<GradientStop Color="#FAFDFE"
								  Offset="0.00"/>
					<GradientStop Color="#EAF6FD"
								  Offset="0.44"/>
					<GradientStop Color="#DAF0FC"
								  Offset="0.44"/>
					<GradientStop Color="#C4E7FA"
								  Offset="1.00"/>
				</GradientBrush.GradientStops>
			</LinearGradientBrush>
			<!-- BreadcrumbBar BreadcrumbItemDisabledBackground Brush -->
			<LinearGradientBrush EndPoint="0.0,1.0"
								 x:Key="BreadcrumbItemDisabledBackgroundBrushKey"
								 StartPoint="0.0,0.0">
				<GradientBrush.GradientStops>
					<GradientStop Color="#F2F2F2"
								  Offset="0.00"/>
					<GradientStop Color="#EAEAEA"
								  Offset="0.50"/>
					<GradientStop Color="#DCDCDC"
								  Offset="0.50"/>
					<GradientStop Color="#CFCFCF"
								  Offset="1.00"/>
				</GradientBrush.GradientStops>
			</LinearGradientBrush>
			<!-- BreadcrumbBar BreadcrumbItemDisabledInnerBorder Brush -->
			<LinearGradientBrush EndPoint="0.0,1.0"
								 x:Key="BreadcrumbItemDisabledInnerBorderBrushKey"
								 StartPoint="0.0,0.0">
				<GradientBrush.GradientStops>
					<GradientStop Color="#FCFCFC"
								  Offset="0.00"/>
					<GradientStop Color="#FAFAFA"
								  Offset="0.50"/>
					<GradientStop Color="#F6F6F6"
								  Offset="0.50"/>
					<GradientStop Color="#F3F3F3"
								  Offset="1.00"/>
				</GradientBrush.GradientStops>
			</LinearGradientBrush>
			<!-- BreadcrumbBar BreadcrumbItemHighlightBackground Brush -->
			<LinearGradientBrush EndPoint="0.0,1.0"
								 x:Key="BreadcrumbItemHighlightBackgroundBrushKey"
								 StartPoint="0.0,0.0">
				<GradientBrush.GradientStops>
					<GradientStop Color="#EAF6FD"
								  Offset="0.00"/>
					<GradientStop Color="#D7EFFC"
								  Offset="0.49"/>
					<GradientStop Color="#BDE6FD"
								  Offset="0.50"/>
					<GradientStop Color="#A6D9F4"
								  Offset="1.00"/>
				</GradientBrush.GradientStops>
			</LinearGradientBrush>
			<!-- BreadcrumbBar BreadcrumbItemHighlightInnerBorder Brush -->
			<LinearGradientBrush EndPoint="0.0,1.0"
								 x:Key="BreadcrumbItemHighlightInnerBorderBrushKey"
								 StartPoint="0.0,0.0">
				<GradientBrush.GradientStops>
					<GradientStop Color="#FAFDFE"
								  Offset="0.00"/>
					<GradientStop Color="#F5FBFE"
								  Offset="0.50"/>
					<GradientStop Color="#EEF9FE"
								  Offset="0.50"/>
					<GradientStop Color="#E8F5FC"
								  Offset="1.00"/>
				</GradientBrush.GradientStops>
			</LinearGradientBrush>
			<!-- BreadcrumbBar BreadcrumbItemPressFill Brush -->
			<LinearGradientBrush EndPoint="0.0,1.0"
								 x:Key="BreadcrumbItemPressFillBrushKey"
								 StartPoint="0.0,0.0">
				<LinearGradientBrush.GradientStops>
					<GradientStop Color="#C2E4F6"
								  Offset="0.0"/>
					<GradientStop Color="#C2E4F6"
								  Offset="0.50"/>
					<GradientStop Color="#A9D9F2"
								  Offset="0.50"/>
					<GradientStop Color="#90CBEB"
								  Offset="1.00"/>
				</LinearGradientBrush.GradientStops>
			</LinearGradientBrush>
			<!-- BreadcrumbBar ProgressInnerBorder Brush -->
			<LinearGradientBrush EndPoint="0.0,1.0"
								 x:Key="ProgressInnerBorderBrushKey"
								 StartPoint="0.0,0.0">
				<LinearGradientBrush.GradientStops>
					<GradientStop Color="#F7E4FFE4"
								  Offset="0.0"/>
					<GradientStop Color="#F487EF93"
								  Offset="1.00"/>
				</LinearGradientBrush.GradientStops>
			</LinearGradientBrush>
			<!-- BreadcrumbBar ProgressBottomBackground Brush -->
			<LinearGradientBrush EndPoint="0.0,1.0"
								 x:Key="ProgressBottomBackgroundBrushKey"
								 StartPoint="0.0,0.0">
				<LinearGradientBrush.GradientStops>
					<GradientStop Color="#DB6DE782"
								  Offset="0.17"/>
					<GradientStop Color="#DA6FE983"
								  Offset="0.50"/>
					<GradientStop Color="#D971EC83"
								  Offset="0.83"/>
				</LinearGradientBrush.GradientStops>
			</LinearGradientBrush>
			<!-- BreadcrumbBar ProgressLowerLeftEdge Brush -->
			<LinearGradientBrush EndPoint="1.0,0.0"
								 x:Key="ProgressLowerLeftEdgeBrushKey"
								 StartPoint="0.0,0.0">
				<LinearGradientBrush.GradientStops>
					<GradientStop Color="Transparent"
								  Offset="0.0"/>
					<GradientStop Color="#0A000000"
								  Offset="0.05"/>
					<GradientStop Color="#16000000"
								  Offset="0.18"/>
					<GradientStop Color="#0A000000"
								  Offset="0.50"/>
					<GradientStop Color="Transparent"
								  Offset="1.00"/>
				</LinearGradientBrush.GradientStops>
			</LinearGradientBrush>
			<!-- BreadcrumbBar ProgressLowerRightEdge Brush -->
			<LinearGradientBrush EndPoint="1.0,0.0"
								 x:Key="ProgressLowerRightEdgeBrushKey"
								 StartPoint="0.0,0.0">
				<LinearGradientBrush.GradientStops>
					<GradientStop Color="Transparent"
								  Offset="0.0"/>
					<GradientStop Color="#0A000000"
								  Offset="0.50"/>
					<GradientStop Color="#16000000"
								  Offset="0.81"/>
					<GradientStop Color="#0A000000"
								  Offset="0.95"/>
					<GradientStop Color="Transparent"
								  Offset="1.00"/>
				</LinearGradientBrush.GradientStops>
			</LinearGradientBrush>
			<!-- BreadcrumbBar ProgressUpperLeftEdge Brush -->
			<LinearGradientBrush EndPoint="1.0,0.0"
								 x:Key="ProgressUpperLeftEdgeBrushKey"
								 StartPoint="0.0,0.0">
				<LinearGradientBrush.GradientStops>
					<GradientStop Color="#4080FF80"
								  Offset="0.00"/>
					<GradientStop Color="#2080FF80"
								  Offset="0.27"/>
					<GradientStop Color="Transparent"
								  Offset="0.32"/>
					<GradientStop Color="Transparent"
								  Offset="1.00"/>
				</LinearGradientBrush.GradientStops>
			</LinearGradientBrush>
			<!-- BreadcrumbBar ProgressTopBackground Brush -->
			<LinearGradientBrush EndPoint="0.0,1.0"
								 x:Key="ProgressTopBackgroundBrushKey"
								 StartPoint="0.0,0.0">
				<LinearGradientBrush.GradientStops>
					<GradientStop Color="#DAE1FFE1"
								  Offset="0.10"/>
					<GradientStop Color="#DBDDFBDF"
								  Offset="0.30"/>
					<GradientStop Color="#DCCEF8D5"
								  Offset="0.50"/>
					<GradientStop Color="#DCC8F5D0"
								  Offset="0.70"/>
					<GradientStop Color="#DCC5F5CE"
								  Offset="0.90"/>
				</LinearGradientBrush.GradientStops>
			</LinearGradientBrush>
			<!-- BreadcrumbBar ProgressUpperRightEdge Brush -->
			<LinearGradientBrush EndPoint="1.0,0.0"
								 x:Key="ProgressUpperRightEdgeBrushKey"
								 StartPoint="0.0,0.0">
				<LinearGradientBrush.GradientStops>
					<GradientStop Color="Transparent"
								  Offset="0.0"/>
					<GradientStop Color="Transparent"
								  Offset="0.68"/>
					<GradientStop Color="#2080FF80"
								  Offset="0.72"/>
					<GradientStop Color="#4080FF80"
								  Offset="1.00"/>
				</LinearGradientBrush.GradientStops>
			</LinearGradientBrush>
			<!-- BreadcrumbBar SearchBottomBackground Brush -->
			<LinearGradientBrush EndPoint="0.0,1.0"
								 x:Key="SearchBottomBackgroundBrushKey"
								 StartPoint="0.0,0.0">
				<LinearGradientBrush.GradientStops>
					<GradientStop Color="#DAE1E1E1"
								  Offset="0.13"/>
					<GradientStop Color="#DAE1E1E1"
								  Offset="0.38"/>
					<GradientStop Color="#D9E3E3E3"
								  Offset="0.63"/>
					<GradientStop Color="#D9E6E6E6"
								  Offset="0.86"/>
				</LinearGradientBrush.GradientStops>
			</LinearGradientBrush>
			<!-- BreadcrumbBar SearchInnerBorder Brush -->
			<LinearGradientBrush EndPoint="0.0,1.0"
								 x:Key="SearchInnerBorderBrushKey"
								 StartPoint="0.0,0.0">
				<LinearGradientBrush.GradientStops>
					<GradientStop Color="#F7F8F8F8"
								  Offset="0.00"/>
					<GradientStop Color="#F4F3F3F3"
								  Offset="1.00"/>
				</LinearGradientBrush.GradientStops>
			</LinearGradientBrush>
			<!-- BreadcrumbBar SearchOuterBorderBrush -->
			<LinearGradientBrush EndPoint="0.0,1.0"
								 x:Key="SearchOuterBorderBrushKey"
								 StartPoint="0.0,0.0">
				<GradientStop Color="#F7D4D4D4"
							  Offset="0.0"/>
				<GradientStop Color="#D3E4E4E4"
							  Offset="1.0"/>
			</LinearGradientBrush>
			<!-- BreadcrumbBar SearchTopBackground Brush -->
			<LinearGradientBrush EndPoint="0.0,1.0"
								 x:Key="SearchTopBackgroundBrushKey"
								 StartPoint="0.0,0.0">
				<LinearGradientBrush.GradientStops>
					<GradientStop Color="#DAFCFCFC"
								  Offset="0.10"/>
					<GradientStop Color="#DAF5F5F5"
								  Offset="0.30"/>
					<GradientStop Color="#DAF0F0F0"
								  Offset="0.50"/>
					<GradientStop Color="#DAEBEBEB"
								  Offset="0.70"/>
					<GradientStop Color="#DAEAEAEA"
								  Offset="0.90"/>
				</LinearGradientBrush.GradientStops>
			</LinearGradientBrush>
			<!-- BreadcrumbBar ProgressHighlight Brush -->
			<RadialGradientBrush x:Key="ProgressHighlightBrushKey"
								 RadiusY="2.0">
				<GradientStop Color="#70FFFFFF"
							  Offset="0.00"/>
				<GradientStop Color="#40FFFFFF"
							  Offset="0.40"/>
				<GradientStop Color="Transparent"
							  Offset="1.00"/>
			</RadialGradientBrush>
			<!-- BreadcrumbBar BreadcrumbButtonHighlightOuterBorder Brush -->
			<SolidColorBrush Color="#16588B"
							 x:Key="BreadcrumbButtonHighlightOuterBorderBrushKey"/>
			<!-- BreadcrumbBar BreadcrumbItemDisabledOuterBorder Brush -->
			<SolidColorBrush Color="#8E8F8F"
							 x:Key="BreadcrumbItemDisabledOuterBorderBrushKey"/>
			<!-- BreadcrumbBar BreadcrumbItemHighlightOuterBorder Brush -->
			<SolidColorBrush Color="#3C7FB1"
							 x:Key="BreadcrumbItemHighlightOuterBorderBrushKey"/>
			<!-- BreadcrumbBar BreadcrumbItemPressOuterBorder Brush -->
			<SolidColorBrush Color="#2C628B"
							 x:Key="BreadcrumbItemPressOuterBorderBrushKey"/>
			<!-- BreadcrumbBar ButtonBorder Brush -->
			<SolidColorBrush Color="#8E0E1114"
							 x:Key="ButtonBorderBrushKey"/>
			<!-- BreadcrumbBar NormalBackground Brush -->
			<SolidColorBrush Color="#B9FFFFFF"
							 x:Key="NormalBackgroundBrushKey"/>
			<!-- BreadcrumbBar ProgressBackground Brush -->
			<SolidColorBrush Color="#DC6AE581"
							 x:Key="ProgressBackgroundBrushKey"/>
			<!-- BreadcrumbBar SearchBackground Brush -->
			<SolidColorBrush Color="#DAE0E0E0"
							 x:Key="SearchBackgroundBrushKey"/>
			<!-- BreadcrumbBar TopLevelButtonHighlight ControlTemplate -->
			<ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type controls:Gadget}, ResourceId=TopLevelButtonHighlightTemplateKey}"
							 TargetType="Control">
				<Border BorderBrush="{StaticResource BreadcrumbItemHighlightOuterBorderBrushKey}"
						BorderThickness="1,0,0,0"
						IsEnabled="{Binding Path=IsMouseOverButton,RelativeSource={RelativeSource AncestorType=controls:Gadget}}"
						Name="OuterBorder"
						SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
					<Border Background="{StaticResource BreadcrumbItemHighlightBackgroundBrushKey}"
							BorderBrush="{StaticResource BreadcrumbItemHighlightInnerBorderBrushKey}"
							BorderThickness="1"
							Name="InnerBorder"/>
				</Border>
				<ControlTemplate.Triggers>
					<Trigger Property="IsEnabled"
							 SourceName="OuterBorder"
							 Value="False">
						<Setter Property="Background"
								TargetName="InnerBorder"
								Value="{StaticResource BreadcrumbItemDisabledBackgroundBrushKey}"/>
						<Setter Property="BorderBrush"
								TargetName="InnerBorder"
								Value="{StaticResource BreadcrumbItemDisabledInnerBorderBrushKey}"/>
						<Setter Property="BorderBrush"
								TargetName="OuterBorder"
								Value="{StaticResource BreadcrumbItemDisabledOuterBorderBrushKey}"/>
					</Trigger>
				</ControlTemplate.Triggers>
			</ControlTemplate>
			<!-- BreadcrumbBar TopLevelButtonPressedBorder ControlTemplate -->
			<ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type controls:Gadget}, ResourceId=TopLevelButtonPressedBorderTemplateKey}"
							 TargetType="Control">
				<Border Background="{StaticResource BreadcrumbItemPressFillBrushKey}"
						BorderBrush="{StaticResource BreadcrumbItemPressOuterBorderBrushKey}"
						BorderThickness="1,0,0,0"
						SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
					<Grid>
						<Rectangle Fill="#5C000000"
								   HorizontalAlignment="Left"
								   VerticalAlignment="Stretch"
								   Width="1"/>
						<Rectangle Fill="#2E000000"
								   HorizontalAlignment="Left"
								   Margin="1,0,0,0"
								   VerticalAlignment="Stretch"
								   Width="1"/>
						<Rectangle Fill="#5C000000"
								   Height="1"
								   HorizontalAlignment="Stretch"
								   VerticalAlignment="Top"/>
						<Rectangle Fill="#2E000000"
								   Height="1"
								   HorizontalAlignment="Stretch"
								   Margin="0,1,0,0"
								   VerticalAlignment="Top"/>
					</Grid>
				</Border>
			</ControlTemplate>
			<!-- BreadcrumbBar TopLevelMenuItemHighlight ControlTemplate -->
			<ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type controls:Gadget}, ResourceId=TopLevelMenuItemHighlightTemplateKey}"
							 TargetType="Control">
				<Border BorderBrush="{StaticResource BreadcrumbItemHighlightOuterBorderBrushKey}"
						BorderThickness="1,0,1,0"
						SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
					<Border Background="{StaticResource BreadcrumbItemHighlightBackgroundBrushKey}"
							BorderBrush="{StaticResource BreadcrumbItemHighlightInnerBorderBrushKey}"
							BorderThickness="1"/>
				</Border>
			</ControlTemplate>
			<!-- BreadcrumbBar TopLevelMenuItemPressedBorder ControlTemplate -->
			<ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type controls:Gadget}, ResourceId=TopLevelMenuItemPressedBorderTemplateKey}"
							 TargetType="Control">
				<Border Background="{StaticResource BreadcrumbItemPressFillBrushKey}"
						BorderBrush="{StaticResource BreadcrumbItemPressOuterBorderBrushKey}"
						BorderThickness="1,0,1,0"
						SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
					<Grid>
						<Rectangle Fill="#5C000000"
								   HorizontalAlignment="Left"
								   VerticalAlignment="Stretch"
								   Width="1"/>
						<Rectangle Fill="#2E000000"
								   HorizontalAlignment="Left"
								   Margin="1,0,0,0"
								   VerticalAlignment="Stretch"
								   Width="1"/>
						<Rectangle Fill="#5C000000"
								   Height="1"
								   HorizontalAlignment="Stretch"
								   VerticalAlignment="Top"/>
						<Rectangle Fill="#2E000000"
								   Height="1"
								   HorizontalAlignment="Stretch"
								   Margin="0,1,0,0"
								   VerticalAlignment="Top"/>
					</Grid>
				</Border>
			</ControlTemplate>
			<!-- HistoryItem DataTemplate -->
			<DataTemplate x:Key="HistoryItemTemplateKey">
				<StackPanel Orientation="Horizontal">
					<documents:PixelSnapper Margin="2,0,4,0">
						<Image Source="{Binding Path=ImageSource}"
							   Stretch="None"/>
					</documents:PixelSnapper>
					<TextBlock Text="{Binding Converter={StaticResource UriConverterKey}, Path=Source}"/>
				</StackPanel>
			</DataTemplate>
			<!-- BreadcrumbBar Gadget Style -->
			<Style BasedOn="{StaticResource {x:Type controls:Gadget}}"
				   TargetType="controls:Gadget">
				<Style.Triggers>
					<Trigger Property="Role"
							 Value="TopLevelHeader">
						<Setter Property="ContentPressedTransform"
								Value="{StaticResource ButtonPressTransformKey}"/>
						<Setter Property="IsButton"
								Value="True"/>
						<Setter Property="IsHighlightAnimated"
								Value="True"/>
						<Setter Property="MenuItemHighlightBorder"
								Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type controls:Gadget}, ResourceId=TopLevelMenuItemHighlightTemplateKey}}"/>
						<Setter Property="MenuItemPressedBorder"
								Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type controls:Gadget}, ResourceId=TopLevelMenuItemPressedBorderTemplateKey}}"/>
						<Setter Property="OpenGlyph"
								Value="/Teraque.PresentationFramework;Component/Resources/BreadcrumbItem Next.png"/>
						<Setter Property="OpenPadding"
								Value="3,0,3,0"/>
						<Setter Property="PressedGlyph"
								Value="/Teraque.PresentationFramework;Component/Resources/BreadcrumbItem Drop Down.png"/>
					</Trigger>
					<Trigger Property="Role"
							 Value="TopLevelItem">
						<Setter Property="IconVisibility"
								Value="Collapsed"/>
						<Setter Property="IsHighlightAnimated"
								Value="True"/>
						<Setter Property="MenuItemHighlightBorder"
								Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type controls:Gadget}, ResourceId=TopLevelMenuItemHighlightTemplateKey}}"/>
						<Setter Property="MenuItemPressedBorder"
								Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type controls:Gadget}, ResourceId=TopLevelMenuItemPressedBorderTemplateKey}}"/>
					</Trigger>
				</Style.Triggers>
				<Setter Property="FontFamily"
						Value="{DynamicResource {x:Static SystemFonts.IconFontFamilyKey}}"/>
				<Setter Property="FontSize"
						Value="{DynamicResource {x:Static SystemFonts.IconFontSizeKey}}"/>
				<Setter Property="FontStyle"
						Value="{DynamicResource {x:Static SystemFonts.IconFontStyleKey}}"/>
				<Setter Property="FontWeight"
						Value="{DynamicResource {x:Static SystemFonts.IconFontWeightKey}}"/>
				<Setter Property="HeaderMargin"
						Value="4,1,3,3"/>
				<Setter Property="IconColumnWidth"
						Value="30"/>
				<Setter Property="OpenColumnWidth"
						Value="95"/>
				<Setter Property="SubmenuHeaderMargin"
						Value="6,2,0,3"/>
				<Setter Property="SubmenuIconMargin"
						Value="6,2,0,3"/>
				<Setter Property="OpenPressedTransform"
						Value="{x:Null}"/>
			</Style>
			<!-- BreadcrumbBar BreadcrumbItem -->
			<Style BasedOn="{StaticResource {x:Type controls:Gadget}}"
				   TargetType="controls:BreadcrumbItem">
				<Style.Triggers>
					<Trigger Property="Role"
							 Value="TopLevelHeader">
						<Setter Property="ButtonHighlightBorder"
								Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type controls:Gadget}, ResourceId=TopLevelButtonHighlightTemplateKey}}"/>
						<Setter Property="ButtonPressedBorder"
								Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type controls:Gadget}, ResourceId=TopLevelButtonPressedBorderTemplateKey}}"/>
						<Setter Property="HorizontalOffset"
								Value="-34"/>
						<Setter Property="IconVisibility"
								Value="Collapsed"/>
						<Setter Property="Placement"
								Value="Right"/>
						<Setter Property="VerticalOffset"
								Value="{Binding ActualHeight,RelativeSource={RelativeSource Self}}"/>
					</Trigger>
				</Style.Triggers>
			</Style>
			<!-- BreadcrumbBar ButtonBase -->
			<Style x:Key="BaseButtonStyle"
				   TargetType="ButtonBase">
				<Setter Property="Background"
						Value="Transparent"/>
				<Setter Property="Foreground"
						Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
				<Setter Property="HorizontalContentAlignment"
						Value="Center"/>
				<Setter Property="VerticalContentAlignment"
						Value="Center"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="ButtonBase">
							<Grid>
								<Border Background="{TemplateBinding Background}"
										BorderBrush="{TemplateBinding BorderBrush}"
										BorderThickness="{TemplateBinding BorderThickness}"
										SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
								<Border BorderBrush="{StaticResource BreadcrumbButtonHighlightOuterBorderBrushKey}"
										BorderThickness="1,0,0,0"
										Name="MouseOverButton"
										Opacity="0"
										SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
									<Border Background="{StaticResource BreadcrumbButtonHighlightBackgroundBrushKey}"
											BorderBrush="{StaticResource BreadcrumbButtonHighlightInnerBorderBrushKey}"
											BorderThickness="1"
											Name="MouseOverInnerBorder"/>
								</Border>
								<Border Background="{StaticResource BreadcrumbItemPressFillBrushKey}"
										BorderBrush="#1D415C"
										BorderThickness="1,0,0,0"
										Name="MousePressButton"
										Opacity="0"
										SnapsToDevicePixels="True">
									<Grid>
										<Rectangle Fill="#6A8799"
												   Height="1"
												   HorizontalAlignment="Stretch"
												   VerticalAlignment="Top"/>
										<Rectangle Fill="#719CB3"
												   Height="1"
												   HorizontalAlignment="Stretch"
												   Margin="1,0,1,0"
												   VerticalAlignment="Top"/>
										<Rectangle Fill="#A9C6D6"
												   Height="1"
												   HorizontalAlignment="Stretch"
												   Margin="1,1,1,0"
												   VerticalAlignment="Top"/>
										<Rectangle Fill="#B9D9EC"
												   Height="1"
												   HorizontalAlignment="Stretch"
												   Margin="1,2,1,0"
												   VerticalAlignment="Top"/>
									</Grid>
								</Border>
								<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
												  Name="ContentPresenter"
												  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger Property="IsMouseOver"
										 Value="True">
									<Trigger.EnterActions>
										<BeginStoryboard>
											<Storyboard>
												<DoubleAnimation Duration="0:0:0.25"
																 Storyboard.TargetName="MouseOverButton"
																 Storyboard.TargetProperty="Opacity"
																 To="1.0"/>
											</Storyboard>
										</BeginStoryboard>
									</Trigger.EnterActions>
									<Trigger.ExitActions>
										<BeginStoryboard>
											<Storyboard>
												<DoubleAnimation Duration="0:0:0.25"
																 Storyboard.TargetName="MouseOverButton"
																 Storyboard.TargetProperty="Opacity"
																 To="0.0"/>
											</Storyboard>
										</BeginStoryboard>
									</Trigger.ExitActions>
								</Trigger>
								<Trigger Property="IsPressed"
										 Value="True">
									<Setter Property="Opacity"
											TargetName="MousePressButton"
											Value="1.0"/>
									<Setter Property="RenderTransform"
											TargetName="ContentPresenter"
											Value="{StaticResource ButtonPressTransformKey}"/>
								</Trigger>
								<Trigger Property="ToggleButton.IsChecked"
										 Value="True">
									<Setter Property="Opacity"
											TargetName="MousePressButton"
											Value="1.0"/>
									<Setter Property="RenderTransform"
											TargetName="ContentPresenter"
											Value="{StaticResource ButtonPressTransformKey}"/>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<!-- BreadcrumbBar Button Style -->
			<Style BasedOn="{StaticResource BaseButtonStyle}"
				   TargetType="Button"/>
			<!-- BreadcrumbBar TextBox Style -->
			<Style x:Key="TextBoxStyleKey"
				   TargetType="TextBox">
				<Setter Property="AllowDrop"
						Value="true"/>
				<Setter Property="HorizontalContentAlignment"
						Value="Left"/>
				<Setter Property="OverridesDefaultStyle"
						Value="true"/>
				<Setter Property="FocusVisualStyle"
						Value="{x:Null}"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="TextBox">
							<ScrollViewer Focusable="false"
										  HorizontalScrollBarVisibility="Hidden"
										  x:Name="PART_ContentHost"
										  VerticalScrollBarVisibility="Hidden"/>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
				<Setter Property="Visibility"
						Value="Hidden"/>
			</Style>
			<!-- BreadcrumbBar HistoryElement Style -->
			<Style x:Key="{x:Type controls:HighlightElement}"
				   TargetType="{x:Type controls:HighlightElement}">
				<Setter Property="Background"
						Value="Transparent"/>
				<Setter Property="FocusVisualStyle"
						Value="{x:Null}"/>
				<Setter Property="HorizontalContentAlignment"
						Value="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
				<Setter Property="Padding"
						Value="3,0"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type controls:HighlightElement}">
							<Border Background="{TemplateBinding Background}"
									BorderBrush="{TemplateBinding BorderBrush}"
									BorderThickness="{TemplateBinding BorderThickness}"
									Name="Border"
									Padding="{TemplateBinding Padding}"
									SnapsToDevicePixels="true">
								<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
												  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
												  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
							</Border>
							<ControlTemplate.Triggers>
								<Trigger Property="IsHighlighted"
										 Value="true">
									<Setter Property="Background"
											TargetName="Border"
											Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
									<Setter Property="Foreground"
											Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
								</Trigger>
								<Trigger Property="IsEnabled"
										 Value="false">
									<Setter Property="Foreground"
											Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
				<Setter Property="VerticalContentAlignment"
						Value="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
			</Style>
			<!-- BreadcrumbBar OverflowItem Style -->
			<Style BasedOn="{StaticResource {x:Type controls:Gadget}}"
				   TargetType="controls:OverflowItem">
				<Style.Triggers>
					<Trigger Property="Role"
							 Value="TopLevelHeader">
						<Setter Property="OverflowGlyph"
								Value="/Teraque.PresentationFramework;Component/Resources/Breadcrumb Overflow.png"/>
					</Trigger>
				</Style.Triggers>
			</Style>
			<!-- BreadcrumbBar GadgetBar Style -->
			<Style TargetType="controls:GadgetBar">
				<Setter Property="OverridesDefaultStyle"
						Value="True"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate>
							<ItemsPresenter/>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
				<Setter Property="ItemsPanel">
					<Setter.Value>
						<ItemsPanelTemplate>
							<controls:BreadcrumbPanel Background="Transparent"/>
						</ItemsPanelTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<!-- BreadcrumbBar ToggleButton Style -->
			<Style BasedOn="{StaticResource BaseButtonStyle}"
				   TargetType="ToggleButton"/>
		</Style.Resources>
		<Setter Property="Grid.IsSharedSizeScope"
				Value="True"/>
		<Setter Property="Background"
				Value="Transparent"/>
		<Setter Property="BorderBrush"
				Value="{StaticResource TravelBarOuterBorderBrushKey}"/>
		<Setter Property="MaxHistoryHeight"
				Value="228"/>
		<Setter Property="KeyboardNavigation.DirectionalNavigation"
				Value="Cycle"/>
		<Setter Property="KeyboardNavigation.TabNavigation"
				Value="Once"/>
		<Setter Property="FontFamily"
				Value="{DynamicResource {x:Static SystemFonts.IconFontFamilyKey}}"/>
		<Setter Property="FontSize"
				Value="{DynamicResource {x:Static SystemFonts.IconFontSizeKey}}"/>
		<Setter Property="FontStyle"
				Value="{DynamicResource {x:Static SystemFonts.IconFontStyleKey}}"/>
		<Setter Property="FontWeight"
				Value="{DynamicResource {x:Static SystemFonts.IconFontWeightKey}}"/>
		<Setter Property="SnapsToDevicePixels"
				Value="True"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="controls:BreadcrumbBar">
					<Border BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="1,0,1,0"
							CornerRadius="1">
						<Grid Background="{TemplateBinding Background}">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*"/>
								<ColumnDefinition Width="Auto"/>
							</Grid.ColumnDefinitions>
							<Border BorderBrush="{StaticResource TravelBarInnerBorderBrushKey}"
									BorderThickness="0,1,0,1"
									Grid.ColumnSpan="2"
									Name="NormalBackground">
								<Grid>
									<Grid.RowDefinitions>
										<RowDefinition Height="3"/>
										<RowDefinition/>
										<RowDefinition Height="4"/>
									</Grid.RowDefinitions>
									<Rectangle Fill="{StaticResource TravelBarNormalTopBackgroundBrushKey}"/>
									<Rectangle Fill="{StaticResource TravelBarNormalCenterBackgroundBrushKey}"
											   Grid.Row="1"/>
									<Rectangle Fill="{StaticResource TravelBarNormalBottomBackgroundBrushKey}"
											   Grid.Row="2"/>
								</Grid>
							</Border>
							<Grid Grid.ColumnSpan="2"
								  Name="PART_Track"
								  Visibility="Hidden">
								<Grid>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto"/>
										<ColumnDefinition/>
									</Grid.ColumnDefinitions>
									<Border BorderBrush="{StaticResource ProgressInnerBorderBrushKey}"
											BorderThickness="0,1,0,1"
											Name="PART_Indicator"
											Width="0">
										<Grid>
											<Grid.ColumnDefinitions>
												<ColumnDefinition MaxWidth="22"/>
												<ColumnDefinition/>
												<ColumnDefinition MaxWidth="22"/>
											</Grid.ColumnDefinitions>
											<Grid.RowDefinitions>
												<RowDefinition Height="5"/>
												<RowDefinition/>
												<RowDefinition Height="3"/>
											</Grid.RowDefinitions>
											<Rectangle Fill="{StaticResource ProgressTopBackgroundBrushKey}"
													   Grid.ColumnSpan="3"/>
											<Rectangle Fill="{StaticResource ProgressBackgroundBrushKey}"
													   Grid.ColumnSpan="3"
													   Grid.Row="1"/>
											<Rectangle Fill="{StaticResource ProgressBottomBackgroundBrushKey}"
													   Grid.ColumnSpan="3"
													   Grid.Row="2"/>
											<Rectangle Fill="{StaticResource ProgressUpperLeftEdgeBrushKey}"/>
											<Rectangle Fill="{StaticResource ProgressLowerLeftEdgeBrushKey}"
													   Grid.Row="1"
													   Grid.RowSpan="2"/>
											<Rectangle Fill="{StaticResource ProgressUpperRightEdgeBrushKey}"
													   Grid.Column="2"/>
											<Rectangle Fill="{StaticResource ProgressLowerRightEdgeBrushKey}"
													   Grid.Column="2"
													   Grid.Row="1"
													   Grid.RowSpan="2"/>
											<Grid ClipToBounds="True"
												  Grid.ColumnSpan="3"
												  Grid.RowSpan="3">
												<Rectangle Fill="{StaticResource ProgressHighlightBrushKey}"
														   HorizontalAlignment="Left"
														   Margin="-125,0,0,0"
														   x:Name="PART_Glow"
														   VerticalAlignment="Stretch"
														   Width="125"/>
											</Grid>
										</Grid>
									</Border>
									<Border BorderBrush="{StaticResource SearchInnerBorderBrushKey}"
											BorderThickness="0,1,0,1"
											Grid.Column="1">
										<Grid>
											<Grid.RowDefinitions>
												<RowDefinition Height="5"/>
												<RowDefinition/>
												<RowDefinition Height="4"/>
											</Grid.RowDefinitions>
											<Rectangle Fill="{StaticResource SearchTopBackgroundBrushKey}"/>
											<Rectangle Fill="{StaticResource SearchBackgroundBrushKey}"
													   Grid.Row="1"/>
											<Rectangle Fill="{StaticResource SearchBottomBackgroundBrushKey}"
													   Grid.Row="2"/>
										</Grid>
									</Border>
								</Grid>
							</Grid>
							<Grid Name="MainPanel">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto"/>
									<ColumnDefinition Width="*"/>
									<ColumnDefinition Width="Auto"/>
								</Grid.ColumnDefinitions>
								<StackPanel Margin="1,1,2,3"
											Name="PART_LeafPanel"
											Orientation="Horizontal">
									<documents:PixelSnapper HorizontalAlignment="Center"
															VerticalAlignment="Center">
										<Image Source="{TemplateBinding LeafImageSource}"
											   Stretch="None"/>
									</documents:PixelSnapper>
									<TextBlock Margin="4,0,4,0"
											   Name="LeafHeader"
											   Text="{TemplateBinding LeafHeader}"/>
								</StackPanel>
								<Grid ClipToBounds="True"
									  Grid.Column="1"
									  Margin="2,3,2,2"
									  Name="TextGrid">
									<TextBox Margin="0,0,0,-1"
											 Name="PART_TextBox"
											 Style="{StaticResource TextBoxStyleKey}">
										<TextBox.RenderTransform>
											<TranslateTransform Y="-1.0"/>
										</TextBox.RenderTransform>
									</TextBox>
									<Popup AllowsTransparency="true"
										   IsOpen="{Binding Path=IsAutoCompleteOpen, RelativeSource={RelativeSource TemplatedParent}}"
										   Name="AutoCompletePopup"
										   Placement="Bottom">
										<Border Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
												BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
												BorderThickness="1"
												Name="AutoCompleteDropDownBorder"
												Width="{Binding ElementName=TextGrid, Path=ActualWidth}">
											<ScrollViewer HorizontalScrollBarVisibility="Hidden"
														  VerticalScrollBarVisibility="Auto">
												<primitives:HighlightSelector x:Name="PART_AutoComplete"
																			  SelectionWrapping="Wrap">
													<primitives:HighlightSelector.ItemsPanel>
														<ItemsPanelTemplate>
															<StackPanel IsItemsHost="True"/>
														</ItemsPanelTemplate>
													</primitives:HighlightSelector.ItemsPanel>
												</primitives:HighlightSelector>
											</ScrollViewer>
										</Border>
									</Popup>
								</Grid>
								<controls:GadgetBar Grid.Column="1"
													KeyboardNavigation.DirectionalNavigation="{TemplateBinding KeyboardNavigation.DirectionalNavigation}"
													x:Name="PART_GadgetBar"/>
								<ToggleButton BorderThickness="0"
											  ClickMode="Press"
											  Focusable="False"
											  Grid.Column="2"
											  IsChecked="{Binding Path=IsHistoryOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
											  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
											  Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
									<documents:PixelSnapper HorizontalAlignment="Center"
															VerticalAlignment="Center">
										<Image Source="/Teraque.PresentationFramework;Component/Resources/Breadcrumb History Drop Down.png"
											   Stretch="None"/>
									</documents:PixelSnapper>
								</ToggleButton>
								<Popup AllowsTransparency="true"
									   IsOpen="{Binding Path=IsHistoryOpen, RelativeSource={RelativeSource TemplatedParent}}"
									   Name="HistoryPopup"
									   Placement="Bottom"
									   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
									<Border Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
											BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
											BorderThickness="1"
											MaxHeight="{TemplateBinding MaxHistoryHeight}"
											MinWidth="{Binding ElementName=MainPanel, Path=ActualWidth}"
											Name="HistoryDropDownBorder">
										<ScrollViewer HorizontalScrollBarVisibility="Hidden"
													  VerticalScrollBarVisibility="Auto">
											<primitives:HighlightSelector ItemTemplate="{StaticResource HistoryItemTemplateKey}"
																		  x:Name="PART_History">
												<primitives:HighlightSelector.ItemsPanel>
													<ItemsPanelTemplate>
														<StackPanel IsItemsHost="True"/>
													</ItemsPanelTemplate>
												</primitives:HighlightSelector.ItemsPanel>
											</primitives:HighlightSelector>
										</ScrollViewer>
									</Border>
								</Popup>
							</Grid>
							<Button BorderBrush="{StaticResource ButtonBorderBrushKey}"
									BorderThickness="1,0,0,0"
									Focusable="False"
									Grid.Column="1"
									Name="PART_ActionButton"
									Width="24">
								<documents:PixelSnapper Margin="2,1,0,0">
									<Image Name="ButtonImage"
										   Source="/Teraque.PresentationFramework;Component/Resources/Recycle.png"
										   Stretch="None"/>
								</documents:PixelSnapper>
							</Button>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="HasDropShadow"
								 SourceName="AutoCompletePopup"
								 Value="True">
							<Setter Property="Margin"
									TargetName="AutoCompleteDropDownBorder"
									Value="0,0,5,5"/>
							<Setter Property="Effect"
									TargetName="AutoCompleteDropDownBorder"
									Value="{StaticResource DropShadowEffect}"/>
						</Trigger>
						<Trigger Property="HasDropShadow"
								 SourceName="HistoryPopup"
								 Value="True">
							<Setter Property="Margin"
									TargetName="HistoryDropDownBorder"
									Value="0,0,5,5"/>
							<Setter Property="Effect"
									TargetName="HistoryDropDownBorder"
									Value="{StaticResource DropShadowEffect}"/>
						</Trigger>
						<Trigger Property="IsTextChanged"
								 Value="true">
							<Setter Property="Source"
									TargetName="ButtonImage"
									Value="/Teraque.PresentationFramework;Component/Resources/Go.png"/>
						</Trigger>
						<Trigger Property="IsSearching"
								 Value="true">
							<Setter Property="Visibility"
									TargetName="NormalBackground"
									Value="Hidden"/>
							<Setter Property="Visibility"
									TargetName="PART_Track"
									Value="Visible"/>
							<Setter Property="BorderBrush"
									Value="{StaticResource SearchOuterBorderBrushKey}"/>
							<Setter Property="Source"
									TargetName="ButtonImage"
									Value="/Teraque.PresentationFramework;Component/Resources/Stop.png"/>
						</Trigger>
						<Trigger Property="LeafHeader"
								 Value="{x:Null}">
							<Setter Property="Visibility"
									TargetName="LeafHeader"
									Value="Collapsed"/>
						</Trigger>
						<Trigger Property="Visibility"
								 SourceName="PART_GadgetBar"
								 Value="Hidden">
							<Setter Property="Visibility"
									TargetName="LeafHeader"
									Value="Collapsed"/>
							<Setter Property="RenderTransform"
									TargetName="PART_LeafPanel"
									Value="{StaticResource ButtonPressTransformKey}"/>
						</Trigger>
						<Trigger Property="IsMouseOver"
								 Value="True">
							<Setter Property="Background"
									Value="#A0FFFFFF"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!-- DetailBar Style -->
	<Style TargetType="primitives:DetailBar">
		<Style.Resources>
			<!-- DetailBar Shadow Brush -->
			<SolidColorBrush Color="#F1F5FB"
							 x:Key="BackgroundKey"/>
		</Style.Resources>
		<Setter Property="Background"
				Value="{StaticResource BackgroundKey}"/>
		<Setter Property="FontFamily"
				Value="{DynamicResource {x:Static SystemFonts.StatusFontFamilyKey}}"/>
		<Setter Property="FontSize"
				Value="{DynamicResource {x:Static SystemFonts.StatusFontSizeKey}}"/>
		<Setter Property="FontStyle"
				Value="{DynamicResource {x:Static SystemFonts.StatusFontStyleKey}}"/>
		<Setter Property="FontWeight"
				Value="{DynamicResource {x:Static SystemFonts.StatusFontWeightKey}}"/>
		<Setter Property="ItemsPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<WrapPanel Orientation="Vertical"/>
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="primitives:DetailBar">
					<Grid Background="{TemplateBinding Background}"
						  SnapsToDevicePixels="true">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto"/>
							<ColumnDefinition/>
						</Grid.ColumnDefinitions>
						<StackPanel Grid.ColumnSpan="2"
									HorizontalAlignment="Stretch"
									VerticalAlignment="Top">
							<Rectangle Fill="#CCD9EA"
									   Height="1"
									   HorizontalAlignment="Stretch"/>
							<Rectangle Fill="#D9E3F0"
									   Height="1"
									   HorizontalAlignment="Stretch"/>
							<Rectangle Fill="#E8EEF7"
									   Height="1"
									   HorizontalAlignment="Stretch"/>
							<Rectangle Fill="#EDF2F9"
									   Height="1"
									   HorizontalAlignment="Stretch"/>
							<Rectangle Fill="#F0F4FA"
									   Height="1"
									   HorizontalAlignment="Stretch"/>
						</StackPanel>
						<documents:PixelSnapper HorizontalAlignment="Left"
												Margin="18,3,4,2">
							<Image Source="{TemplateBinding Icon}"/>
						</documents:PixelSnapper>
						<ItemsPresenter Grid.Column="1"
										Margin="6"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!-- ExplorerBar Style -->
	<Style TargetType="controls:ExplorerBar">
		<Style.Resources>
			<LinearGradientBrush EndPoint="0.0,1.0"
								 x:Key="ExplorerBarBackgroundBrush"
								 StartPoint="0.0,0.0">
				<GradientBrush.GradientStops>
					<GradientStop Color="#FDFEFF"
								  Offset="0.00"/>
					<GradientStop Color="#E6F0FA"
								  Offset="0.54"/>
					<GradientStop Color="#DCE6F4"
								  Offset="0.54"/>
					<GradientStop Color="#DCE7F6"
								  Offset="1.00"/>
				</GradientBrush.GradientStops>
			</LinearGradientBrush>
			<LinearGradientBrush EndPoint="0.0,1.0"
								 x:Key="ExplorerBarBorderBrush"
								 StartPoint="0.0,0.0">
				<GradientBrush.GradientStops>
					<GradientStop Color="#FFFFFF"
								  Offset="0.00"/>
					<GradientStop Color="#F3F8FD"
								  Offset="0.54"/>
					<GradientStop Color="#EEF3FA"
								  Offset="0.54"/>
					<GradientStop Color="#EEF4FB"
								  Offset="1.00"/>
				</GradientBrush.GradientStops>
			</LinearGradientBrush>
			<LinearGradientBrush EndPoint="0.0,1.0"
								 x:Key="ExplorerBarItemFocusInnerBorderBrush"
								 StartPoint="0.0,0.0">
				<GradientStop Color="#FCFDFF"
							  Offset="0.0"/>
				<GradientStop Color="#F9FBFE"
							  Offset="0.49"/>
				<GradientStop Color="#F6F9FC"
							  Offset="0.50"/>
				<GradientStop Color="#F6F9FC"
							  Offset="1.00"/>
			</LinearGradientBrush>
			<LinearGradientBrush EndPoint="0.0,1.0"
								 x:Key="ExplorerBarItemHighlightBackgroundBrush"
								 StartPoint="0.0,0.0">
				<GradientStop Color="#F8FBFE"
							  Offset="0.0"/>
				<GradientStop Color="#EDF2FA"
							  Offset="0.49"/>
				<GradientStop Color="#D7E4F4"
							  Offset="0.50"/>
				<GradientStop Color="#C1D2E8"
							  Offset="1.00"/>
			</LinearGradientBrush>
			<LinearGradientBrush EndPoint="0.0,1.0"
								 x:Key="ExplorerBarItemHighlightInnerBorderBrush"
								 StartPoint="0.0,0.0">
				<GradientStop Color="#FDFEFF"
							  Offset="0.0"/>
				<GradientStop Color="#FAFCFE"
							  Offset="0.50"/>
				<GradientStop Color="#F5F8FC"
							  Offset="0.50"/>
				<GradientStop Color="#EFF4F9"
							  Offset="1.00"/>
			</LinearGradientBrush>
			<LinearGradientBrush EndPoint="0.0,1.0"
								 x:Key="ExplorerBarItemOuterBorderBrush"
								 StartPoint="0.0,0.0">
				<GradientStop Color="#BBCADB"
							  Offset="0.0"/>
				<GradientStop Color="#B1C3D8"
							  Offset="0.50"/>
				<GradientStop Color="#AABCD3"
							  Offset="0.50"/>
				<GradientStop Color="#AABCD5"
							  Offset="1.00"/>
			</LinearGradientBrush>
			<LinearGradientBrush EndPoint="0.0,1.0"
								 x:Key="ExplorerBarItemPressBackgroundBrush"
								 StartPoint="0.0,0.0">
				<GradientStop Color="#E1EBF5"
							  Offset="0.00"/>
				<GradientStop Color="#D8E4F1"
							  Offset="0.50"/>
				<GradientStop Color="#CFDBEC"
							  Offset="0.50"/>
				<GradientStop Color="#CFDCED"
							  Offset="1.00"/>
			</LinearGradientBrush>
			<LinearGradientBrush EndPoint="0.5,1.0"
								 x:Key="ExplorerBarItemSeparatorBrush"
								 StartPoint="0.5,0.0">
				<GradientBrush.GradientStops>
					<GradientStopCollection>
						<GradientStop Color="#C2CFDF"
									  Offset="0.0"/>
						<GradientStop Color="#AEC0D8"
									  Offset="1.0"/>
					</GradientStopCollection>
				</GradientBrush.GradientStops>
			</LinearGradientBrush>
			<SolidColorBrush Color="#1E395B"
							 x:Key="ExplorerBarForegroundBrush"/>
			<LinearGradientBrush EndPoint="0.0,1.0"
								 x:Key="TopLevelMenuItemHighlightBackgroundBrush"
								 StartPoint="0.0,0.0">
				<GradientStop Color="#F8FBFE"
							  Offset="0.0"/>
				<GradientStop Color="#EDF2FA"
							  Offset="0.49"/>
				<GradientStop Color="#D7E4F4"
							  Offset="0.50"/>
				<GradientStop Color="#C1D2E8"
							  Offset="1.00"/>
			</LinearGradientBrush>
			<LinearGradientBrush EndPoint="0.0,1.0"
								 x:Key="TopLevelMenuItemHighlightInnerBorderBrush"
								 StartPoint="0.0,0.0">
				<GradientStop Color="#FDFEFF"
							  Offset="0.0"/>
				<GradientStop Color="#FAFCFE"
							  Offset="0.50"/>
				<GradientStop Color="#F5F8FC"
							  Offset="0.50"/>
				<GradientStop Color="#EFF4F9"
							  Offset="1.00"/>
			</LinearGradientBrush>
			<LinearGradientBrush EndPoint="0.0,1.0"
								 x:Key="TopLevelMenuItemHighlightOuterBorderBrush"
								 StartPoint="0.0,0.0">
				<GradientStop Color="#BBCADB"
							  Offset="0.0"/>
				<GradientStop Color="#B1C3D8"
							  Offset="0.50"/>
				<GradientStop Color="#AABCD3"
							  Offset="0.50"/>
				<GradientStop Color="#AABCD5"
							  Offset="1.00"/>
			</LinearGradientBrush>
			<!-- ExplorerBar PressedShadow Template -->
			<ControlTemplate x:Key="PressedShadowTemplate">
				<StackPanel>
					<Rectangle Fill="#C9D4E4"
							   Height="1"
							   HorizontalAlignment="Stretch"/>
					<Rectangle Fill="#D4DEEA"
							   Height="1"
							   HorizontalAlignment="Stretch"/>
					<Rectangle Fill="#DDE8F1"
							   Height="1"
							   HorizontalAlignment="Stretch"/>
				</StackPanel>
			</ControlTemplate>
			<!-- ExplorerBar TopLevelMenuItemHighlightBorder Template -->
			<ControlTemplate x:Key="TopLevelMenuItemHighlightBorderTemplateKey"
							 TargetType="Control">
				<Border BorderBrush="{StaticResource TopLevelMenuItemHighlightOuterBorderBrush}"
						BorderThickness="1"
						CornerRadius="2"
						SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
					<Border Background="{StaticResource TopLevelMenuItemHighlightBackgroundBrush}"
							BorderBrush="{StaticResource TopLevelMenuItemHighlightInnerBorderBrush}"
							BorderThickness="1"
							CornerRadius="2"/>
				</Border>
			</ControlTemplate>
			<!-- ExplorerBar TopLevelMenuItemPressedBorder Template -->
			<ControlTemplate x:Key="TopLevelMenuItemPressedBorderTemplateKey"
							 TargetType="Control">
				<Border Background="{StaticResource ExplorerBarItemPressBackgroundBrush}"
						BorderBrush="{StaticResource TopLevelMenuItemHighlightOuterBorderBrush}"
						BorderThickness="1"
						CornerRadius="2"
						SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
					<Control Template="{StaticResource PressedShadowTemplate}"/>
				</Border>
			</ControlTemplate>
			<!-- ExplorerBar SplitButtonPressedBorder Template -->
			<ControlTemplate x:Key="SplitButtonPressedBorderTemplateKey"
							 TargetType="Control">
				<Border Background="{StaticResource ExplorerBarItemPressBackgroundBrush}"
						BorderBrush="{StaticResource TopLevelMenuItemHighlightOuterBorderBrush}"
						BorderThickness="1,1,0,1"
						CornerRadius="2,0,0,2"
						SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
					<Control Template="{StaticResource PressedShadowTemplate}"/>
				</Border>
			</ControlTemplate>
			<!-- ExplorerBar SplitMenuItemPressedBorder Template -->
			<ControlTemplate x:Key="SplitMenuItemPressedBorderTemplateKey"
							 TargetType="Control">
				<Border Background="{StaticResource ExplorerBarItemPressBackgroundBrush}"
						BorderBrush="{StaticResource TopLevelMenuItemHighlightOuterBorderBrush}"
						BorderThickness="1"
						CornerRadius="1,2,2,1"
						SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
					<Control Template="{StaticResource PressedShadowTemplate}"/>
				</Border>
			</ControlTemplate>
			<!-- ExplorerBar SplitButtonHighlightBorder Template -->
			<ControlTemplate x:Key="SplitButtonHighlightBorderTemplateKey"
							 TargetType="Control">
				<Border BorderBrush="{StaticResource TopLevelMenuItemHighlightOuterBorderBrush}"
						BorderThickness="1,1,0,1"
						CornerRadius="2,0,0,2"
						SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
					<Border Background="{StaticResource TopLevelMenuItemHighlightBackgroundBrush}"
							BorderBrush="{StaticResource TopLevelMenuItemHighlightInnerBorderBrush}"
							BorderThickness="1"
							CornerRadius="2,0,0,2"/>
				</Border>
			</ControlTemplate>
			<!-- ExplorerBar SplitMenuItemHighlightBorder Template -->
			<ControlTemplate x:Key="SplitMenuItemHighlightBorderTemplateKey"
							 TargetType="Control">
				<Border BorderBrush="{StaticResource TopLevelMenuItemHighlightOuterBorderBrush}"
						BorderThickness="1"
						CornerRadius="1,2,2,1"
						SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
					<Border Background="{StaticResource TopLevelMenuItemHighlightBackgroundBrush}"
							BorderBrush="{StaticResource TopLevelMenuItemHighlightInnerBorderBrush}"
							BorderThickness="1"
							CornerRadius="0,2,2,0"/>
				</Border>
			</ControlTemplate>
			<!-- ExplorerBar Gadget Style -->
			<Style BasedOn="{StaticResource {x:Type controls:Gadget}}"
				   TargetType="controls:Gadget">
				<Style.Triggers>
					<MultiTrigger>
						<MultiTrigger.Conditions>
							<Condition Property="Role"
									   Value="TopLevelHeader"/>
							<Condition Property="controls:GadgetBar.ToolDock"
									   Value="Near"/>
						</MultiTrigger.Conditions>
						<Setter Property="ContentPadding"
								Value="15,3,0,3"/>
						<Setter Property="ContentPressedTransform"
								Value="{StaticResource ButtonPressTransformKey}"/>
						<Setter Property="FontFamily"
								Value="Segoe UI"/>
						<Setter Property="FontSize"
								Value="12"/>
						<Setter Property="Foreground"
								Value="{StaticResource ExplorerBarForegroundBrush}"/>
						<Setter Property="HorizontalOffset"
								Value="0"/>
						<Setter Property="MenuItemHighlightBorder"
								Value="{StaticResource TopLevelMenuItemHighlightBorderTemplateKey}"/>
						<Setter Property="MenuItemPressedBorder"
								Value="{StaticResource TopLevelMenuItemPressedBorderTemplateKey}"/>
						<Setter Property="OpenGlyph"
								Value="/Teraque.PresentationFramework;Component/Resources/ExplorerBar Drop Down.png"/>
						<Setter Property="OpenPadding"
								Value="4,7,15,8"/>
						<Setter Property="OpenPressedTransform"
								Value="{StaticResource ButtonPressTransformKey}"/>
						<Setter Property="Placement"
								Value="Bottom"/>
						<Setter Property="PressedGlyph"
								Value="/Teraque.PresentationFramework;Component/Resources/ExplorerBar Drop Down.png"/>
						<Setter Property="Template"
								Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type controls:Gadget}, ResourceId=GadgetTopLevelHeaderTemplate}}"/>
						<Setter Property="VerticalOffset"
								Value="1"/>
					</MultiTrigger>
					<MultiTrigger>
						<MultiTrigger.Conditions>
							<Condition Property="Role"
									   Value="TopLevelHeader"/>
							<Condition Property="controls:GadgetBar.ToolDock"
									   Value="Far"/>
						</MultiTrigger.Conditions>
						<Setter Property="ContentPadding"
								Value="6,3,4,3"/>
						<Setter Property="ContentPressedTransform"
								Value="{StaticResource ButtonPressTransformKey}"/>
						<Setter Property="HeaderVisibility"
								Value="Collapsed"/>
						<Setter Property="HorizontalOffset"
								Value="0"/>
						<Setter Property="IconMargin"
								Value="0,1,0,1"/>
						<Setter Property="Margin"
								Value="4,0,4,0"/>
						<Setter Property="MenuItemHighlightBorder"
								Value="{StaticResource TopLevelMenuItemHighlightBorderTemplateKey}"/>
						<Setter Property="MenuItemPressedBorder"
								Value="{StaticResource TopLevelMenuItemPressedBorderTemplateKey}"/>
						<Setter Property="OpenGlyph"
								Value="/Teraque.PresentationFramework;Component/Resources/ExplorerBar Drop Down.png"/>
						<Setter Property="OpenPadding"
								Value="0,3,5,5"/>
						<Setter Property="OpenPressedTransform"
								Value="{StaticResource ButtonPressTransformKey}"/>
						<Setter Property="Placement"
								Value="Bottom"/>
						<Setter Property="PressedGlyph"
								Value="/Teraque.PresentationFramework;Component/Resources/ExplorerBar Drop Down.png"/>
						<Setter Property="Template"
								Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type controls:Gadget}, ResourceId=GadgetTopLevelHeaderTemplate}}"/>
						<Setter Property="VerticalOffset"
								Value="1"/>
					</MultiTrigger>
					<MultiTrigger>
						<MultiTrigger.Conditions>
							<Condition Property="Role"
									   Value="TopLevelItem"/>
							<Condition Property="controls:GadgetBar.ToolDock"
									   Value="Near"/>
						</MultiTrigger.Conditions>
						<Setter Property="ContentPadding"
								Value="15,3,15,3"/>
						<Setter Property="ContentPressedTransform"
								Value="{StaticResource ButtonPressTransformKey}"/>
						<Setter Property="FontFamily"
								Value="Segoe UI"/>
						<Setter Property="FontSize"
								Value="12"/>
						<Setter Property="Foreground"
								Value="{StaticResource ExplorerBarForegroundBrush}"/>
						<Setter Property="MenuItemHighlightBorder"
								Value="{StaticResource TopLevelMenuItemHighlightBorderTemplateKey}"/>
						<Setter Property="MenuItemPressedBorder"
								Value="{StaticResource TopLevelMenuItemPressedBorderTemplateKey}"/>
						<Setter Property="OpenVisibility"
								Value="Collapsed"/>
						<Setter Property="Template"
								Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type controls:Gadget}, ResourceId=GadgetTopLevelItemTemplateKey}}"/>
					</MultiTrigger>
					<MultiTrigger>
						<MultiTrigger.Conditions>
							<Condition Property="Role"
									   Value="TopLevelItem"/>
							<Condition Property="controls:GadgetBar.ToolDock"
									   Value="Far"/>
						</MultiTrigger.Conditions>
						<Setter Property="ContentPadding"
								Value="6,3"/>
						<Setter Property="ContentPressedTransform"
								Value="{StaticResource ButtonPressTransformKey}"/>
						<Setter Property="HeaderVisibility"
								Value="Collapsed"/>
						<Setter Property="IconMargin"
								Value="0,1,0,1"/>
						<Setter Property="Margin"
								Value="4,0,4,0"/>
						<Setter Property="MenuItemHighlightBorder"
								Value="{StaticResource TopLevelMenuItemHighlightBorderTemplateKey}"/>
						<Setter Property="MenuItemPressedBorder"
								Value="{StaticResource TopLevelMenuItemPressedBorderTemplateKey}"/>
						<Setter Property="OpenVisibility"
								Value="Collapsed"/>
						<Setter Property="Template"
								Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type controls:Gadget}, ResourceId=GadgetTopLevelItemTemplateKey}}"/>
					</MultiTrigger>
					<Trigger Property="Role"
							 Value="SubmenuHeader">
						<Setter Property="OpenGlyph"
								Value="/Teraque.PresentationFramework;Component/Resources/MenuItem Next.png"/>
						<Setter Property="Template"
								Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type controls:Gadget}, ResourceId=GadgetSubmenuHeaderTemplateKey}}"/>
					</Trigger>
				</Style.Triggers>
				<Setter Property="HeaderMargin"
						Value="0,0,0,2"/>
				<Setter Property="IconMargin"
						Value="0,1,4,1"/>
			</Style>
			<!-- ExplorerBar ViewButton Style -->
			<Style BasedOn="{StaticResource {x:Type Gadget}}"
				   TargetType="controls:ViewButton">
				<Style.Triggers>
					<MultiTrigger>
						<MultiTrigger.Conditions>
							<Condition Property="Role"
									   Value="TopLevelHeader"/>
							<Condition Property="controls:GadgetBar.ToolDock"
									   Value="Near"/>
						</MultiTrigger.Conditions>
						<Setter Property="ButtonHighlightBorder"
								Value="{StaticResource SplitButtonHighlightBorderTemplateKey}"/>
						<Setter Property="ButtonPressedBorder"
								Value="{StaticResource SplitButtonPressedBorderTemplateKey}"/>
						<Setter Property="ContentPadding"
								Value="15,3,4,3"/>
						<Setter Property="MenuItemHighlightBorder"
								Value="{StaticResource SplitMenuItemHighlightBorderTemplateKey}"/>
						<Setter Property="MenuItemPressedBorder"
								Value="{StaticResource SplitMenuItemPressedBorderTemplateKey}"/>
						<Setter Property="OpenGlyph"
								Value="/Teraque.PresentationFramework;Component/Resources/ExplorerBar Drop Down.png"/>
						<Setter Property="OpenPadding"
								Value="5,7,5,8"/>
						<Setter Property="OpenVisibility"
								Value="Visible"/>
						<Setter Property="PressedGlyph"
								Value="/Teraque.PresentationFramework;Component/Resources/ExplorerBar Drop Down.png"/>
					</MultiTrigger>
					<MultiTrigger>
						<MultiTrigger.Conditions>
							<Condition Property="Role"
									   Value="TopLevelHeader"/>
							<Condition Property="controls:GadgetBar.ToolDock"
									   Value="Far"/>
						</MultiTrigger.Conditions>
						<Setter Property="ButtonHighlightBorder"
								Value="{StaticResource SplitButtonHighlightBorderTemplateKey}"/>
						<Setter Property="ButtonPressedBorder"
								Value="{StaticResource SplitButtonPressedBorderTemplateKey}"/>
						<Setter Property="ContentPadding"
								Value="6,3,4,3"/>
						<Setter Property="Margin"
								Value="6,0,6,0"/>
						<Setter Property="MenuItemHighlightBorder"
								Value="{StaticResource SplitMenuItemHighlightBorderTemplateKey}"/>
						<Setter Property="MenuItemPressedBorder"
								Value="{StaticResource SplitMenuItemPressedBorderTemplateKey}"/>
						<Setter Property="OpenGlyph"
								Value="/Teraque.PresentationFramework;Component/Resources/ExplorerBar Drop Down.png"/>
						<Setter Property="OpenPadding"
								Value="5,7,5,8"/>
						<Setter Property="OpenVisibility"
								Value="Visible"/>
						<Setter Property="PressedGlyph"
								Value="/Teraque.PresentationFramework;Component/Resources/ExplorerBar Drop Down.png"/>
					</MultiTrigger>
				</Style.Triggers>
				<Setter Property="DropDown">
					<Setter.Value>
						<!-- ExplorerBar ViewButton DropDown Template -->
						<ControlTemplate TargetType="{x:Type controls:ViewButtonDropDown}">
							<Grid>
								<Grid.Resources>
									<Geometry x:Key="SliderPointedThumbOuterBorderGeometry">
										M 4.5,-7.5 A 1 1 0 0 0 3.5,-8.5 L -3.5,-8.5 A 1 1 0 0 0 -4.5,-7.5 L -4.5,4.5 L -0.5,8.5 L 0.5,8.5 L 4.5,4.5 Z
									</Geometry>
									<Geometry x:Key="SliderPointedThumbMiddleBorderGeometry">
										M 3.5,-7.5 L -3.5,-7.5 L -3.5,4.5 L 0,8 L 3.5,4.5 Z
									</Geometry>
									<SolidColorBrush Color="#3C7FB1"
													 x:Key="SliderThumbHoverBorder"/>
									<SolidColorBrush Color="#2C628B"
													 x:Key="SliderThumbPressedBorder"/>
									<SolidColorBrush Color="#FFE7EAEA"
													 x:Key="SliderTrackNormalBackground"/>
									<LinearGradientBrush EndPoint="0,0"
														 x:Key="SliderThumbNormalBackgroundInverted"
														 StartPoint="1,0">
										<LinearGradientBrush.GradientStops>
											<GradientStop Color="White"
														  Offset="0"/>
											<GradientStop Color="#F0EFEF"
														  Offset="0.4"/>
											<GradientStop Color="#D6D5D5"
														  Offset=".8"/>
										</LinearGradientBrush.GradientStops>
									</LinearGradientBrush>
									<LinearGradientBrush EndPoint="1,0"
														 x:Key="SliderTrackNormalBorder"
														 StartPoint="0,0">
										<LinearGradientBrush.GradientStops>
											<GradientStop Color="#FFAEB1AF"
														  Offset="0.1"/>
											<GradientStop Color="White"
														  Offset=".9"/>
										</LinearGradientBrush.GradientStops>
									</LinearGradientBrush>
									<LinearGradientBrush EndPoint="0,0"
														 x:Key="SliderThumbPressedBackgroundInverted"
														 StartPoint="1,0">
										<LinearGradientBrush.GradientStops>
											<GradientStop Color="#B8E4FA"
														  Offset="0.25"/>
											<GradientStop Color="#5EB4E3"
														  Offset="0.5"/>
											<GradientStop Color="#4C8BB4"
														  Offset="1"/>
										</LinearGradientBrush.GradientStops>
									</LinearGradientBrush>
									<LinearGradientBrush EndPoint="0,0"
														 x:Key="SliderThumbHoverBackgroundInverted"
														 StartPoint="1,0">
										<LinearGradientBrush.GradientStops>
											<GradientStop Color="white"
														  Offset="0"/>
											<GradientStop Color="#B8E2F9"
														  Offset="0.5"/>
											<GradientStop Color="#B0DFF8"
														  Offset="1"/>
										</LinearGradientBrush.GradientStops>
									</LinearGradientBrush>
									<!-- ExplorerBar ViewButton MenuItem Style -->
									<Style TargetType="MenuItem">
										<Setter Property="Focusable"
												Value="False"/>
										<Setter Property="FontFamily"
												Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}"/>
										<Setter Property="FontSize"
												Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}"/>
										<Setter Property="FontStyle"
												Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}"/>
										<Setter Property="FontWeight"
												Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}"/>
										<Setter Property="Foreground"
												Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"/>
										<Setter Property="OverridesDefaultStyle"
												Value="True"/>
										<Setter Property="Template">
											<Setter.Value>
												<ControlTemplate TargetType="MenuItem">
													<Grid Background="Transparent"
														  Height="{TemplateBinding Height}">
														<Control Name="MenuItemHighlightBorder"
																 SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
																 Template="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type controls:Gadget}, ResourceId=MenuItemHighlightBorderTemplateKey}}"
																 Visibility="Hidden"/>
														<StackPanel Orientation="Horizontal">
															<documents:PixelSnapper Margin="4,3,4,3"
																					x:Name="Icon"
																					VerticalAlignment="Center">
																<Image Source="{TemplateBinding Icon}"
																	   Stretch="None"/>
															</documents:PixelSnapper>
															<TextBlock Margin="0,2,13,4"
																	   Text="{TemplateBinding Header}"/>
														</StackPanel>
													</Grid>
													<ControlTemplate.Triggers>
														<Trigger Property="IsHighlighted"
																 Value="True">
															<Setter Property="Visibility"
																	TargetName="MenuItemHighlightBorder"
																	Value="Visible"/>
														</Trigger>
														<Trigger Property="IsEnabled"
																 Value="false">
															<Setter Property="Foreground"
																	Value="#FF9A9A9A"/>
														</Trigger>
													</ControlTemplate.Triggers>
												</ControlTemplate>
											</Setter.Value>
										</Setter>
										<Setter Property="VerticalContentAlignment"
												Value="Center"/>
									</Style>
									<!-- ExplorerBar ViewButton Separator Style -->
									<Style TargetType="Separator">
										<Setter Property="OverridesDefaultStyle"
												Value="True"/>
										<Setter Property="Template">
											<Setter.Value>
												<ControlTemplate TargetType="Separator">
													<Grid SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
														<StackPanel>
															<Rectangle Fill="{StaticResource MenuPopupSeparatorShadowBrushKey}"
																	   Height="1"/>
															<Rectangle Fill="{StaticResource MenuPopupSeparatorHighlightBrushKey}"
																	   Height="1"/>
														</StackPanel>
													</Grid>
												</ControlTemplate>
											</Setter.Value>
										</Setter>
									</Style>
									<!-- ExplorerBar ViewButton SliderRepeatButton Style -->
									<Style x:Key="SliderRepeatButtonStyle"
										   TargetType="RepeatButton">
										<Setter Property="OverridesDefaultStyle"
												Value="true"/>
										<Setter Property="IsTabStop"
												Value="false"/>
										<Setter Property="Focusable"
												Value="false"/>
										<Setter Property="Template">
											<Setter.Value>
												<ControlTemplate TargetType="RepeatButton">
													<Rectangle Fill="Transparent"/>
												</ControlTemplate>
											</Setter.Value>
										</Setter>
									</Style>
									<!-- ExplorerBar ViewButton SliderThumb Style-->
									<Style x:Key="SliderThumbStyle"
										   TargetType="Thumb">
										<Setter Property="Focusable"
												Value="false"/>
										<Setter Property="OverridesDefaultStyle"
												Value="true"/>
										<Setter Property="Height"
												Value="10"/>
										<Setter Property="Width"
												Value="18"/>
										<Setter Property="Foreground"
												Value="Gray"/>
										<Setter Property="Template">
											<Setter.Value>
												<ControlTemplate TargetType="Thumb">
													<Canvas SnapsToDevicePixels="true">
														<Canvas.RenderTransform>
															<TransformGroup>
																<TransformGroup.Children>
																	<TransformCollection>
																		<RotateTransform Angle="-90"/>
																		<TranslateTransform X="9"
																							Y="5"/>
																	</TransformCollection>
																</TransformGroup.Children>
															</TransformGroup>
														</Canvas.RenderTransform>
														<Path Data="{StaticResource SliderPointedThumbOuterBorderGeometry}"
															  Fill="{StaticResource SliderThumbNormalBackgroundInverted}"
															  x:Name="Background"/>
														<Path Data="{StaticResource SliderPointedThumbMiddleBorderGeometry}"
															  x:Name="InnerBorder"
															  Stroke="White"
															  StrokeThickness="1"/>
														<Path Data="{StaticResource SliderPointedThumbOuterBorderGeometry}"
															  x:Name="OuterBorder"
															  Stroke="#FF929292"
															  StrokeThickness="1"/>
													</Canvas>
													<ControlTemplate.Triggers>
														<Trigger Property="IsMouseOver"
																 Value="true">
															<Setter Property="Fill"
																	TargetName="Background"
																	Value="{StaticResource SliderThumbHoverBackgroundInverted}"/>
															<Setter Property="Stroke"
																	TargetName="OuterBorder"
																	Value="{StaticResource SliderThumbHoverBorder}"/>
														</Trigger>
														<Trigger Property="Foreground"
																 Value="Blue">
															<Setter Property="Fill"
																	TargetName="Background"
																	Value="{StaticResource SliderThumbHoverBackgroundInverted}"/>
															<Setter Property="Stroke"
																	TargetName="OuterBorder"
																	Value="{StaticResource SliderThumbHoverBorder}"/>
														</Trigger>
														<Trigger Property="IsDragging"
																 Value="true">
															<Setter Property="Fill"
																	TargetName="Background"
																	Value="{StaticResource SliderThumbPressedBackgroundInverted}"/>
															<Setter Property="Stroke"
																	TargetName="OuterBorder"
																	Value="{StaticResource SliderThumbPressedBorder}"/>
														</Trigger>
													</ControlTemplate.Triggers>
												</ControlTemplate>
											</Setter.Value>
										</Setter>
									</Style>
									<!-- ExplorerBar ViewButton Slider Style -->
									<Style TargetType="controls:ViewSlider">
										<Setter Property="Background"
												Value="Transparent"/>
										<Setter Property="FocusVisualStyle"
												Value="{x:Null}"/>
										<Setter Property="Template">
											<Setter.Value>
												<ControlTemplate TargetType="controls:ViewSlider">
													<Border Background="{TemplateBinding Background}"
															BorderBrush="{TemplateBinding BorderBrush}"
															BorderThickness="{TemplateBinding BorderThickness}"
															SnapsToDevicePixels="true">
														<Grid>
															<Grid.RowDefinitions>
																<RowDefinition/>
																<RowDefinition Height="1"/>
															</Grid.RowDefinitions>
															<Grid Grid.RowSpan="2">
																<Rectangle Fill="#B0B0B0"
																		   Margin="0,0,1,1"
																		   Width="3"/>
																<Rectangle Fill="#FDFDFD"
																		   Margin="1,1,0,0"
																		   Width="3"/>
																<Rectangle Fill="#E7EAEA"
																		   Margin="1"
																		   Width="2"/>
															</Grid>
															<Track Name="PART_Track">
																<Track.DecreaseRepeatButton>
																	<RepeatButton Command="{x:Static Slider.DecreaseLarge}"
																				  Style="{StaticResource SliderRepeatButtonStyle}"/>
																</Track.DecreaseRepeatButton>
																<Track.IncreaseRepeatButton>
																	<RepeatButton Command="{x:Static Slider.IncreaseLarge}"
																				  Style="{StaticResource SliderRepeatButtonStyle}"/>
																</Track.IncreaseRepeatButton>
																<Track.Thumb>
																	<Thumb x:Name="Thumb"
																		   Style="{StaticResource SliderThumbStyle}"/>
																</Track.Thumb>
															</Track>
														</Grid>
													</Border>
													<ControlTemplate.Triggers>
														<Trigger Property="IsKeyboardFocused"
																 Value="true">
															<Setter Property="Foreground"
																	TargetName="Thumb"
																	Value="Blue"/>
														</Trigger>
													</ControlTemplate.Triggers>
												</ControlTemplate>
											</Setter.Value>
										</Setter>
									</Style>
								</Grid.Resources>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto"/>
									<ColumnDefinition/>
								</Grid.ColumnDefinitions>
								<controls:ViewSlider Margin="6,11,8,9"
													 x:Name="PART_ViewSlider"/>
								<StackPanel HorizontalAlignment="Right"
											Orientation="Horizontal">
									<Rectangle Fill="{StaticResource MenuPopupSeparatorShadowBrushKey}"
											   Width="1"/>
									<Rectangle Fill="{StaticResource MenuPopupSeparatorHighlightBrushKey}"
											   Width="1"/>
								</StackPanel>
								<ItemsControl Focusable="False"
											  Grid.Column="1">
									<MenuItem Command="{x:Static input:Commands.ViewExtraLargeIcons}"
											  Header="{x:Static local:Properties.Resources.ExtraLargeIcons}"
											  Margin="7,4,2,9">
										<MenuItem.Icon>
											<BitmapImage UriSource="/Teraque.PresentationFramework;Component/Resources/Extra Large Icons View.png"/>
										</MenuItem.Icon>
									</MenuItem>
									<MenuItem Command="{x:Static input:Commands.ViewLargeIcons}"
											  Header="{x:Static local:Properties.Resources.LargeIcons}"
											  Margin="7,9,2,3">
										<MenuItem.Icon>
											<BitmapImage UriSource="/Teraque.PresentationFramework;Component/Resources/Large Icons View.png"/>
										</MenuItem.Icon>
									</MenuItem>
									<MenuItem Command="{x:Static input:Commands.ViewMediumIcons}"
											  Header="{x:Static local:Properties.Resources.MediumIcons}"
											  Margin="7,3,2,10">
										<MenuItem.Icon>
											<BitmapImage UriSource="/Teraque.PresentationFramework;Component/Resources/Medium Icons View.png"/>
										</MenuItem.Icon>
									</MenuItem>
									<MenuItem Command="{x:Static input:Commands.ViewSmallIcons}"
											  Header="{x:Static local:Properties.Resources.SmallIcons}"
											  Margin="7,11,2,4">
										<MenuItem.Icon>
											<BitmapImage UriSource="/Teraque.PresentationFramework;Component/Resources/Small Icons View.png"/>
										</MenuItem.Icon>
									</MenuItem>
									<Separator/>
									<MenuItem Command="{x:Static input:Commands.ViewSimpleList}"
											  Header="{x:Static local:Properties.Resources.List}"
											  Margin="7,2,2,4">
										<MenuItem.Icon>
											<BitmapImage UriSource="/Teraque.PresentationFramework;Component/Resources/Simple List View.png"/>
										</MenuItem.Icon>
									</MenuItem>
									<Separator/>
									<MenuItem Command="{x:Static input:Commands.ViewDetails}"
											  Header="{x:Static local:Properties.Resources.Details}"
											  Margin="7,2,2,3">
										<MenuItem.Icon>
											<BitmapImage UriSource="/Teraque.PresentationFramework;Component/Resources/Details View.png"/>
										</MenuItem.Icon>
									</MenuItem>
									<Separator/>
									<MenuItem Command="{x:Static input:Commands.ViewTiles}"
											  Header="{x:Static local:Properties.Resources.Tiles}"
											  Margin="7,2,2,3">
										<MenuItem.Icon>
											<BitmapImage UriSource="/Teraque.PresentationFramework;Component/Resources/Tiles View.png"/>
										</MenuItem.Icon>
									</MenuItem>
									<Separator/>
									<MenuItem Command="{x:Static input:Commands.ViewContent}"
											  Header="{x:Static local:Properties.Resources.Content}"
											  Margin="7,2,2,4">
										<MenuItem.Icon>
											<BitmapImage UriSource="/Teraque.PresentationFramework;Component/Resources/Content View.png"/>
										</MenuItem.Icon>
									</MenuItem>
								</ItemsControl>
							</Grid>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
				<Setter Property="IsButton"
						Value="True"/>
			</Style>
			<!-- ExplorerBar OverflowItem Style -->
			<Style BasedOn="{StaticResource {x:Type controls:Gadget}}"
				   TargetType="controls:OverflowItem">
				<Style.Triggers>
					<MultiTrigger>
						<MultiTrigger.Conditions>
							<Condition Property="Role"
									   Value="TopLevelHeader"/>
							<Condition Property="controls:GadgetBar.ToolDock"
									   Value="Near"/>
						</MultiTrigger.Conditions>
						<Setter Property="ContentPadding"
								Value="0"/>
						<Setter Property="HeaderVisibility"
								Value="Collapsed"/>
						<Setter Property="IconVisibility"
								Value="Collapsed"/>
						<Setter Property="OpenGlyph"
								Value="/Teraque.PresentationFramework;Component/Resources/ExplorerBar Overflow.png"/>
						<Setter Property="OpenPadding"
								Value="8,7,8,8"/>
						<Setter Property="OpenVisibility"
								Value="Visible"/>
						<Setter Property="OverflowGlyph"
								Value="/Teraque.PresentationFramework;Component/Resources/ExplorerBar Overflow.png"/>
						<Setter Property="PressedGlyph"
								Value="/Teraque.PresentationFramework;Component/Resources/ExplorerBar Overflow.png"/>
					</MultiTrigger>
				</Style.Triggers>
			</Style>
			<!-- ExplorerBar PreviewButton Style -->
			<Style BasedOn="{StaticResource {x:Type controls:Gadget}}"
				   TargetType="controls:PreviewButton"/>
		</Style.Resources>
		<Setter Property="Background"
				Value="{StaticResource ExplorerBarBackgroundBrush}"/>
		<Setter Property="BorderBrush"
				Value="{StaticResource ExplorerBarBorderBrush}"/>
		<Setter Property="BorderThickness"
				Value="1,0,1,0"/>
		<Setter Property="Grid.IsSharedSizeScope"
				Value="True"/>
		<Setter Property="KeyboardNavigation.DirectionalNavigation"
				Value="Cycle"/>
		<Setter Property="KeyboardNavigation.TabNavigation"
				Value="Once"/>
		<Setter Property="Padding"
				Value="2,3,4,1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate>
					<Border Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							Padding="{TemplateBinding Padding}">
						<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="ItemsPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<controls:GadgetPanel/>
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!-- ExplorerWindow Navigation MenuItem Style -->
	<Style x:Key="ExplorerWindowNavigationMenuItemStyle"
		   TargetType="MenuItem">
		<Setter Property="OverridesDefaultStyle"
				Value="true"/>
		<Setter Property="Header"
				Value="{Binding Path=(JournalEntry.Name)}"/>
		<Setter Property="Command"
				Value="NavigationCommands.NavigateJournal"/>
		<Setter Property="CommandParameter"
				Value="{Binding RelativeSource={RelativeSource Self}}"/>
		<Setter Property="JournalEntryUnifiedViewConverter.JournalEntryPosition"
				Value="{Binding (JournalEntryUnifiedViewConverter.JournalEntryPosition)}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="MenuItem">
					<Grid Background="Transparent"
						  Name="Panel"
						  SnapsToDevicePixels="true">
						<Path Height="10"
							  HorizontalAlignment="Left"
							  Margin="7,5"
							  Name="Glyph"
							  SnapsToDevicePixels="false"
							  Stroke="{TemplateBinding Foreground}"
							  StrokeEndLineCap="Triangle"
							  StrokeStartLineCap="Triangle"
							  StrokeThickness="2"
							  Width="10"/>
						<ContentPresenter ContentSource="Header"
										  Margin="24,5,21,5"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="JournalEntryUnifiedViewConverter.JournalEntryPosition"
								 Value="Current">
							<Setter Property="Data"
									TargetName="Glyph"
									Value="M 0,5 L 2.5,8 L 7,3 "/>
							<Setter Property="FlowDirection"
									TargetName="Glyph"
									Value="LeftToRight"/>
							<Setter Property="StrokeLineJoin"
									TargetName="Glyph"
									Value="Miter"/>
						</Trigger>
						<Trigger Property="IsHighlighted"
								 Value="true">
							<Setter Property="Foreground"
									Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
							<Setter Property="Background"
									TargetName="Panel"
									Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="MenuItem.IsHighlighted"
										   Value="true"/>
								<Condition Property="JournalEntryUnifiedViewConverter.JournalEntryPosition"
										   Value="Forward"/>
							</MultiTrigger.Conditions>
							<Setter Property="Stroke"
									TargetName="Glyph"
									Value="White"/>
							<Setter Property="Data"
									TargetName="Glyph"
									Value="M 1,5 L 7,5 M 5,1 L 9,5 L 5,9"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="MenuItem.IsHighlighted"
										   Value="true"/>
								<Condition Property="JournalEntryUnifiedViewConverter.JournalEntryPosition"
										   Value="Back"/>
							</MultiTrigger.Conditions>
							<Setter Property="Stroke"
									TargetName="Glyph"
									Value="White"/>
							<Setter Property="Data"
									TargetName="Glyph"
									Value="M 9,5 L 3,5 M 5,1 L 1,5 L 5,9"/>
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!-- JournalMenuItem Style -->
	<Style x:Key="JournalMenuItemKey"
		   TargetType="MenuItem">
		<Setter Property="OverridesDefaultStyle"
				Value="true"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="MenuItem">
					<Grid>
						<Image HorizontalAlignment="Left"
							   Name="Image"
							   Source="/Teraque.PresentationFramework;Component/Resources/Travel Background Disable.png"
							   Stretch="None"
							   VerticalAlignment="Top"/>
						<Popup AllowsTransparency="true"
							   Focusable="false"
							   IsOpen="{Binding Path=(MenuItem.IsSubmenuOpen),RelativeSource={RelativeSource TemplatedParent}}"
							   Name="PART_Popup"
							   Placement="Bottom"
							   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
							   VerticalOffset="2">
							<Border Background="{DynamicResource {x:Static SystemColors.MenuBrushKey}}"
									BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}"
									BorderThickness="1"
									Name="DropDownBorder">
								<ScrollViewer CanContentScroll="true"
											  Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=MenuScrollViewer}}">
									<ItemsPresenter KeyboardNavigation.DirectionalNavigation="Cycle"
													KeyboardNavigation.TabNavigation="None"
													Margin="2"/>
								</ScrollViewer>
							</Border>
						</Popup>
					</Grid>
					<ControlTemplate.Triggers>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsHighlighted"
										   Value="false"/>
								<Condition Property="IsEnabled"
										   Value="true"/>
							</MultiTrigger.Conditions>
							<Setter Property="Source"
									TargetName="Image"
									Value="/Teraque.PresentationFramework;Component/Resources/Travel Background Enable.png"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsHighlighted"
										   Value="true"/>
								<Condition Property="IsEnabled"
										   Value="true"/>
							</MultiTrigger.Conditions>
							<Setter Property="Source"
									TargetName="Image"
									Value="/Teraque.PresentationFramework;Component/Resources/Travel Background Highlight.png"/>
						</MultiTrigger>
						<Trigger Property="HasDropShadow"
								 SourceName="PART_Popup"
								 Value="True">
							<Setter Property="Margin"
									TargetName="DropDownBorder"
									Value="0,0,5,5"/>
							<Setter Property="Grid.Effect"
									TargetName="DropDownBorder"
									Value="{StaticResource DropShadowEffect}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!-- TravelBar Backward Button Style -->
	<Style x:Key="TravelBarBackButtonStyle"
		   TargetType="Button">
		<Setter Property="OverridesDefaultStyle"
				Value="true"/>
		<Setter Property="Command"
				Value="NavigationCommands.BrowseBack"/>
		<Setter Property="Focusable"
				Value="false"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid Background="Transparent"
						  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
						<Image Margin="2,1"
							   Name="Image"
							   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
							   Source="/Teraque.PresentationFramework;Component/Resources/Travel Backward Disable.png"
							   Stretch="None"/>
						<Image Margin="2,1"
							   Name="HighlightImage"
							   Opacity="0.0"
							   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
							   Source="/Teraque.PresentationFramework;Component/Resources/Travel Backward Highlight.png"
							   Stretch="None"/>
						<Image Margin="2,1"
							   Name="PressImage"
							   Opacity="0.0"
							   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
							   Source="/Teraque.PresentationFramework;Component/Resources/Travel Backward Press.png"
							   Stretch="None"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled"
								 Value="true">
							<Setter Property="Source"
									TargetName="Image"
									Value="/Teraque.PresentationFramework;Component/Resources/Travel Backward Enable.png"/>
						</Trigger>
						<Trigger Property="IsMouseOver"
								 Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Duration="0:0:0.25"
														 Storyboard.TargetName="HighlightImage"
														 Storyboard.TargetProperty="Opacity"
														 To="1.0"/>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Duration="0:0:0.25"
														 Storyboard.TargetName="HighlightImage"
														 Storyboard.TargetProperty="Opacity"
														 To="0.0"/>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
						</Trigger>
						<Trigger Property="IsPressed"
								 Value="true">
							<Setter Property="Opacity"
									TargetName="PressImage"
									Value="1.0"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!-- TravelBar Forward Button Style -->
	<Style x:Key="TravelBarForwardButtonStyle"
		   TargetType="Button">
		<Setter Property="OverridesDefaultStyle"
				Value="true"/>
		<Setter Property="Command"
				Value="NavigationCommands.BrowseForward"/>
		<Setter Property="Focusable"
				Value="false"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid Background="Transparent"
						  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
						<Image Margin="1,1,2,1"
							   Name="Image"
							   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
							   Source="/Teraque.PresentationFramework;Component/Resources/Travel Forward Disable.png"
							   Stretch="None"/>
						<Image Margin="1,1,2,1"
							   Name="HighlightImage"
							   Opacity="0.0"
							   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
							   Source="/Teraque.PresentationFramework;Component/Resources/Travel Forward Highlight.png"
							   Stretch="None"/>
						<Image Margin="1,1,2,1"
							   Name="PressImage"
							   Opacity="0.0"
							   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
							   Source="/Teraque.PresentationFramework;Component/Resources/Travel Forward Press.png"
							   Stretch="None"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled"
								 Value="true">
							<Setter Property="Source"
									TargetName="Image"
									Value="/Teraque.PresentationFramework;Component/Resources/Travel Forward Enable.png"/>
						</Trigger>
						<Trigger Property="IsMouseOver"
								 Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Duration="0:0:0.25"
														 Storyboard.TargetName="HighlightImage"
														 Storyboard.TargetProperty="Opacity"
														 To="1.0"/>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Duration="0:0:0.25"
														 Storyboard.TargetName="HighlightImage"
														 Storyboard.TargetProperty="Opacity"
														 To="0.0"/>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
						</Trigger>
						<Trigger Property="IsPressed"
								 Value="true">
							<Setter Property="Opacity"
									TargetName="PressImage"
									Value="1.0"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!-- SearchBox Style -->
	<Style TargetType="controls:SearchBox">
		<Style.Resources>
			<!-- SearchBox CancelBackground Brush -->
			<LinearGradientBrush EndPoint="0.0,1.0"
								 x:Key="CancelBackgroundBrushKey"
								 StartPoint="0.0,0.0">
				<GradientStop Color="#EAF6FD"
							  Offset="0.0"/>
				<GradientStop Color="#D7EFFC"
							  Offset="0.50"/>
				<GradientStop Color="#BDE6FD"
							  Offset="0.50"/>
				<GradientStop Color="#A9DAF5"
							  Offset="1.00"/>
			</LinearGradientBrush>
			<!-- SearchBox Button Style -->
			<Style TargetType="Button">
				<Setter Property="OverridesDefaultStyle"
						Value="True"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="ButtonBase">
							<Grid Background="{TemplateBinding Background}">
								<documents:PixelSnapper HorizontalAlignment="Center"
														Margin="1,0,1,0"
														VerticalAlignment="Center">
									<ContentPresenter/>
								</documents:PixelSnapper>
							</Grid>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
		</Style.Resources>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:SearchBox}">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition/>
							<ColumnDefinition Width="Auto"/>
						</Grid.ColumnDefinitions>
						<Border Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								CornerRadius="2"
								Grid.ColumnSpan="2"
								SnapsToDevicePixels="True"/>
						<TextBlock FontStyle="Italic"
								   Foreground="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"
								   Margin="8,1,0,0"
								   Name="PART_Watermark"/>
						<TextBox Background="Transparent"
								 BorderThickness="0"
								 KeyboardNavigation.TabNavigation="Continue"
								 Margin="2,0,0,2"
								 Name="PART_TextBox"/>
						<Button Background="Transparent"
								Command="input:Commands.Search"
								Focusable="False"
								Grid.Column="1"
								Margin="0,1,3,1"
								Name="Button"
								Padding="1">
							<Image Name="ButtonImage"
								   Source="/Teraque.PresentationFramework;Component/Resources/Search.png"
								   Stretch="None"/>
						</Button>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsSearching"
								 Value="True">
							<Setter Property="Visibility"
									TargetName="PART_Watermark"
									Value="Hidden"/>
							<Setter Property="Source"
									TargetName="ButtonImage"
									Value="/Teraque.PresentationFramework;Component/Resources/Stop Search.png"/>
						</Trigger>
						<Trigger Property="IsKeyboardFocusWithin"
								 Value="True">
							<Setter Property="Background"
									Value="White"/>
							<Setter Property="Visibility"
									TargetName="PART_Watermark"
									Value="Hidden"/>
						</Trigger>
						<Trigger Property="IsMouseOver"
								 Value="True">
							<Setter Property="Background"
									Value="White"/>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver"
										   SourceName="Button"
										   Value="True"/>
								<Condition Property="IsSearching"
										   Value="True"/>
							</MultiTrigger.Conditions>
							<Setter Property="Background"
									TargetName="Button"
									Value="{StaticResource CancelBackgroundBrushKey}"/>
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Background"
				Value="{StaticResource TravelBarNormalCenterBackgroundBrushKey}"/>
		<Setter Property="BorderBrush"
				Value="{StaticResource TravelBarOuterBorderBrushKey}"/>
		<Setter Property="BorderThickness"
				Value="1"/>
	</Style>
	<!-- ExplorerFrame Style -->
	<Style TargetType="controls:ExplorerFrame">
		<Style.Resources>
			<!-- ExplorerFrame ClientBackground Brush -->
			<SolidColorBrush Color="#FCFCFC"
							 x:Key="ClientBackgroundBrushKey"/>
			<!-- ExplorerFrame NavigatorBorder Brush -->
			<SolidColorBrush Color="#D6E5F5"
							 x:Key="BorderBrushKey"/>
			<!-- ExplorerFrame PreviewText Brush -->
			<SolidColorBrush Color="#6D6D6D"
							 x:Key="PreviewTextBrushKey"/>
			<!-- ExplorerFrame ToolTip Style -->
			<Style BasedOn="{StaticResource ToolTipStyleKey}"
				   TargetType="ToolTip"/>
		</Style.Resources>
		<Setter Property="Background"
				Value="{StaticResource ClientBackgroundBrushKey}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="controls:ExplorerFrame">
					<Grid Background="{TemplateBinding Background}">
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition/>
							<RowDefinition Height="{Binding Mode=TwoWay,Path=DetailHeight,RelativeSource={RelativeSource TemplatedParent}}"
										   MaxHeight="{TemplateBinding DetailMaxHeight}"
										   MinHeight="{TemplateBinding DetailMinHeight}"/>
						</Grid.RowDefinitions>
						<StackPanel>
							<controls:ExplorerBar ItemsSource="{Binding Mode=OneWay,Path=GadgetBarItems,RelativeSource={RelativeSource TemplatedParent}}"
												  TabIndex="2"/>
							<Rectangle Fill="#E4EFFB"
									   Height="1"/>
							<Rectangle Fill="#CDDAEA"
									   Height="1"/>
							<Rectangle Fill="#A0AFC3"
									   Height="1"/>
						</StackPanel>
						<Grid Grid.Row="1">
							<Grid.ColumnDefinitions>
								<ColumnDefinition/>
								<ColumnDefinition Width="{Binding Mode=TwoWay,Path=PreviewWidth,RelativeSource={RelativeSource TemplatedParent}}"/>
							</Grid.ColumnDefinitions>
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="{Binding Mode=TwoWay,Path=NavigationWidth,RelativeSource={RelativeSource TemplatedParent}}"/>
									<ColumnDefinition/>
								</Grid.ColumnDefinitions>
								<Border BorderBrush="{StaticResource BorderBrushKey}"
										BorderThickness="0,0,1,0">
									<controls:Navigator DataContext="{Binding}"
														ItemsSource="{Binding}"
														Source="{Binding Mode=TwoWay,Path=Source,RelativeSource={RelativeSource TemplatedParent}}"
														TabIndex="3"/>
								</Border>
								<GridSplitter Background="Transparent"
											  Focusable="False"
											  HorizontalAlignment="Right"
											  IsTabStop="False"
											  VerticalAlignment="Stretch"
											  Width="3"/>
								<ContentPresenter ClipToBounds="true"
												  Grid.Column="1"
												  KeyboardNavigation.IsTabStop="False"
												  KeyboardNavigation.TabIndex="4"/>
							</Grid>
							<Border Background="{TemplateBinding Background}"
									BorderBrush="{StaticResource BorderBrushKey}"
									BorderThickness="1,0,0,0"
									Grid.Column="1"/>
							<TextBlock Focusable="False"
									   Foreground="{StaticResource PreviewTextBrushKey}"
									   Grid.Column="1"
									   HorizontalAlignment="Center"
									   Margin="2,0,0,0"
									   Text="{x:Static local:Properties.Resources.NoPreviewAvailable}"
									   VerticalAlignment="Center"/>
							<GridSplitter Background="Transparent"
										  Focusable="False"
										  Grid.Column="1"
										  HorizontalAlignment="Left"
										  IsTabStop="False"
										  VerticalAlignment="Stretch"
										  Width="3"/>
						</Grid>
						<primitives:DetailBar DataContext="{TemplateBinding Property=SelectedItem}"
											  Grid.Row="2"
											  ItemsSource="{Binding Mode=OneWay,Path=DetailBarItems,RelativeSource={RelativeSource TemplatedParent}}"/>
						<GridSplitter Background="Transparent"
									  Focusable="False"
									  Grid.Row="2"
									  Height="5"
									  HorizontalAlignment="Stretch"
									  VerticalAlignment="Top"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!-- ExplorerWindow Style -->
	<Style TargetType="navigation:ExplorerWindow">
		<Style.Resources>
			<!-- ExplorerWindow GadgetBarBackground Brush -->
			<LinearGradientBrush EndPoint="0.0,1.0"
								 x:Key="GadgetBarBackgroundBrushKey"
								 StartPoint="0.0,0.0">
				<GradientBrush.GradientStops>
					<GradientStop Color="#FCFDFE"
								  Offset="0.07"/>
					<GradientStop Color="#E5EAF5"
								  Offset="0.31"/>
					<GradientStop Color="#D4DBED"
								  Offset="0.36"/>
					<GradientStop Color="#E1E6F6"
								  Offset="0.90"/>
				</GradientBrush.GradientStops>
			</LinearGradientBrush>
			<!-- ExplorerWindow NormalInnerBorder Brush -->
			<LinearGradientBrush EndPoint="0.0,1.0"
								 x:Key="NormalInnerBorderBrushKey"
								 StartPoint="0.0,0.0">
				<GradientBrush.GradientStops>
					<GradientStop Color="#C6363636"
								  Offset="0.25"/>
					<GradientStop Color="#8E9C9C9C"
								  Offset="0.75"/>
				</GradientBrush.GradientStops>
			</LinearGradientBrush>
			<!-- ExplorerWindow OuterBorder Brush -->
			<LinearGradientBrush EndPoint="0.0,1.0"
								 x:Key="OuterBorderBrushKey"
								 StartPoint="0.0,0.0">
				<GradientBrush.GradientStops>
					<GradientStop Color="#4FFFFFFF"
								  Offset="0.25"/>
					<GradientStop Color="#6EFFFFFF"
								  Offset="0.75"/>
				</GradientBrush.GradientStops>
			</LinearGradientBrush>
			<!-- ExplorerWindow SearchInnerBorder Brush -->
			<LinearGradientBrush EndPoint="0.0,1.0"
								 x:Key="SearchInnerBorderBrushKey"
								 StartPoint="0.0,0.0">
				<GradientBrush.GradientStops>
					<GradientStop Color="#E37B7B7B"
								  Offset="0.25"/>
					<GradientStop Color="#C7929292"
								  Offset="0.75"/>
				</GradientBrush.GradientStops>
			</LinearGradientBrush>
			<!-- ExplorerWindow GadgetBarBorder Brush -->
			<SolidColorBrush Color="#B6BCCC"
							 x:Key="GadgetBarBorderBrush"/>
			<!-- TravelBarMenu Style -->
			<Style x:Key="TravelBarMenuStyleKey"
				   TargetType="Menu">
				<Setter Property="Background"
						Value="Transparent"/>
				<Setter Property="IsMainMenu"
						Value="false"/>
				<Setter Property="ItemsPanel">
					<Setter.Value>
						<ItemsPanelTemplate>
							<DockPanel/>
						</ItemsPanelTemplate>
					</Setter.Value>
				</Setter>
				<Setter Property="KeyboardNavigation.TabNavigation"
						Value="None"/>
				<Setter Property="OverridesDefaultStyle"
						Value="true"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="Menu">
							<ItemsPresenter/>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
		</Style.Resources>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="navigation:ExplorerWindow">
					<Grid Background="{TemplateBinding Background}">
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="Auto"
										   Name="MenuRow"/>
							<RowDefinition/>
							<RowDefinition Height="Auto"
										   Name="StatusRow"/>
						</Grid.RowDefinitions>
						<Grid Name="PART_BrowserPanel">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition/>
								<ColumnDefinition MaxWidth="{TemplateBinding SearchMaxWidth}"
												  MinWidth="{TemplateBinding SearchMinWidth}"
												  Width="{Binding Mode=TwoWay,Path=SearchWidth,RelativeSource={RelativeSource TemplatedParent}}"/>
							</Grid.ColumnDefinitions>
							<Grid Margin="1,3,0,5"
								  Name="PART_TravelPanel"
								  VerticalAlignment="Center">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto"/>
									<ColumnDefinition Width="Auto"/>
									<ColumnDefinition Width="*"/>
								</Grid.ColumnDefinitions>
								<Menu Grid.ColumnSpan="3"
									  Name="MenuNavigation"
									  Style="{StaticResource TravelBarMenuStyleKey}">
									<MenuItem IsSubmenuOpen="{Binding Mode=TwoWay,Path=(MenuItem.IsSubmenuOpen),RelativeSource={RelativeSource TemplatedParent}}"
											  ItemContainerStyle="{StaticResource ExplorerWindowNavigationMenuItemStyle}"
											  Style="{StaticResource JournalMenuItemKey}">
										<MenuItem.ItemsSource>
											<MultiBinding Converter="{StaticResource JournalEntryUnifiedViewConverterKey}">
												<MultiBinding.Bindings>
													<Binding Path="BackStack"
															 RelativeSource="{RelativeSource TemplatedParent}"/>
													<Binding Path="ForwardStack"
															 RelativeSource="{RelativeSource TemplatedParent}"/>
												</MultiBinding.Bindings>
											</MultiBinding>
										</MenuItem.ItemsSource>
									</MenuItem>
								</Menu>
								<Button Style="{StaticResource TravelBarBackButtonStyle}"/>
								<Button Grid.Column="1"
										Style="{StaticResource TravelBarForwardButtonStyle}"/>
							</Grid>
							<Border BorderBrush="{StaticResource OuterBorderBrushKey}"
									BorderThickness="1"
									CornerRadius="1"
									Grid.Column="1"
									Margin="0,4,4,7"
									MinWidth="{TemplateBinding BreadcrumbMinWidth}">
								<Border BorderBrush="{StaticResource NormalInnerBorderBrushKey}"
										BorderThickness="1"
										CornerRadius="1"
										Name="BreadcrumbBarInnerBorder">
									<controls:BreadcrumbBar IsSearching="{Binding Path=IsSearching,RelativeSource={RelativeSource TemplatedParent}}"
															ItemsSource="{Binding Path=Items,RelativeSource={RelativeSource TemplatedParent}}"
															x:Name="PART_BreadcrumbBar"
															Source="{Binding Mode=TwoWay,Path=Source,RelativeSource={RelativeSource TemplatedParent}}"
															TabIndex="0"/>
								</Border>
							</Border>
							<Border BorderBrush="{StaticResource OuterBorderBrushKey}"
									BorderThickness="1"
									CornerRadius="1"
									Grid.Column="2"
									Margin="0,4,0,7">
								<Border BorderBrush="{StaticResource NormalInnerBorderBrushKey}"
										BorderThickness="1"
										CornerRadius="1"
										Name="SearchBoxInnerBorder">
									<controls:SearchBox x:Name="PART_SearchBox"
														Path="{Binding Converter={StaticResource UriConverterKey},Mode=TwoWay,Path=Source,RelativeSource={RelativeSource TemplatedParent}}"
														TabIndex="1"/>
								</Border>
							</Border>
							<GridSplitter Background="Transparent"
										  Focusable="False"
										  Grid.Column="1"
										  HorizontalAlignment="Right"
										  VerticalAlignment="Stretch"
										  Width="4"/>
						</Grid>
						<controls:GadgetBar Background="{StaticResource GadgetBarBackgroundBrushKey}"
											BorderBrush="{StaticResource GadgetBarBorderBrush}"
											BorderThickness="0,0,0,1"
											Grid.Row="1"
											KeyboardNavigation.TabNavigation="None"
											x:Name="PART_GadgetBar"
											Padding="2,0"/>
						<AdornerDecorator Grid.Row="2">
							<ContentPresenter ClipToBounds="true"
											  Name="PART_NavWinCP"/>
						</AdornerDecorator>
						<Grid Grid.Row="3">
							<Border BorderBrush="#919191"
									BorderThickness="0,1,0,0"/>
							<Border BorderBrush="White"
									BorderThickness="1"
									Margin="0,1,0,0">
								<StatusBar Height="20"
										   Name="PART_StatusBar">
									<StatusBarItem DockPanel.Dock="Right">
										<ResizeGrip Focusable="False"/>
									</StatusBarItem>
								</StatusBar>
							</Border>
						</Grid>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMenuVisible"
								 Value="False">
							<Setter Property="Height"
									TargetName="MenuRow"
									Value="0.0"/>
						</Trigger>
						<Trigger Property="IsSearching"
								 Value="true">
							<Setter Property="BorderBrush"
									TargetName="BreadcrumbBarInnerBorder"
									Value="{StaticResource SearchInnerBorderBrushKey}"/>
							<Setter Property="BorderBrush"
									TargetName="SearchBoxInnerBorder"
									Value="{StaticResource SearchInnerBorderBrushKey}"/>
						</Trigger>
						<Trigger Property="IsStatusVisible"
								 Value="False">
							<Setter Property="Height"
									TargetName="StatusRow"
									Value="0.0"/>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="NavigationWindow.CanGoForward"
										   Value="false"/>
								<Condition Property="NavigationWindow.CanGoBack"
										   Value="false"/>
							</MultiTrigger.Conditions>
							<Setter Property="IsEnabled"
									TargetName="MenuNavigation"
									Value="false"/>
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!-- GadgetBar Style -->
	<Style BasedOn="{StaticResource {x:Type Menu}}"
		   TargetType="controls:GadgetBar">
		<Style.Resources>
			<!-- GadgetBar GadgetBarItemFocusBorder Brush -->
			<SolidColorBrush Color="#585859"
							 x:Key="GadgetBarItemFocusBorderBrush"/>
			<!-- GadgetBar GadgetBarItemHighlight Brush -->
			<SolidColorBrush Color="#3399FF"
							 x:Key="GadgetBarItemHighlightBrush"/>
			<!-- GadgetBar TopLevelMenuItemHighlightBorder Template -->
			<ControlTemplate x:Key="TopLevelMenuItemHighlightBorderTemplateKey"
							 TargetType="Control">
				<Border Background="{StaticResource GadgetBarItemHighlightBrush}"
						SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
			</ControlTemplate>
			<!-- GadgetBar Gadget Style -->
			<Style BasedOn="{StaticResource {x:Type controls:Gadget}}"
				   TargetType="controls:Gadget">
				<Style.Triggers>
					<Trigger Property="Role"
							 Value="TopLevelHeader">
						<Setter Property="ContentPadding"
								Value="8,3,8,2"/>
						<Setter Property="HeaderMargin"
								Value="0"/>
						<Setter Property="IconMargin"
								Value="0"/>
						<Setter Property="IsHighlightAnimated"
								Value="true"/>
						<Setter Property="MenuItemHighlightBorder"
								Value="{StaticResource TopLevelMenuItemHighlightBorderTemplateKey}"/>
						<Setter Property="OpenVisibility"
								Value="Collapsed"/>
					</Trigger>
					<Trigger Property="Role"
							 Value="TopLevelItem">
						<Setter Property="ContentPadding"
								Value="8,3,8,2"/>
						<Setter Property="HeaderMargin"
								Value="0"/>
						<Setter Property="IconMargin"
								Value="0"/>
						<Setter Property="IsHighlightAnimated"
								Value="true"/>
						<Setter Property="MenuItemHighlightBorder"
								Value="{StaticResource TopLevelMenuItemHighlightBorderTemplateKey}"/>
						<Setter Property="OpenVisibility"
								Value="Collapsed"/>
					</Trigger>
				</Style.Triggers>
			</Style>
			<!-- GadgetBar OverflowItem Style -->
			<Style BasedOn="{StaticResource {x:Type controls:Gadget}}"
				   x:Key="OverflowItemStyleKey"
				   TargetType="controls:OverflowItem">
				<Setter Property="controls:GadgetBar.ToolDock"
						Value="Far"/>
				<Style.Triggers>
					<Trigger Property="Role"
							 Value="TopLevelHeader">
						<Setter Property="ContentPadding"
								Value="0"/>
						<Setter Property="HeaderVisibility"
								Value="Collapsed"/>
						<Setter Property="IconVisibility"
								Value="Collapsed"/>
						<Setter Property="OpenGlyph"
								Value="/Teraque.PresentationFramework;Component/Resources/ExplorerBar Overflow.png"/>
						<Setter Property="OpenPadding"
								Value="8,7,8,8"/>
						<Setter Property="OpenVisibility"
								Value="Visible"/>
						<Setter Property="OverflowGlyph"
								Value="/Teraque.PresentationFramework;Component/Resources/ExplorerBar Overflow.png"/>
						<Setter Property="PressedGlyph"
								Value="/Teraque.PresentationFramework;Component/Resources/ExplorerBar Overflow.png"/>
					</Trigger>
				</Style.Triggers>
			</Style>
		</Style.Resources>
		<Setter Property="Grid.IsSharedSizeScope"
				Value="True"/>
		<Setter Property="KeyboardNavigation.TabNavigation"
				Value="Once"/>
		<Setter Property="OverflowItemStyle"
				Value="{StaticResource OverflowItemStyleKey}"/>
		<Setter Property="ItemsPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<controls:GadgetPanel/>
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!-- Navigator Style -->
	<Style TargetType="controls:Navigator">
		<Style.Resources>
			<!-- Navigator ItemFocusBackground Brush -->
			<LinearGradientBrush EndPoint="0.0,1.0"
								 x:Key="ItemFocusBackgroundBrushKey"
								 StartPoint="0.0,0.0">
				<LinearGradientBrush.GradientStops>
					<GradientStop Color="#EBF4FE"
								  Offset="0.0"/>
					<GradientStop Color="#CFE4FE"
								  Offset="1.0"/>
				</LinearGradientBrush.GradientStops>
			</LinearGradientBrush>
			<!-- Navigator ItemFocusInnerBorder Brush -->
			<LinearGradientBrush EndPoint="0.0,1.0"
								 x:Key="ItemFocusInnerBorderBrushKey"
								 StartPoint="0.0,0.0">
				<LinearGradientBrush.GradientStops>
					<GradientStop Color="#F1F7FE"
								  Offset="0.0"/>
					<GradientStop Color="#DEEDFE"
								  Offset="1.0"/>
				</LinearGradientBrush.GradientStops>
			</LinearGradientBrush>
			<!-- Navigator ItemHighlightBackground Brush -->
			<LinearGradientBrush EndPoint="0.0,1.0"
								 x:Key="ItemHighlightBackgroundBrushKey"
								 StartPoint="0.0,0.0">
				<LinearGradientBrush.GradientStops>
					<GradientStop Color="#FAFBFD"
								  Offset="0.0"/>
					<GradientStop Color="#EBF3FD"
								  Offset="1.0"/>
				</LinearGradientBrush.GradientStops>
			</LinearGradientBrush>
			<!-- Navigator ItemHighlightInnerBorder Brush -->
			<LinearGradientBrush EndPoint="0.0,1.0"
								 x:Key="ItemHighlightInnerBorderBrushKey"
								 StartPoint="0.0,0.0">
				<LinearGradientBrush.GradientStops>
					<GradientStop Color="#FCFDFE"
								  Offset="0.0"/>
					<GradientStop Color="#F2F7FE"
								  Offset="1.0"/>
				</LinearGradientBrush.GradientStops>
			</LinearGradientBrush>
			<!-- Navigator ItemHighlightFocusBackground Brush -->
			<LinearGradientBrush EndPoint="0.0,1.0"
								 x:Key="ItemHighlightFocusBackgroundBrushKey"
								 StartPoint="0.0,0.0">
				<LinearGradientBrush.GradientStops>
					<GradientStop Color="#DCEBFC"
								  Offset="0.0"/>
					<GradientStop Color="#C1DBFC"
								  Offset="1.0"/>
				</LinearGradientBrush.GradientStops>
			</LinearGradientBrush>
			<!-- Navigator ItemHighlightFocusInnerBorder Brush -->
			<LinearGradientBrush EndPoint="0.0,1.0"
								 x:Key="ItemHighlightFocusInnerBorderBrushKey"
								 StartPoint="0.0,0.0">
				<LinearGradientBrush.GradientStops>
					<GradientStop Color="#EBF4FD"
								  Offset="0.0"/>
					<GradientStop Color="#DBEAFD"
								  Offset="1.0"/>
				</LinearGradientBrush.GradientStops>
			</LinearGradientBrush>
			<!-- Navigator ItemInactiveBackground Brush -->
			<LinearGradientBrush EndPoint="0.0,1.0"
								 x:Key="ItemInactiveBackgroundBrushKey"
								 StartPoint="0.0,0.0">
				<LinearGradientBrush.GradientStops>
					<GradientStop Color="#F8F8F8"
								  Offset="0.0"/>
					<GradientStop Color="#E5E5E5"
								  Offset="1.0"/>
				</LinearGradientBrush.GradientStops>
			</LinearGradientBrush>
			<!-- Navigator ItemInactiveInnerBorder Brush -->
			<LinearGradientBrush EndPoint="0.0,1.0"
								 x:Key="ItemInactiveInnerBorderBrushKey"
								 StartPoint="0.0,0.0">
				<LinearGradientBrush.GradientStops>
					<GradientStop Color="#FAFAFB"
								  Offset="0.0"/>
					<GradientStop Color="#F0F0F0"
								  Offset="1.0"/>
				</LinearGradientBrush.GradientStops>
			</LinearGradientBrush>
			<!-- Navigator NavigatorBackground Brush -->
			<SolidColorBrush Color="#FCFCFC"
							 x:Key="NavigatorBackgroundBrushKey"/>
			<!-- Navigator ItemFocusOuterBorder Brush -->
			<SolidColorBrush Color="#84ACDD"
							 x:Key="ItemFocusOuterBorderBrushKey"/>
			<!-- Navigator ItemHighlightFocusOuterBorder Brush -->
			<SolidColorBrush Color="#7DA2CE"
							 x:Key="ItemHighlightFocusOuterBorderBrushKey"/>
			<!-- Navigator ItemHighlightOuterBorder Brush -->
			<SolidColorBrush Color="#B8D6FB"
							 x:Key="ItemHighlightOuterBorderBrushKey"/>
			<!-- Navigator ItemInactiveOuterBorder Brush -->
			<SolidColorBrush Color="#D9D9D9"
							 x:Key="ItemInactiveOuterBorderBrushKey"/>
			<!-- Navigator ToggleButton Style -->
			<Style x:Key="{x:Type ToggleButton}"
				   TargetType="ToggleButton">
				<Setter Property="Focusable"
						Value="False"/>
				<Setter Property="Opacity"
						Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type controls:Navigator}},Path=ExpanderOpacity}"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="ToggleButton">
							<Border Background="Transparent">
								<documents:PixelSnapper Margin="0,2,0,3">
									<Image Name="Glyph"
										   Source="/Teraque.PresentationFramework;Component/Resources/TreeView Open Enable.png"
										   Stretch="None"/>
								</documents:PixelSnapper>
							</Border>
							<ControlTemplate.Triggers>
								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition Property="IsMouseOver"
												   Value="False"/>
										<Condition Property="IsChecked"
												   Value="True"/>
									</MultiTrigger.Conditions>
									<Setter Property="Source"
											TargetName="Glyph"
											Value="/Teraque.PresentationFramework;Component/Resources/TreeView Close Enable.png"/>
								</MultiTrigger>
								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition Property="IsMouseOver"
												   Value="True"/>
										<Condition Property="IsChecked"
												   Value="false"/>
									</MultiTrigger.Conditions>
									<Setter Property="Source"
											TargetName="Glyph"
											Value="/Teraque.PresentationFramework;Component/Resources/TreeView Open Highlight.png"/>
								</MultiTrigger>
								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition Property="IsMouseOver"
												   Value="True"/>
										<Condition Property="IsChecked"
												   Value="True"/>
									</MultiTrigger.Conditions>
									<Setter Property="Source"
											TargetName="Glyph"
											Value="/Teraque.PresentationFramework;Component/Resources/TreeView Close Highlight.png"/>
								</MultiTrigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<!-- Navigator NavigatorItem Template -->
			<ControlTemplate x:Key="NavigatorItemTemplate"
							 TargetType="controls:NavigatorItem">
				<Grid Margin="{TemplateBinding Padding}">
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto"/>
						<RowDefinition/>
					</Grid.RowDefinitions>
					<Border BorderThickness="1"
							CornerRadius="2"
							Name="OuterBorder">
						<Border BorderThickness="1"
								CornerRadius="2"
								Name="InnerBorder"/>
					</Border>
					<Grid Background="Transparent"
						  Name="ItemGrid">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="3"/>
							<ColumnDefinition Width="{Binding Converter={StaticResource IndentConverterKey},RelativeSource={RelativeSource TemplatedParent}}"/>
							<ColumnDefinition Width="Auto"/>
							<ColumnDefinition Width="*"/>
						</Grid.ColumnDefinitions>
						<ToggleButton ClickMode="Press"
									  Grid.Column="2"
									  IsChecked="{Binding Path=IsExpanded,RelativeSource={RelativeSource TemplatedParent}}"
									  Name="Expander"/>
						<ContentPresenter ContentSource="Header"
										  Grid.Column="3"
										  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										  Name="PART_Header"
										  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
					</Grid>
					<ItemsPresenter Grid.Row="1"
									Name="ItemsHost"/>
				</Grid>
				<ControlTemplate.Triggers>
					<Trigger Property="IsExpandable"
							 Value="false">
						<Setter Property="Visibility"
								TargetName="Expander"
								Value="Hidden"/>
					</Trigger>
					<Trigger Property="IsEnabled"
							 Value="false">
						<Setter Property="Foreground"
								Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
					</Trigger>
					<Trigger Property="IsExpanded"
							 Value="false">
						<Setter Property="Visibility"
								TargetName="ItemsHost"
								Value="Collapsed"/>
					</Trigger>
					<Trigger Property="IsRoot"
							 Value="true">
						<Setter Property="Margin"
								Value="1,9,1,12"/>
					</Trigger>
					<Trigger Property="IsMouseOver"
							 SourceName="ItemGrid"
							 Value="True">
						<Setter Property="BorderBrush"
								TargetName="OuterBorder"
								Value="{StaticResource ItemHighlightOuterBorderBrushKey}"/>
						<Setter Property="BorderBrush"
								TargetName="InnerBorder"
								Value="{StaticResource ItemHighlightInnerBorderBrushKey}"/>
						<Setter Property="Background"
								TargetName="InnerBorder"
								Value="{StaticResource ItemHighlightBackgroundBrushKey}"/>
					</Trigger>
					<MultiTrigger>
						<MultiTrigger.Conditions>
							<Condition Property="IsSelected"
									   Value="true"/>
							<Condition Property="IsFocused"
									   Value="true"/>
						</MultiTrigger.Conditions>
						<Setter Property="BorderBrush"
								TargetName="OuterBorder"
								Value="{StaticResource ItemFocusOuterBorderBrushKey}"/>
						<Setter Property="BorderBrush"
								TargetName="InnerBorder"
								Value="{StaticResource ItemFocusInnerBorderBrushKey}"/>
						<Setter Property="Background"
								TargetName="InnerBorder"
								Value="{StaticResource ItemFocusBackgroundBrushKey}"/>
					</MultiTrigger>
					<MultiTrigger>
						<MultiTrigger.Conditions>
							<Condition Property="IsSelected"
									   Value="true"/>
							<Condition Property="IsFocused"
									   Value="false"/>
						</MultiTrigger.Conditions>
						<Setter Property="BorderBrush"
								TargetName="OuterBorder"
								Value="{StaticResource ItemInactiveOuterBorderBrushKey}"/>
						<Setter Property="BorderBrush"
								TargetName="InnerBorder"
								Value="{StaticResource ItemInactiveInnerBorderBrushKey}"/>
						<Setter Property="Background"
								TargetName="InnerBorder"
								Value="{StaticResource ItemInactiveBackgroundBrushKey}"/>
					</MultiTrigger>
					<MultiTrigger>
						<MultiTrigger.Conditions>
							<Condition Property="IsSelected"
									   Value="true"/>
							<Condition Property="IsMouseOver"
									   SourceName="ItemGrid"
									   Value="true"/>
						</MultiTrigger.Conditions>
						<Setter Property="BorderBrush"
								TargetName="OuterBorder"
								Value="{StaticResource ItemHighlightFocusOuterBorderBrushKey}"/>
						<Setter Property="BorderBrush"
								TargetName="InnerBorder"
								Value="{StaticResource ItemHighlightFocusInnerBorderBrushKey}"/>
						<Setter Property="Background"
								TargetName="InnerBorder"
								Value="{StaticResource ItemHighlightFocusBackgroundBrushKey}"/>
					</MultiTrigger>
				</ControlTemplate.Triggers>
			</ControlTemplate>
		</Style.Resources>
		<Setter Property="Background"
				Value="{StaticResource NavigatorBackgroundBrushKey}"/>
		<Setter Property="Foreground"
				Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="ItemContainerStyle">
			<Setter.Value>
				<Style TargetType="controls:NavigatorItem">
					<Setter Property="FontFamily"
							Value="{DynamicResource {x:Static SystemFonts.IconFontFamilyKey}}"/>
					<Setter Property="FontSize"
							Value="{DynamicResource {x:Static SystemFonts.IconFontSizeKey}}"/>
					<Setter Property="FontStyle"
							Value="{DynamicResource {x:Static SystemFonts.IconFontStyleKey}}"/>
					<Setter Property="FontWeight"
							Value="{DynamicResource {x:Static SystemFonts.IconFontWeightKey}}"/>
					<Setter Property="controls:Navigator.IsInViewWhenSelected"
							Value="True"/>
					<Setter Property="Padding"
							Value="0"/>
					<Setter Property="Template"
							Value="{StaticResource NavigatorItemTemplate}"/>
				</Style>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="TreeView">
					<ScrollViewer Background="{TemplateBinding Background}"
								  CanContentScroll="false"
								  Focusable="false"
								  HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
								  Name="ScrollViewer"
								  VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
						<ItemsPresenter/>
					</ScrollViewer>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!-- Gadget Seperator Style -->
	<Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type controls:Gadget}, ResourceId=GadgetSeperatorStyle}"
		   TargetType="Separator">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Separator">
					<Grid SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
						<Grid.ColumnDefinitions>
							<ColumnDefinition SharedSizeGroup="IconColumnGroup"/>
							<ColumnDefinition Width="*"/>
						</Grid.ColumnDefinitions>
						<StackPanel HorizontalAlignment="Right"
									Orientation="Horizontal">
							<Rectangle Fill="{StaticResource MenuPopupSeparatorShadowBrushKey}"
									   Width="1"/>
							<Rectangle Fill="{StaticResource MenuPopupSeparatorHighlightBrushKey}"
									   Width="1"/>
						</StackPanel>
						<StackPanel Grid.Column="1"
									Margin="0,4,0,2">
							<Rectangle Fill="{StaticResource MenuPopupSeparatorShadowBrushKey}"
									   Height="1"/>
							<Rectangle Fill="{StaticResource MenuPopupSeparatorHighlightBrushKey}"
									   Height="1"/>
						</StackPanel>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!-- DetailsViewColumnHeaderBorderBrush -->
	<LinearGradientBrush EndPoint="0.0,1.0"
						 x:Key="DetailsViewColumnHeaderBorderBrushKey"
						 StartPoint="0.0,0.0">
		<LinearGradientBrush.GradientStops>
			<GradientStop Color="#FFDFEAF7"
						  Offset="0.0"/>
			<GradientStop Color="#CCDFEAF7"
						  Offset="0.5"/>
			<GradientStop Color="#00DFEAF7"
						  Offset="1.0"/>
		</LinearGradientBrush.GradientStops>
	</LinearGradientBrush>
	<!-- DetailsViewColumnHeaderHoverInnerBorderBrush -->
	<LinearGradientBrush EndPoint="0.0,1.0"
						 x:Key="DetailsViewColumnHeaderHoverInnerBorderBrushKey"
						 StartPoint="0.0,0.0">
		<LinearGradientBrush.GradientStops>
			<GradientStop Color="#FDFEFF"
						  Offset="0.0"/>
			<GradientStop Color="#FCFDFE"
						  Offset="1.0"/>
		</LinearGradientBrush.GradientStops>
	</LinearGradientBrush>
	<!-- DetailsViewColumnHeaderHoverOuterBorderBrush -->
	<LinearGradientBrush EndPoint="0.0,1.0"
						 x:Key="DetailsViewColumnHeaderHoverOuterBorderBrushKey"
						 StartPoint="0.0,0.0">
		<LinearGradientBrush.GradientStops>
			<GradientStop Color="#DEE9F7"
						  Offset="0.0"/>
			<GradientStop Color="#E3E8EE"
						  Offset="1.0"/>
		</LinearGradientBrush.GradientStops>
	</LinearGradientBrush>
	<!-- ColumnViewColumnHeaderPressBackgroundBrush -->
	<LinearGradientBrush EndPoint="0,1"
						 x:Key="ColumnViewColumnHeaderPressBackgroundBrushKey"
						 StartPoint="0,0">
		<LinearGradientBrush.GradientStops>
			<GradientStop Color="#FF8DD6F7"
						  Offset="0"/>
			<GradientStop Color="#FF8AD1F5"
						  Offset="1"/>
		</LinearGradientBrush.GradientStops>
	</LinearGradientBrush>
	<!-- ItemFocusBackgroundBrush -->
	<LinearGradientBrush EndPoint="0.0,1.0"
						 x:Key="ItemFocusBackgroundBrushKey"
						 StartPoint="0.0,0.0">
		<LinearGradientBrush.GradientStops>
			<GradientStop Color="#DCEBFC"
						  Offset="0.0"/>
			<GradientStop Color="#C1DBFC"
						  Offset="1.0"/>
		</LinearGradientBrush.GradientStops>
	</LinearGradientBrush>
	<!-- ItemFocusInnerBorderBrushKey -->
	<LinearGradientBrush EndPoint="0.0,1.0"
						 x:Key="ItemFocusInnerBorderBrushKey"
						 StartPoint="0.0,0.0">
		<LinearGradientBrush.GradientStops>
			<GradientStop Color="#EBF4FD"
						  Offset="0.0"/>
			<GradientStop Color="#DBEAFD"
						  Offset="1.0"/>
		</LinearGradientBrush.GradientStops>
	</LinearGradientBrush>
	<!-- ItemMouseOverBackgroundBrush -->
	<LinearGradientBrush EndPoint="0.0,1.0"
						 x:Key="ItemMouseOverBackgroundBrushKey"
						 StartPoint="0.0,0.0">
		<LinearGradientBrush.GradientStops>
			<GradientStop Color="#FAFBFD"
						  Offset="0.0"/>
			<GradientStop Color="#EBF3FD"
						  Offset="1.0"/>
		</LinearGradientBrush.GradientStops>
	</LinearGradientBrush>
	<!-- ItemMouseOverInnerBorderBrush -->
	<LinearGradientBrush EndPoint="0.0,1.0"
						 x:Key="ItemMouseOverInnerBorderBrushKey"
						 StartPoint="0.0,0.0">
		<LinearGradientBrush.GradientStops>
			<GradientStop Color="#FCFDFE"
						  Offset="0.0"/>
			<GradientStop Color="#F2F7FE"
						  Offset="1.0"/>
		</LinearGradientBrush.GradientStops>
	</LinearGradientBrush>
	<!-- ItemSelectBackgroundBrush -->
	<LinearGradientBrush EndPoint="0.0,1.0"
						 x:Key="ItemSelectBackgroundBrushKey"
						 StartPoint="0.0,0.0">
		<LinearGradientBrush.GradientStops>
			<GradientStop Color="#F8F8F8"
						  Offset="0.0"/>
			<GradientStop Color="#E5E5E5"
						  Offset="1.0"/>
		</LinearGradientBrush.GradientStops>
	</LinearGradientBrush>
	<!-- ItemSelectInnerBorderBrush -->
	<LinearGradientBrush EndPoint="0.0,1.0"
						 x:Key="ItemSelectInnerBorderBrushKey"
						 StartPoint="0.0,0.0">
		<LinearGradientBrush.GradientStops>
			<GradientStop Color="#FAFAFB"
						  Offset="0.0"/>
			<GradientStop Color="#F0F0F0"
						  Offset="1.0"/>
		</LinearGradientBrush.GradientStops>
	</LinearGradientBrush>
	<!-- ItemFocusOuterBorderBrush -->
	<SolidColorBrush Color="#7A9FCB"
					 x:Key="ItemFocusOuterBorderBrushKey"/>
	<!-- ItemMouseOverOuterBorderBrush -->
	<SolidColorBrush Color="#B099C4FA"
					 x:Key="ItemMouseOverOuterBorderBrushKey"/>
	<!-- ItemSelectOuterBorderBrush -->
	<SolidColorBrush Color="#D0D0D0"
					 x:Key="ItemSelectOuterBorderBrushKey"/>
	<!-- ItemSeparatorBrush -->
	<SolidColorBrush Color="#DCDCDC"
					 x:Key="ItemSeparatorBrushKey"/>
	<!-- NavigatorBackgroundBrush -->
	<SolidColorBrush Color="#FCFCFC"
					 x:Key="NavigatorBackgroundBrushKey"/>
	<!-- DetailsViewForegroundBrush -->
	<SolidColorBrush Color="#4C607A"
					 x:Key="DetailsViewForegroundBrushKey"/>
	<!-- DetailsViewColumnHeaderHoverBackgroundBrush -->
	<SolidColorBrush Color="#F1F5FB"
					 x:Key="DetailsViewColumnHeaderHoverBackgroundBrushKey"/>
	<!-- HorizontalWrapItemsPanel Template -->
	<ItemsPanelTemplate x:Key="HorizontalWrapItemsPanelTemplateKey">
		<WrapPanel IsItemsHost="True"
				   Orientation="Horizontal"
				   Width="{Binding Path=ActualWidth, RelativeSource={RelativeSource AncestorType=ScrollContentPresenter}}"/>
	</ItemsPanelTemplate>
	<!-- ScrollView Template -->
	<ControlTemplate x:Key="ScrollViewTemplateKey"
					 TargetType="{x:Type controls:ListBoxView}">
		<ScrollViewer Focusable="false"
					  HorizontalScrollBarVisibility="Hidden"
					  Padding="15,6,0,0"
					  VerticalScrollBarVisibility="Auto">
			<ItemsPresenter/>
		</ScrollViewer>
	</ControlTemplate>
	<!-- DetailsViewHeader DataTemplate -->
	<DataTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type controls:DetailsView}, ResourceId=DetailsViewHeaderDataTemplate}">
		<TextBlock Margin="6,4,0,4"
				   Name="TextBlock"
				   Text="{Binding}"/>
		<DataTemplate.Triggers>
			<DataTrigger Binding="{Binding Path=(controls:DetailsView.IsFirst), RelativeSource={RelativeSource Self}}"
						 Value="True">
				<Setter Property="Margin"
						TargetName="TextBlock"
						Value="17,4,0,4"/>
			</DataTrigger>
		</DataTemplate.Triggers>
	</DataTemplate>
	<!-- DetailsViewName DataTemplate -->
	<DataTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type controls:DetailsView}, ResourceId=DetailsViewNameDataTemplate}">
		<StackPanel Margin="-1,0,1,0"
					Name="Panel"
					Orientation="Horizontal">
			<documents:PixelSnapper HorizontalAlignment="Left"
									Margin="0,0,4,0"
									x:Name="Image"
									Visibility="Collapsed">
				<Image Source="{Binding Path=SmallImageSource}"/>
			</documents:PixelSnapper>
			<TextBlock Text="{Binding Path=Name}"/>
		</StackPanel>
		<DataTemplate.Triggers>
			<DataTrigger Binding="{Binding Path=(controls:DetailsView.IsFirst),RelativeSource={RelativeSource Self}}"
						 Value="True">
				<Setter Property="Visibility"
						TargetName="Image"
						Value="Visible"/>
				<Setter Property="Margin"
						TargetName="Panel"
						Value="11,0,1,0"/>
			</DataTrigger>
		</DataTemplate.Triggers>
	</DataTemplate>
	<!-- DetailsViewModifiedDate DataTemplate -->
	<DataTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type controls:DetailsView}, ResourceId=DetailsViewModifiedDateDataTemplate}">
		<StackPanel Margin="-1,0,1,0"
					Name="Panel"
					Orientation="Horizontal">
			<documents:PixelSnapper HorizontalAlignment="Left"
									Margin="0,0,4,0"
									x:Name="Image"
									Visibility="Collapsed">
				<Image Source="{Binding Path=SmallImageSource}"/>
			</documents:PixelSnapper>
			<TextBlock Foreground="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"
					   Text="{Binding Path=DateModified, Converter={StaticResource DateTimeConverterKey}, ConverterParameter=g}"/>
		</StackPanel>
		<DataTemplate.Triggers>
			<DataTrigger Binding="{Binding Path=(controls:DetailsView.IsFirst),RelativeSource={RelativeSource Self}}"
						 Value="True">
				<Setter Property="Visibility"
						TargetName="Image"
						Value="Visible"/>
				<Setter Property="Margin"
						TargetName="Panel"
						Value="11,0,1,0"/>
			</DataTrigger>
		</DataTemplate.Triggers>
	</DataTemplate>
	<!-- DetailsViewType DataTemplate -->
	<DataTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type controls:DetailsView}, ResourceId=DetailsViewTypeDataTemplate}">
		<StackPanel Margin="-1,0,1,0"
					Name="Panel"
					Orientation="Horizontal">
			<documents:PixelSnapper HorizontalAlignment="Left"
									Margin="0,0,4,0"
									x:Name="Image"
									Visibility="Collapsed">
				<Image Source="{Binding Path=SmallImageSource}"/>
			</documents:PixelSnapper>
			<TextBlock Foreground="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"
					   Text="{Binding Path=Type}"/>
		</StackPanel>
		<DataTemplate.Triggers>
			<DataTrigger Binding="{Binding Path=(controls:DetailsView.IsFirst),RelativeSource={RelativeSource Self}}"
						 Value="True">
				<Setter Property="Visibility"
						TargetName="Image"
						Value="Visible"/>
				<Setter Property="Margin"
						TargetName="Panel"
						Value="11,0,1,0"/>
			</DataTrigger>
		</DataTemplate.Triggers>
	</DataTemplate>
	<!-- DetailsViewSize DataTemplate -->
	<DataTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type controls:DetailsView}, ResourceId=DetailsViewSizeDataTemplate}">
		<Grid Margin="-1,0,1,0"
			  Name="Panel">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition/>
			</Grid.ColumnDefinitions>
			<documents:PixelSnapper HorizontalAlignment="Left"
									Margin="0,0,4,0"
									x:Name="Image"
									Visibility="Collapsed">
				<Image Source="{Binding Path=SmallImageSource}"/>
			</documents:PixelSnapper>
			<TextBlock Foreground="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"
					   Grid.Column="1"
					   HorizontalAlignment="Right"
					   Text="{Binding Path=Size, Converter={StaticResource FileSizeConverterKey}}"/>
		</Grid>
		<DataTemplate.Triggers>
			<DataTrigger Binding="{Binding Path=(controls:DetailsView.IsFirst), RelativeSource={RelativeSource Self}}"
						 Value="True">
				<Setter Property="Visibility"
						TargetName="Image"
						Value="Visible"/>
				<Setter Property="Margin"
						TargetName="Panel"
						Value="11,0,1,0"/>
			</DataTrigger>
		</DataTemplate.Triggers>
	</DataTemplate>
	<!-- ContentViewItemContainer Style -->
	<Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type controls:ContentView}, ResourceId=ContentViewItemContainerStyle}"
		   TargetType="{x:Type ListViewItem}">
		<Setter Property="FocusVisualStyle"
				Value="{x:Null}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListViewItem}">
					<Grid Height="48">
						<Rectangle Fill="{StaticResource ItemSeparatorBrushKey}"
								   Height="1"
								   HorizontalAlignment="Stretch"
								   Margin="4,0,9,-1"
								   VerticalAlignment="Bottom"/>
						<Border Background="Transparent"
								BorderThickness="1"
								CornerRadius="2"
								Margin="0,0,0,-1"
								Name="OuterBorder">
							<Border BorderThickness="1"
									CornerRadius="2"
									Name="InnerBorder">
								<Grid>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="41"/>
										<ColumnDefinition MaxWidth="600"
														  Width="0.6*"/>
										<ColumnDefinition Width="0.4*"/>
									</Grid.ColumnDefinitions>
									<documents:PixelSnapper HorizontalAlignment="Left"
															Margin="2,4,0,0"
															VerticalAlignment="Top">
										<Image Source="{Binding Path=MediumImageSource}"
											   Stretch="None"/>
									</documents:PixelSnapper>
									<StackPanel Grid.Column="1"
												Margin="0,3,0,0">
										<TextBlock FontFamily="Segoe UI"
												   FontSize="15"
												   Text="{Binding Path=Name}"/>
										<StackPanel Margin="0,0,0,1"
													Orientation="Horizontal">
											<TextBlock FontFamily="Segoe UI"
													   FontSize="12"
													   Foreground="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"
													   Margin="0,0,4,0"
													   Text="Type:"/>
											<TextBlock FontFamily="Segoe UI"
													   FontSize="12"
													   Text="{Binding Path=Type}"/>
										</StackPanel>
									</StackPanel>
									<StackPanel Grid.Column="2"
												Margin="0,7,0,0">
										<StackPanel Orientation="Horizontal">
											<TextBlock FontFamily="Segoe UI"
													   FontSize="12"
													   Foreground="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"
													   Margin="0,0,4,0"
													   Text="Date Modified:"/>
											<TextBlock FontFamily="Segoe UI"
													   FontSize="12"
													   Text="{Binding Path=DateModified, Converter={StaticResource DateTimeConverterKey}, ConverterParameter=g}"/>
										</StackPanel>
										<StackPanel Margin="0,0,0,1"
													Name="SizePanel"
													Orientation="Horizontal">
											<TextBlock FontFamily="Segoe UI"
													   FontSize="12"
													   Foreground="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"
													   Margin="0,0,4,0"
													   Text="Size:"/>
											<TextBlock FontFamily="Segoe UI"
													   FontSize="12"
													   Text="{Binding Path=Size, Converter={StaticResource FileSizeConverterKey}}"/>
										</StackPanel>
									</StackPanel>
								</Grid>
							</Border>
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<DataTrigger Binding="{Binding Path=Size}"
									 Value="{x:Null}">
							<Setter Property="Visibility"
									TargetName="SizePanel"
									Value="Collapsed"/>
						</DataTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected"
										   Value="true"/>
								<Condition Property="IsFocused"
										   Value="true"/>
							</MultiTrigger.Conditions>
							<Setter Property="BorderBrush"
									TargetName="OuterBorder"
									Value="{StaticResource ItemFocusOuterBorderBrushKey}"/>
							<Setter Property="BorderBrush"
									TargetName="InnerBorder"
									Value="{StaticResource ItemFocusInnerBorderBrushKey}"/>
							<Setter Property="Background"
									TargetName="InnerBorder"
									Value="{StaticResource ItemFocusBackgroundBrushKey}"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected"
										   Value="true"/>
								<Condition Property="IsFocused"
										   Value="false"/>
							</MultiTrigger.Conditions>
							<Setter Property="BorderBrush"
									TargetName="OuterBorder"
									Value="{StaticResource ItemSelectOuterBorderBrushKey}"/>
							<Setter Property="BorderBrush"
									TargetName="InnerBorder"
									Value="{StaticResource ItemSelectInnerBorderBrushKey}"/>
							<Setter Property="Background"
									TargetName="InnerBorder"
									Value="{StaticResource ItemSelectBackgroundBrushKey}"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected"
										   Value="false"/>
								<Condition Property="IsMouseOver"
										   Value="true"/>
							</MultiTrigger.Conditions>
							<Setter Property="BorderBrush"
									TargetName="OuterBorder"
									Value="{StaticResource ItemMouseOverOuterBorderBrushKey}"/>
							<Setter Property="BorderBrush"
									TargetName="InnerBorder"
									Value="{StaticResource ItemMouseOverInnerBorderBrushKey}"/>
							<Setter Property="Background"
									TargetName="InnerBorder"
									Value="{StaticResource ItemMouseOverBackgroundBrushKey}"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected"
										   Value="true"/>
								<Condition Property="IsMouseOver"
										   Value="true"/>
							</MultiTrigger.Conditions>
							<Setter Property="BorderBrush"
									TargetName="OuterBorder"
									Value="{StaticResource ItemFocusOuterBorderBrushKey}"/>
							<Setter Property="BorderBrush"
									TargetName="InnerBorder"
									Value="{StaticResource ItemFocusInnerBorderBrushKey}"/>
							<Setter Property="Background"
									TargetName="InnerBorder"
									Value="{StaticResource ItemFocusBackgroundBrushKey}"/>
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!-- ContentView Style -->
	<Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type controls:ContentView}, ResourceId=ContentViewStyle}"
		   TargetType="{x:Type controls:ListBoxView}">
		<Setter Property="ItemsPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<VirtualizingStackPanel IsItemsHost="True"/>
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Template"
				Value="{StaticResource ScrollViewTemplateKey}"/>
	</Style>
	<!-- ColumnViewColumnHeaderGripperStyleKey Style -->
	<Style x:Key="ColumnViewColumnHeaderGripperStyleKey"
		   TargetType="{x:Type Thumb}">
		<Setter Property="Canvas.Right"
				Value="-9"/>
		<Setter Property="Width"
				Value="18"/>
		<Setter Property="Height"
				Value="{Binding Path=ActualHeight,RelativeSource={RelativeSource TemplatedParent}}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Border Background="Transparent"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!-- DetailsViewColumnHeader Style -->
	<Style x:Key="DetailsViewColumnHeaderStyleKey"
		   TargetType="{x:Type controls:ColumnViewColumnHeader}">
		<Setter Property="HorizontalContentAlignment"
				Value="Center"/>
		<Setter Property="VerticalContentAlignment"
				Value="Center"/>
		<Setter Property="Background"
				Value="Transparent"/>
		<Setter Property="BorderBrush"
				Value="{StaticResource DetailsViewColumnHeaderBorderBrushKey}"/>
		<Setter Property="Foreground"
				Value="{StaticResource DetailsViewForegroundBrushKey}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:ColumnViewColumnHeader}">
					<Grid>
						<Border Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="0,0,1,0"
								Name="HeaderBorder"/>
						<Border BorderBrush="{StaticResource DetailsViewColumnHeaderHoverOuterBorderBrushKey}"
								BorderThickness="1,0,1,1"
								Name="HeaderHoverBorder"
								Visibility="Hidden">
							<Border Background="{StaticResource DetailsViewColumnHeaderHoverBackgroundBrushKey}"
									BorderBrush="{StaticResource DetailsViewColumnHeaderHoverInnerBorderBrushKey}"
									BorderThickness="1"/>
						</Border>
						<Border BorderThickness="1,1,1,0"
								Name="HeaderPressBorder"
								Visibility="Hidden"/>
						<ContentPresenter Name="HeaderContent"
										  RecognizesAccessKey="True"
										  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
						<Canvas>
							<Thumb x:Name="PART_HeaderGripper"
								   Style="{StaticResource ColumnViewColumnHeaderGripperStyleKey}"/>
						</Canvas>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver"
								 Value="true">
							<Setter Property="Visibility"
									TargetName="HeaderHoverBorder"
									Value="Visible"/>
						</Trigger>
						<Trigger Property="IsPressed"
								 Value="true">
							<Setter Property="Visibility"
									TargetName="HeaderPressBorder"
									Value="Visible"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!-- DetailsViewItemContainer Style -->
	<Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type controls:DetailsView}, ResourceId=DetailsViewItemContainerStyle}"
		   TargetType="{x:Type ListViewItem}">
		<Setter Property="FocusVisualStyle"
				Value="{x:Null}"/>
		<Setter Property="HorizontalContentAlignment"
				Value="Stretch"/>
		<Setter Property="VerticalContentAlignment"
				Value="Stretch"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListViewItem}">
					<Grid>
						<Border Background="Transparent"
								BorderThickness="1"
								CornerRadius="2"
								HorizontalAlignment="Left"
								Margin="15,0,0,0"
								Name="OuterBorder">
							<Border BorderThickness="1"
									CornerRadius="2"
									Name="InnerBorder">
								<controls:ColumnViewRowPresenter Margin="-15,0,-5,0"
															   x:Name="PART_RowPresenter"
															   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
															   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
							</Border>
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected"
										   Value="true"/>
								<Condition Property="IsFocused"
										   Value="true"/>
							</MultiTrigger.Conditions>
							<Setter Property="BorderBrush"
									TargetName="OuterBorder"
									Value="{StaticResource ItemFocusOuterBorderBrushKey}"/>
							<Setter Property="BorderBrush"
									TargetName="InnerBorder"
									Value="{StaticResource ItemFocusInnerBorderBrushKey}"/>
							<Setter Property="Background"
									TargetName="InnerBorder"
									Value="{StaticResource ItemFocusBackgroundBrushKey}"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected"
										   Value="true"/>
								<Condition Property="IsFocused"
										   Value="false"/>
							</MultiTrigger.Conditions>
							<Setter Property="BorderBrush"
									TargetName="OuterBorder"
									Value="{StaticResource ItemSelectOuterBorderBrushKey}"/>
							<Setter Property="BorderBrush"
									TargetName="InnerBorder"
									Value="{StaticResource ItemSelectInnerBorderBrushKey}"/>
							<Setter Property="Background"
									TargetName="InnerBorder"
									Value="{StaticResource ItemSelectBackgroundBrushKey}"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected"
										   Value="false"/>
								<Condition Property="IsMouseOver"
										   Value="true"/>
							</MultiTrigger.Conditions>
							<Setter Property="BorderBrush"
									TargetName="OuterBorder"
									Value="{StaticResource ItemMouseOverOuterBorderBrushKey}"/>
							<Setter Property="BorderBrush"
									TargetName="InnerBorder"
									Value="{StaticResource ItemMouseOverInnerBorderBrushKey}"/>
							<Setter Property="Background"
									TargetName="InnerBorder"
									Value="{StaticResource ItemMouseOverBackgroundBrushKey}"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected"
										   Value="true"/>
								<Condition Property="IsMouseOver"
										   Value="true"/>
							</MultiTrigger.Conditions>
							<Setter Property="BorderBrush"
									TargetName="OuterBorder"
									Value="{StaticResource ItemFocusOuterBorderBrushKey}"/>
							<Setter Property="BorderBrush"
									TargetName="InnerBorder"
									Value="{StaticResource ItemFocusInnerBorderBrushKey}"/>
							<Setter Property="Background"
									TargetName="InnerBorder"
									Value="{StaticResource ItemFocusBackgroundBrushKey}"/>
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!-- DetailsView Style -->
	<Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type controls:DetailsView}, ResourceId=DetailsViewStyle}"
		   TargetType="{x:Type ListView}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListView}">
					<ScrollViewer HorizontalScrollBarVisibility="Auto"
								  VerticalScrollBarVisibility="Auto">
						<ScrollViewer.Style>
							<Style TargetType="{x:Type ScrollViewer}">
								<Setter Property="Focusable"
										Value="false"/>
								<Setter Property="Template">
									<Setter.Value>
										<ControlTemplate TargetType="{x:Type ScrollViewer}">
											<Grid Background="{TemplateBinding Background}"
												  SnapsToDevicePixels="true">
												<Grid.ColumnDefinitions>
													<ColumnDefinition Width="*"/>
													<ColumnDefinition Width="Auto"/>
												</Grid.ColumnDefinitions>
												<Grid.RowDefinitions>
													<RowDefinition Height="*"/>
													<RowDefinition Height="Auto"/>
												</Grid.RowDefinitions>
												<DockPanel Margin="{TemplateBinding Padding}">
													<ScrollViewer DockPanel.Dock="Top"
																  Focusable="false"
																  HorizontalScrollBarVisibility="Hidden"
																  VerticalScrollBarVisibility="Hidden">
														<controls:ColumnViewHeaderRowPresenter AllowsColumnReorder="{Binding Path=TemplatedParent.View.AllowsColumnReorder,RelativeSource={RelativeSource TemplatedParent}}"
																							 ColumnHeaderContainerStyle="{StaticResource DetailsViewColumnHeaderStyleKey}"
																							 ColumnHeaderContextMenu="{Binding Path=TemplatedParent.View.ColumnHeaderContextMenu,RelativeSource={RelativeSource TemplatedParent}}"
																							 ColumnHeaderTemplate="{Binding Path=TemplatedParent.View.ColumnHeaderTemplate,RelativeSource={RelativeSource TemplatedParent}}"
																							 ColumnHeaderTemplateSelector="{Binding Path=TemplatedParent.View.ColumnHeaderTemplateSelector,RelativeSource={RelativeSource TemplatedParent}}"
																							 ColumnHeaderToolTip="{Binding Path=TemplatedParent.View.ColumnHeaderToolTip,RelativeSource={RelativeSource TemplatedParent}}"
																							 Columns="{Binding Path=TemplatedParent.View.Columns,RelativeSource={RelativeSource TemplatedParent}}"
																							 DockPanel.Dock="Top"
																							 Margin="1,0,0,7"
																							 SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
													</ScrollViewer>
													<ScrollContentPresenter CanContentScroll="{TemplateBinding CanContentScroll}"
																			Content="{TemplateBinding Content}"
																			ContentTemplate="{TemplateBinding ContentTemplate}"
																			KeyboardNavigation.DirectionalNavigation="Local"
																			Name="PART_ScrollContentPresenter"
																			SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
												</DockPanel>
												<ScrollBar Cursor="Arrow"
														   Grid.Row="1"
														   Maximum="{TemplateBinding ScrollableWidth}"
														   Minimum="0.0"
														   Name="PART_HorizontalScrollBar"
														   Orientation="Horizontal"
														   Value="{Binding Path=HorizontalOffset,RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
														   ViewportSize="{TemplateBinding ViewportWidth}"
														   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
												<ScrollBar Cursor="Arrow"
														   Grid.Column="1"
														   Maximum="{TemplateBinding ScrollableHeight}"
														   Minimum="0.0"
														   Name="PART_VerticalScrollBar"
														   Orientation="Vertical"
														   Value="{Binding Path=VerticalOffset,RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
														   ViewportSize="{TemplateBinding ViewportHeight}"
														   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
												<DockPanel Background="{Binding Path=Background,ElementName=PART_VerticalScrollBar}"
														   Grid.Column="1"
														   Grid.Row="1"
														   LastChildFill="false">
													<Rectangle DockPanel.Dock="Left"
															   Fill="White"
															   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
															   Width="1"/>
													<Rectangle DockPanel.Dock="Top"
															   Fill="White"
															   Height="1"
															   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
												</DockPanel>
											</Grid>
										</ControlTemplate>
									</Setter.Value>
								</Setter>
							</Style>
						</ScrollViewer.Style>
						<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
					</ScrollViewer>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!-- ExtraLargeIconsViewItemContainer Style -->
	<Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type controls:ExtraLargeIconsView}, ResourceId=ExtraLargeIconsViewItemContainerStyle}"
		   TargetType="{x:Type ListViewItem}">
		<Setter Property="FocusVisualStyle"
				Value="{x:Null}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListViewItem}">
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition/>
						</Grid.RowDefinitions>
						<Border Background="Transparent"
								BorderThickness="1"
								CornerRadius="2"
								Margin="0,0,1,1"
								Name="OuterBorder">
							<Border BorderThickness="1"
									CornerRadius="2"
									Name="InnerBorder">
								<Grid>
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto"/>
										<RowDefinition MaxHeight="63"/>
									</Grid.RowDefinitions>
									<documents:PixelSnapper HorizontalAlignment="Center"
															VerticalAlignment="Top">
										<Image x:Name="PART_Image"
											   Source="{Binding Path=ExtraLargeImageSource}"/>
									</documents:PixelSnapper>
									<TextBlock FontFamily="Segoe UI"
											   FontSize="12"
											   Grid.Row="1"
											   Text="{Binding Path=Name}"
											   TextAlignment="Center"
											   TextWrapping="Wrap"
											   VerticalAlignment="Top"/>
								</Grid>
							</Border>
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected"
										   Value="true"/>
								<Condition Property="IsFocused"
										   Value="true"/>
							</MultiTrigger.Conditions>
							<Setter Property="BorderBrush"
									TargetName="OuterBorder"
									Value="{StaticResource ItemFocusOuterBorderBrushKey}"/>
							<Setter Property="BorderBrush"
									TargetName="InnerBorder"
									Value="{StaticResource ItemFocusInnerBorderBrushKey}"/>
							<Setter Property="Background"
									TargetName="InnerBorder"
									Value="{StaticResource ItemFocusBackgroundBrushKey}"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected"
										   Value="true"/>
								<Condition Property="IsFocused"
										   Value="false"/>
							</MultiTrigger.Conditions>
							<Setter Property="BorderBrush"
									TargetName="OuterBorder"
									Value="{StaticResource ItemSelectOuterBorderBrushKey}"/>
							<Setter Property="BorderBrush"
									TargetName="InnerBorder"
									Value="{StaticResource ItemSelectInnerBorderBrushKey}"/>
							<Setter Property="Background"
									TargetName="InnerBorder"
									Value="{StaticResource ItemSelectBackgroundBrushKey}"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected"
										   Value="false"/>
								<Condition Property="IsMouseOver"
										   Value="true"/>
							</MultiTrigger.Conditions>
							<Setter Property="BorderBrush"
									TargetName="OuterBorder"
									Value="{StaticResource ItemMouseOverOuterBorderBrushKey}"/>
							<Setter Property="BorderBrush"
									TargetName="InnerBorder"
									Value="{StaticResource ItemMouseOverInnerBorderBrushKey}"/>
							<Setter Property="Background"
									TargetName="InnerBorder"
									Value="{StaticResource ItemMouseOverBackgroundBrushKey}"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected"
										   Value="true"/>
								<Condition Property="IsMouseOver"
										   Value="true"/>
							</MultiTrigger.Conditions>
							<Setter Property="BorderBrush"
									TargetName="OuterBorder"
									Value="{StaticResource ItemFocusOuterBorderBrushKey}"/>
							<Setter Property="BorderBrush"
									TargetName="InnerBorder"
									Value="{StaticResource ItemFocusInnerBorderBrushKey}"/>
							<Setter Property="Background"
									TargetName="InnerBorder"
									Value="{StaticResource ItemFocusBackgroundBrushKey}"/>
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!-- ExtraLargeIconsView Style -->
	<Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type controls:ExtraLargeIconsView}, ResourceId=ExtraLargeIconsViewStyle}"
		   TargetType="{x:Type controls:ListBoxView}">
		<Setter Property="ItemsPanel"
				Value="{StaticResource HorizontalWrapItemsPanelTemplateKey}"/>
		<Setter Property="Template"
				Value="{StaticResource ScrollViewTemplateKey}"/>
	</Style>
	<!-- LargeIconsViewItemContainer Style -->
	<Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type controls:LargeIconsView}, ResourceId=LargeIconsViewItemContainerStyle}"
		   TargetType="{x:Type ListViewItem}">
		<Setter Property="FocusVisualStyle"
				Value="{x:Null}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListViewItem}">
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition/>
						</Grid.RowDefinitions>
						<Border Background="Transparent"
								BorderThickness="1"
								CornerRadius="2"
								Margin="0,0,1,1"
								Name="OuterBorder">
							<Border BorderThickness="1"
									CornerRadius="2"
									Name="InnerBorder">
								<Grid>
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto"/>
										<RowDefinition MaxHeight="63"/>
									</Grid.RowDefinitions>
									<documents:PixelSnapper HorizontalAlignment="Center"
															VerticalAlignment="Top">
										<Image x:Name="PART_Image"
											   Source="{Binding Path=LargeImageSource}"/>
									</documents:PixelSnapper>
									<TextBlock FontFamily="Segoe UI"
											   FontSize="12"
											   Grid.Row="1"
											   Text="{Binding Path=Name}"
											   TextAlignment="Center"
											   TextWrapping="Wrap"
											   VerticalAlignment="Top"/>
								</Grid>
							</Border>
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected"
										   Value="true"/>
								<Condition Property="IsFocused"
										   Value="true"/>
							</MultiTrigger.Conditions>
							<Setter Property="BorderBrush"
									TargetName="OuterBorder"
									Value="{StaticResource ItemFocusOuterBorderBrushKey}"/>
							<Setter Property="BorderBrush"
									TargetName="InnerBorder"
									Value="{StaticResource ItemFocusInnerBorderBrushKey}"/>
							<Setter Property="Background"
									TargetName="InnerBorder"
									Value="{StaticResource ItemFocusBackgroundBrushKey}"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected"
										   Value="true"/>
								<Condition Property="IsFocused"
										   Value="false"/>
							</MultiTrigger.Conditions>
							<Setter Property="BorderBrush"
									TargetName="OuterBorder"
									Value="{StaticResource ItemSelectOuterBorderBrushKey}"/>
							<Setter Property="BorderBrush"
									TargetName="InnerBorder"
									Value="{StaticResource ItemSelectInnerBorderBrushKey}"/>
							<Setter Property="Background"
									TargetName="InnerBorder"
									Value="{StaticResource ItemSelectBackgroundBrushKey}"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected"
										   Value="false"/>
								<Condition Property="IsMouseOver"
										   Value="true"/>
							</MultiTrigger.Conditions>
							<Setter Property="BorderBrush"
									TargetName="OuterBorder"
									Value="{StaticResource ItemMouseOverOuterBorderBrushKey}"/>
							<Setter Property="BorderBrush"
									TargetName="InnerBorder"
									Value="{StaticResource ItemMouseOverInnerBorderBrushKey}"/>
							<Setter Property="Background"
									TargetName="InnerBorder"
									Value="{StaticResource ItemMouseOverBackgroundBrushKey}"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected"
										   Value="true"/>
								<Condition Property="IsMouseOver"
										   Value="true"/>
							</MultiTrigger.Conditions>
							<Setter Property="BorderBrush"
									TargetName="OuterBorder"
									Value="{StaticResource ItemFocusOuterBorderBrushKey}"/>
							<Setter Property="BorderBrush"
									TargetName="InnerBorder"
									Value="{StaticResource ItemFocusInnerBorderBrushKey}"/>
							<Setter Property="Background"
									TargetName="InnerBorder"
									Value="{StaticResource ItemFocusBackgroundBrushKey}"/>
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!-- LargeIconsView Style -->
	<Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type controls:LargeIconsView}, ResourceId=LargeIconsViewStyle}"
		   TargetType="{x:Type controls:ListBoxView}">
		<Setter Property="ItemsPanel"
				Value="{StaticResource HorizontalWrapItemsPanelTemplateKey}"/>
		<Setter Property="Template"
				Value="{StaticResource ScrollViewTemplateKey}"/>
	</Style>
	<!-- MediumIconsViewItemContainer Style -->
	<Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type controls:MediumIconsView}, ResourceId=MediumIconsViewItemContainerStyle}"
		   TargetType="{x:Type ListViewItem}">
		<Setter Property="FocusVisualStyle"
				Value="{x:Null}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListViewItem}">
					<Grid>
						<Border Background="Transparent"
								BorderThickness="1"
								CornerRadius="2"
								Margin="0,0,1,1"
								Name="OuterBorder">
							<Border BorderThickness="1"
									CornerRadius="2"
									Name="InnerBorder">
								<Grid>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto"/>
										<ColumnDefinition/>
									</Grid.ColumnDefinitions>
									<documents:PixelSnapper HorizontalAlignment="Left"
															Margin="2,0,2,0"
															VerticalAlignment="Center">
										<Image x:Name="PART_Image"
											   Source="{Binding Path=MediumImageSource}"/>
									</documents:PixelSnapper>
									<TextBlock FontFamily="Segoe UI"
											   FontSize="12"
											   Grid.Column="1"
											   HorizontalAlignment="Left"
											   Margin="0,-1,0,1"
											   Text="{Binding Path=Name}"
											   VerticalAlignment="Center"/>
								</Grid>
							</Border>
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected"
										   Value="true"/>
								<Condition Property="IsFocused"
										   Value="true"/>
							</MultiTrigger.Conditions>
							<Setter Property="BorderBrush"
									TargetName="OuterBorder"
									Value="{StaticResource ItemFocusOuterBorderBrushKey}"/>
							<Setter Property="BorderBrush"
									TargetName="InnerBorder"
									Value="{StaticResource ItemFocusInnerBorderBrushKey}"/>
							<Setter Property="Background"
									TargetName="InnerBorder"
									Value="{StaticResource ItemFocusBackgroundBrushKey}"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected"
										   Value="true"/>
								<Condition Property="IsFocused"
										   Value="false"/>
							</MultiTrigger.Conditions>
							<Setter Property="BorderBrush"
									TargetName="OuterBorder"
									Value="{StaticResource ItemSelectOuterBorderBrushKey}"/>
							<Setter Property="BorderBrush"
									TargetName="InnerBorder"
									Value="{StaticResource ItemSelectInnerBorderBrushKey}"/>
							<Setter Property="Background"
									TargetName="InnerBorder"
									Value="{StaticResource ItemSelectBackgroundBrushKey}"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected"
										   Value="false"/>
								<Condition Property="IsMouseOver"
										   Value="true"/>
							</MultiTrigger.Conditions>
							<Setter Property="BorderBrush"
									TargetName="OuterBorder"
									Value="{StaticResource ItemMouseOverOuterBorderBrushKey}"/>
							<Setter Property="BorderBrush"
									TargetName="InnerBorder"
									Value="{StaticResource ItemMouseOverInnerBorderBrushKey}"/>
							<Setter Property="Background"
									TargetName="InnerBorder"
									Value="{StaticResource ItemMouseOverBackgroundBrushKey}"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected"
										   Value="true"/>
								<Condition Property="IsMouseOver"
										   Value="true"/>
							</MultiTrigger.Conditions>
							<Setter Property="BorderBrush"
									TargetName="OuterBorder"
									Value="{StaticResource ItemFocusOuterBorderBrushKey}"/>
							<Setter Property="BorderBrush"
									TargetName="InnerBorder"
									Value="{StaticResource ItemFocusInnerBorderBrushKey}"/>
							<Setter Property="Background"
									TargetName="InnerBorder"
									Value="{StaticResource ItemFocusBackgroundBrushKey}"/>
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!-- MediumIconsView Style -->
	<Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type controls:MediumIconsView}, ResourceId=MediumIconsViewStyle}"
		   TargetType="{x:Type controls:ListBoxView}">
		<Setter Property="ItemsPanel"
				Value="{StaticResource HorizontalWrapItemsPanelTemplateKey}"/>
		<Setter Property="Template"
				Value="{StaticResource ScrollViewTemplateKey}"/>
	</Style>
	<!-- SimpleListViewItemContainer Style -->
	<Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type controls:SimpleListView}, ResourceId=SimpleListViewItemContainerStyle}"
		   TargetType="{x:Type ListViewItem}">
		<Setter Property="FocusVisualStyle"
				Value="{x:Null}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListViewItem}">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto"/>
							<ColumnDefinition/>
						</Grid.ColumnDefinitions>
						<Border Background="Transparent"
								BorderThickness="1"
								CornerRadius="2"
								Margin="0,0,10,1"
								Name="OuterBorder">
							<Border BorderThickness="1"
									CornerRadius="2"
									Name="InnerBorder">
								<Grid>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto"/>
										<ColumnDefinition/>
									</Grid.ColumnDefinitions>
									<documents:PixelSnapper HorizontalAlignment="Center"
															Margin="2,0,2,0"
															VerticalAlignment="Top">
										<Image Source="{Binding Path=SmallImageSource}"
											   Stretch="None"/>
									</documents:PixelSnapper>
									<TextBlock FontFamily="Segoe UI"
											   FontSize="12"
											   Grid.Column="1"
											   Text="{Binding Path=Name}"
											   VerticalAlignment="Center"/>
								</Grid>
							</Border>
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected"
										   Value="true"/>
								<Condition Property="IsFocused"
										   Value="true"/>
							</MultiTrigger.Conditions>
							<Setter Property="BorderBrush"
									TargetName="OuterBorder"
									Value="{StaticResource ItemFocusOuterBorderBrushKey}"/>
							<Setter Property="BorderBrush"
									TargetName="InnerBorder"
									Value="{StaticResource ItemFocusInnerBorderBrushKey}"/>
							<Setter Property="Background"
									TargetName="InnerBorder"
									Value="{StaticResource ItemFocusBackgroundBrushKey}"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected"
										   Value="true"/>
								<Condition Property="IsFocused"
										   Value="false"/>
							</MultiTrigger.Conditions>
							<Setter Property="BorderBrush"
									TargetName="OuterBorder"
									Value="{StaticResource ItemSelectOuterBorderBrushKey}"/>
							<Setter Property="BorderBrush"
									TargetName="InnerBorder"
									Value="{StaticResource ItemSelectInnerBorderBrushKey}"/>
							<Setter Property="Background"
									TargetName="InnerBorder"
									Value="{StaticResource ItemSelectBackgroundBrushKey}"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected"
										   Value="false"/>
								<Condition Property="IsMouseOver"
										   Value="true"/>
							</MultiTrigger.Conditions>
							<Setter Property="BorderBrush"
									TargetName="OuterBorder"
									Value="{StaticResource ItemMouseOverOuterBorderBrushKey}"/>
							<Setter Property="BorderBrush"
									TargetName="InnerBorder"
									Value="{StaticResource ItemMouseOverInnerBorderBrushKey}"/>
							<Setter Property="Background"
									TargetName="InnerBorder"
									Value="{StaticResource ItemMouseOverBackgroundBrushKey}"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected"
										   Value="true"/>
								<Condition Property="IsMouseOver"
										   Value="true"/>
							</MultiTrigger.Conditions>
							<Setter Property="BorderBrush"
									TargetName="OuterBorder"
									Value="{StaticResource ItemFocusOuterBorderBrushKey}"/>
							<Setter Property="BorderBrush"
									TargetName="InnerBorder"
									Value="{StaticResource ItemFocusInnerBorderBrushKey}"/>
							<Setter Property="Background"
									TargetName="InnerBorder"
									Value="{StaticResource ItemFocusBackgroundBrushKey}"/>
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!-- SimpleListView Style -->
	<Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type controls:SimpleListView}, ResourceId=SimpleListViewStyle}"
		   TargetType="{x:Type controls:ListBoxView}">
		<Setter Property="ItemsPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<WrapPanel Height="{Binding Path=ActualHeight, RelativeSource={RelativeSource AncestorType=ScrollContentPresenter}}"
							   IsItemsHost="True"
							   Orientation="Vertical"/>
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:ListBoxView}">
					<ScrollViewer Focusable="false"
								  HorizontalScrollBarVisibility="Auto"
								  Padding="15,6,0,0"
								  VerticalScrollBarVisibility="Hidden">
						<ItemsPresenter/>
					</ScrollViewer>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!-- SmallIconsViewItemContainer Style -->
	<Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type controls:SmallIconsView}, ResourceId=SmallIconsViewItemContainerStyle}"
		   TargetType="{x:Type ListViewItem}">
		<Setter Property="FocusVisualStyle"
				Value="{x:Null}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListViewItem}">
					<Grid>
						<Border Background="Transparent"
								BorderThickness="1"
								CornerRadius="2"
								Margin="0,0,1,1"
								Name="OuterBorder">
							<Border BorderThickness="1"
									CornerRadius="2"
									Name="InnerBorder">
								<Grid>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto"/>
										<ColumnDefinition/>
									</Grid.ColumnDefinitions>
									<documents:PixelSnapper HorizontalAlignment="Left"
															Margin="2,0,2,0"
															VerticalAlignment="Center">
										<Image x:Name="PART_Image"
											   Source="{Binding Path=SmallImageSource}"/>
									</documents:PixelSnapper>
									<TextBlock FontFamily="Segoe UI"
											   FontSize="12"
											   Grid.Column="1"
											   HorizontalAlignment="Left"
											   Margin="0,-1,0,1"
											   Text="{Binding Path=Name}"
											   VerticalAlignment="Center"/>
								</Grid>
							</Border>
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected"
										   Value="true"/>
								<Condition Property="IsFocused"
										   Value="true"/>
							</MultiTrigger.Conditions>
							<Setter Property="BorderBrush"
									TargetName="OuterBorder"
									Value="{StaticResource ItemFocusOuterBorderBrushKey}"/>
							<Setter Property="BorderBrush"
									TargetName="InnerBorder"
									Value="{StaticResource ItemFocusInnerBorderBrushKey}"/>
							<Setter Property="Background"
									TargetName="InnerBorder"
									Value="{StaticResource ItemFocusBackgroundBrushKey}"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected"
										   Value="true"/>
								<Condition Property="IsFocused"
										   Value="false"/>
							</MultiTrigger.Conditions>
							<Setter Property="BorderBrush"
									TargetName="OuterBorder"
									Value="{StaticResource ItemSelectOuterBorderBrushKey}"/>
							<Setter Property="BorderBrush"
									TargetName="InnerBorder"
									Value="{StaticResource ItemSelectInnerBorderBrushKey}"/>
							<Setter Property="Background"
									TargetName="InnerBorder"
									Value="{StaticResource ItemSelectBackgroundBrushKey}"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected"
										   Value="false"/>
								<Condition Property="IsMouseOver"
										   Value="true"/>
							</MultiTrigger.Conditions>
							<Setter Property="BorderBrush"
									TargetName="OuterBorder"
									Value="{StaticResource ItemMouseOverOuterBorderBrushKey}"/>
							<Setter Property="BorderBrush"
									TargetName="InnerBorder"
									Value="{StaticResource ItemMouseOverInnerBorderBrushKey}"/>
							<Setter Property="Background"
									TargetName="InnerBorder"
									Value="{StaticResource ItemMouseOverBackgroundBrushKey}"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected"
										   Value="true"/>
								<Condition Property="IsMouseOver"
										   Value="true"/>
							</MultiTrigger.Conditions>
							<Setter Property="BorderBrush"
									TargetName="OuterBorder"
									Value="{StaticResource ItemFocusOuterBorderBrushKey}"/>
							<Setter Property="BorderBrush"
									TargetName="InnerBorder"
									Value="{StaticResource ItemFocusInnerBorderBrushKey}"/>
							<Setter Property="Background"
									TargetName="InnerBorder"
									Value="{StaticResource ItemFocusBackgroundBrushKey}"/>
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!-- SmallIconsView Style -->
	<Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type controls:SmallIconsView}, ResourceId=SmallIconsViewStyle}"
		   TargetType="{x:Type controls:ListBoxView}">
		<Setter Property="ItemsPanel"
				Value="{StaticResource HorizontalWrapItemsPanelTemplateKey}"/>
		<Setter Property="Template"
				Value="{StaticResource ScrollViewTemplateKey}"/>
	</Style>
	<!-- TilesViewItemContainer Style -->
	<Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type controls:TilesView}, ResourceId=TilesViewItemContainerStyle}"
		   TargetType="{x:Type ListViewItem}">
		<Setter Property="FocusVisualStyle"
				Value="{x:Null}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListViewItem}">
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition/>
						</Grid.RowDefinitions>
						<Border Background="Transparent"
								BorderThickness="1"
								CornerRadius="2"
								Margin="0,0,4,4"
								Name="OuterBorder"
								Width="250">
							<Border BorderThickness="1"
									CornerRadius="2"
									Name="InnerBorder">
								<Grid>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto"/>
										<ColumnDefinition/>
									</Grid.ColumnDefinitions>
									<documents:PixelSnapper HorizontalAlignment="Left"
															Margin="2,0,2,0"
															VerticalAlignment="Center">
										<Image Source="{Binding Path=LargeImageSource}"/>
									</documents:PixelSnapper>
									<StackPanel Grid.Column="1"
												Margin="2,0,0,0"
												VerticalAlignment="Center">
										<TextBlock FontFamily="Segoe UI"
												   FontSize="12"
												   HorizontalAlignment="Left"
												   Text="{Binding Path=Name}"/>
										<TextBlock FontFamily="Segoe UI"
												   FontSize="12"
												   Foreground="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"
												   HorizontalAlignment="Left"
												   Text="{Binding Path=Type}"/>
										<TextBlock FontFamily="Segoe UI"
												   FontSize="12"
												   Foreground="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"
												   HorizontalAlignment="Left"
												   x:Name="SizeBlock"
												   Text="{Binding Path=Size, Converter={StaticResource FileSizeConverterKey}}"/>
									</StackPanel>
								</Grid>
							</Border>
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="Text"
								 SourceName="SizeBlock"
								 Value="{x:Null}">
							<Setter Property="Visibility"
									TargetName="SizeBlock"
									Value="Hidden"/>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected"
										   Value="true"/>
								<Condition Property="IsFocused"
										   Value="true"/>
							</MultiTrigger.Conditions>
							<Setter Property="BorderBrush"
									TargetName="OuterBorder"
									Value="{StaticResource ItemFocusOuterBorderBrushKey}"/>
							<Setter Property="BorderBrush"
									TargetName="InnerBorder"
									Value="{StaticResource ItemFocusInnerBorderBrushKey}"/>
							<Setter Property="Background"
									TargetName="InnerBorder"
									Value="{StaticResource ItemFocusBackgroundBrushKey}"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected"
										   Value="true"/>
								<Condition Property="IsFocused"
										   Value="false"/>
							</MultiTrigger.Conditions>
							<Setter Property="BorderBrush"
									TargetName="OuterBorder"
									Value="{StaticResource ItemSelectOuterBorderBrushKey}"/>
							<Setter Property="BorderBrush"
									TargetName="InnerBorder"
									Value="{StaticResource ItemSelectInnerBorderBrushKey}"/>
							<Setter Property="Background"
									TargetName="InnerBorder"
									Value="{StaticResource ItemSelectBackgroundBrushKey}"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected"
										   Value="false"/>
								<Condition Property="IsMouseOver"
										   Value="true"/>
							</MultiTrigger.Conditions>
							<Setter Property="BorderBrush"
									TargetName="OuterBorder"
									Value="{StaticResource ItemMouseOverOuterBorderBrushKey}"/>
							<Setter Property="BorderBrush"
									TargetName="InnerBorder"
									Value="{StaticResource ItemMouseOverInnerBorderBrushKey}"/>
							<Setter Property="Background"
									TargetName="InnerBorder"
									Value="{StaticResource ItemMouseOverBackgroundBrushKey}"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected"
										   Value="true"/>
								<Condition Property="IsMouseOver"
										   Value="true"/>
							</MultiTrigger.Conditions>
							<Setter Property="BorderBrush"
									TargetName="OuterBorder"
									Value="{StaticResource ItemFocusOuterBorderBrushKey}"/>
							<Setter Property="BorderBrush"
									TargetName="InnerBorder"
									Value="{StaticResource ItemFocusInnerBorderBrushKey}"/>
							<Setter Property="Background"
									TargetName="InnerBorder"
									Value="{StaticResource ItemFocusBackgroundBrushKey}"/>
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!-- TilesView Style -->
	<Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type controls:TilesView}, ResourceId=TilesViewStyle}"
		   TargetType="{x:Type controls:ListBoxView}">
		<Setter Property="ItemsPanel"
				Value="{StaticResource HorizontalWrapItemsPanelTemplateKey}"/>
		<Setter Property="Template"
				Value="{StaticResource ScrollViewTemplateKey}"/>
	</Style>
	<!-- ViewPage Style -->
	<Style x:Key="{x:Type controls:ViewPage}"
		   TargetType="{x:Type controls:ViewPage}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:ViewPage}">
					<ContentPresenter Content="{TemplateBinding Content}"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<SolidColorBrush Color="#828790"
					 x:Key="ListBorder"/>
	<LinearGradientBrush x:Key="ListItemHoverFill"
                         StartPoint="0,0"
                         EndPoint="0,1">
		<LinearGradientBrush.GradientStops>
			<GradientStop Color="#FFF1FBFF"
                          Offset="0"/>
			<GradientStop Color="#FFD5F1FE"
                          Offset="1"/>
		</LinearGradientBrush.GradientStops>
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="ListItemSelectedFill"
                         StartPoint="0,0"
                         EndPoint="0,1">
		<LinearGradientBrush.GradientStops>
			<GradientStop Color="#FFD9F4FF"
                          Offset="0"/>
			<GradientStop Color="#FF9BDDFB"
                          Offset="1"/>
		</LinearGradientBrush.GradientStops>
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="ListItemSelectedHoverFill"
                         StartPoint="0,0"
                         EndPoint="0,1">
		<LinearGradientBrush.GradientStops>
			<GradientStop Color="#FFEAF9FF"
                          Offset="0"/>
			<GradientStop Color="#FFC9EDFD"
                          Offset="1"/>
		</LinearGradientBrush.GradientStops>
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="ListItemSelectedInactiveFill"
                         StartPoint="0,0"
                         EndPoint="0,1">
		<LinearGradientBrush.GradientStops>
			<GradientStop Color="#FFEEEDED"
                          Offset="0"/>
			<GradientStop Color="#FFDDDDDD"
                          Offset="1"/>
		</LinearGradientBrush.GradientStops>
	</LinearGradientBrush>
	<!-- ColumnViewItemContainer Style -->
	<Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type controls:ColumnView}, ResourceId=ColumnViewItemContainerStyle}"
		   TargetType="{x:Type ListViewItem}">
		<Setter Property="Background"
				Value="Transparent"/>
		<Setter Property="BorderBrush"
				Value="Transparent"/>
		<Setter Property="BorderThickness"
				Value="1"/>
		<Setter Property="Margin"
				Value="0,0,0,1"/>
		<Setter Property="Padding"
				Value="5,2,5,2"/>
		<Setter Property="VerticalContentAlignment"
				Value="Center"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListViewItem}">
					<Border Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							CornerRadius="2"
							SnapsToDevicePixels="true">
						<Border BorderThickness="1"
								CornerRadius="1"
								Name="InnerBorder">
							<Grid>
								<Grid.RowDefinitions>
									<RowDefinition MaxHeight="11"/>
									<RowDefinition/>
								</Grid.RowDefinitions>
								<Rectangle Fill="#75FFFFFF"
										   Name="UpperHighlight"
										   Visibility="Collapsed"/>
								<controls:ColumnViewRowPresenter Grid.RowSpan="2"
															   Columns="{Binding Path=(controls:ColumnView.ColumnCollection), RelativeSource={RelativeSource TemplatedParent}}"
															   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
															   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
							</Grid>
						</Border>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver"
								 Value="true">
							<Setter Property="Background"
									Value="{StaticResource ListItemHoverFill}"/>
							<Setter Property="BorderBrush"
									Value="#FFCCF0FF"/>
							<Setter Property="Visibility"
									TargetName="UpperHighlight"
									Value="Visible"/>
						</Trigger>
						<Trigger Property="IsSelected"
								 Value="true">
							<Setter Property="Background"
									Value="{StaticResource ListItemSelectedFill}"/>
							<Setter Property="BorderBrush"
									Value="#FF98DDFB"/>
							<Setter Property="BorderBrush"
									TargetName="InnerBorder"
									Value="#80FFFFFF"/>
							<Setter Property="Visibility"
									TargetName="UpperHighlight"
									Value="Visible"/>
							<Setter Property="Fill"
									TargetName="UpperHighlight"
									Value="#40FFFFFF"/>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected"
										   Value="true"/>
								<Condition Property="Selector.IsSelectionActive"
										   Value="false"/>
							</MultiTrigger.Conditions>
							<Setter Property="Background"
									Value="{StaticResource ListItemSelectedInactiveFill}"/>
							<Setter Property="BorderBrush"
									Value="#FFCFCFCF"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected"
										   Value="true"/>
								<Condition Property="IsMouseOver"
										   Value="true"/>
							</MultiTrigger.Conditions>
							<Setter Property="Background"
									Value="{StaticResource ListItemSelectedHoverFill}"/>
							<Setter Property="BorderBrush"
									Value="#FF98DDFB"/>
						</MultiTrigger>
						<Trigger Property="IsEnabled"
								 Value="false">
							<Setter Property="Foreground"
									Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!-- ColumnViewScrollViewer Style -->
	<Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type controls:ColumnView}, ResourceId=ColumnViewScrollViewerStyle}"
		   TargetType="{x:Type ScrollViewer}">
		<Setter Property="Focusable"
				Value="false"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ScrollViewer}">
					<Grid Background="{TemplateBinding Background}"
						  SnapsToDevicePixels="true">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*"/>
							<ColumnDefinition Width="Auto"/>
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="*"/>
							<RowDefinition Height="Auto"/>
						</Grid.RowDefinitions>
						<DockPanel Margin="{TemplateBinding Padding}">
							<ScrollViewer DockPanel.Dock="Top"
										  Focusable="false"
										  HorizontalScrollBarVisibility="Hidden"
										  VerticalScrollBarVisibility="Hidden">
								<controls:ColumnViewHeaderRowPresenter AllowsColumnReorder="{Binding Path=TemplatedParent.View.AllowsColumnReorder,RelativeSource={RelativeSource TemplatedParent}}"
																	 ColumnHeaderContainerStyle="{Binding Path=TemplatedParent.View.ColumnHeaderContainerStyle,RelativeSource={RelativeSource TemplatedParent}}"
																	 ColumnHeaderContextMenu="{Binding Path=TemplatedParent.View.ColumnHeaderContextMenu,RelativeSource={RelativeSource TemplatedParent}}"
																	 ColumnHeaderStringFormat="{Binding Path=TemplatedParent.View.ColumnHeaderStringFormat,RelativeSource={RelativeSource TemplatedParent}}"
																	 ColumnHeaderTemplate="{Binding Path=TemplatedParent.View.ColumnHeaderTemplate,RelativeSource={RelativeSource TemplatedParent}}"
																	 ColumnHeaderTemplateSelector="{Binding Path=TemplatedParent.View.ColumnHeaderTemplateSelector,RelativeSource={RelativeSource TemplatedParent}}"
																	 ColumnHeaderToolTip="{Binding Path=TemplatedParent.View.ColumnHeaderToolTip,RelativeSource={RelativeSource TemplatedParent}}"
																	 Columns="{Binding Path=TemplatedParent.View.Columns,RelativeSource={RelativeSource TemplatedParent}}"
																	 SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
							</ScrollViewer>
							<ScrollContentPresenter CanContentScroll="{TemplateBinding CanContentScroll}"
													Content="{TemplateBinding Content}"
													ContentTemplate="{TemplateBinding ContentTemplate}"
													KeyboardNavigation.DirectionalNavigation="Local"
													Name="PART_ScrollContentPresenter"
													SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
						</DockPanel>
						<ScrollBar Cursor="Arrow"
								   Grid.Row="1"
								   Maximum="{TemplateBinding ScrollableWidth}"
								   Minimum="0.0"
								   Name="PART_HorizontalScrollBar"
								   Orientation="Horizontal"
								   Value="{Binding Path=HorizontalOffset,RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
								   ViewportSize="{TemplateBinding ViewportWidth}"
								   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
						<ScrollBar Cursor="Arrow"
								   Grid.Column="1"
								   Maximum="{TemplateBinding ScrollableHeight}"
								   Minimum="0.0"
								   Name="PART_VerticalScrollBar"
								   Orientation="Vertical"
								   Value="{Binding Path=VerticalOffset,RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
								   ViewportSize="{TemplateBinding ViewportHeight}"
								   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
						<DockPanel Background="{Binding Path=Background,ElementName=PART_VerticalScrollBar}"
								   Grid.Column="1"
								   Grid.Row="1"
								   LastChildFill="false">
							<Rectangle DockPanel.Dock="Left"
									   Fill="White"
									   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
									   Width="1"/>
							<Rectangle DockPanel.Dock="Top"
									   Fill="White"
									   Height="1"
									   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
						</DockPanel>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!-- ColumnViewColumnHeaderBorderBackground Brush -->
	<LinearGradientBrush x:Key="ColumnViewColumnHeaderBorderBackground"
                         StartPoint="0,0"
                         EndPoint="0,1">
		<LinearGradientBrush.GradientStops>
			<GradientStop Color="#FFF2F2F2"
                          Offset="0"/>
			<GradientStop Color="#FFD5D5D5"
                          Offset="1"/>
		</LinearGradientBrush.GradientStops>
	</LinearGradientBrush>
	<!-- ColumnViewColumnHeaderBackground Brush -->
	<LinearGradientBrush x:Key="ColumnViewColumnHeaderBackground"
                         StartPoint="0,0"
                         EndPoint="0,1">
		<LinearGradientBrush.GradientStops>
			<GradientStop Color="#FFFFFFFF"
                          Offset="0"/>
			<GradientStop Color="#FFFFFFFF"
                          Offset="0.4091"/>
			<GradientStop Color="#FFF7F8F9"
                          Offset="1"/>
		</LinearGradientBrush.GradientStops>
	</LinearGradientBrush>
	<!-- ColumnViewColumnHeaderHoverBackground Brush -->
	<LinearGradientBrush x:Key="ColumnViewColumnHeaderHoverBackground"
                         StartPoint="0,0"
                         EndPoint="0,1">
		<LinearGradientBrush.GradientStops>
			<GradientStop Color="#FFBDEDFF"
                          Offset="0"/>
			<GradientStop Color="#FFB7E7FB"
                          Offset="1"/>
		</LinearGradientBrush.GradientStops>
	</LinearGradientBrush>
	<!-- ColumnViewColumnHeaderPressBackground Brush -->
	<LinearGradientBrush x:Key="ColumnViewColumnHeaderPressBackground"
                         StartPoint="0,0"
                         EndPoint="0,1">
		<LinearGradientBrush.GradientStops>
			<GradientStop Color="#FF8DD6F7"
                          Offset="0"/>
			<GradientStop Color="#FF8AD1F5"
                          Offset="1"/>
		</LinearGradientBrush.GradientStops>
	</LinearGradientBrush>
	<!-- ColumnViewColumnHeaderGripper Style -->
	<Style x:Key="ColumnViewColumnHeaderGripper"
           TargetType="{x:Type Thumb}">
		<Setter Property="Canvas.Right"
                Value="-9"/>
		<Setter Property="Width"
                Value="18"/>
		<Setter Property="Height"
                Value="{Binding Path=ActualHeight,RelativeSource={RelativeSource TemplatedParent}}"/>
		<Setter Property="Padding"
                Value="0"/>
		<Setter Property="Background"
                Value="Transparent"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Border Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}">
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!-- ColumnViewColumnHeader Style -->
	<Style x:Key="{x:Type controls:ColumnViewColumnHeader}"
           TargetType="{x:Type controls:ColumnViewColumnHeader}">
		<Setter Property="HorizontalContentAlignment"
                Value="Center"/>
		<Setter Property="VerticalContentAlignment"
                Value="Center"/>
		<Setter Property="Background"
                Value="{StaticResource ColumnViewColumnHeaderBackground}"/>
		<Setter Property="BorderBrush"
                Value="{StaticResource ColumnViewColumnHeaderBorderBackground}"/>
		<Setter Property="BorderThickness"
                Value="0"/>
		<Setter Property="Padding"
                Value="2,0,2,0"/>
		<Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:ColumnViewColumnHeader}">
					<Grid SnapsToDevicePixels="true">
						<Border Name="HeaderBorder"
                                BorderThickness="0,1,1,1"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}">
							<Grid>
								<Grid.RowDefinitions>
									<RowDefinition MaxHeight="7"/>
									<RowDefinition/>
								</Grid.RowDefinitions>
								<Rectangle Name="UpperHighlight"
                                           Visibility="Collapsed"
                                           Fill="#FFE3F7FF"/>
								<Border Grid.RowSpan="2"
                                        Padding="{TemplateBinding Padding}">
									<ContentPresenter Name="HeaderContent"
                                                      Margin="0,0,0,1"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      RecognizesAccessKey="True"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
								</Border>
							</Grid>
						</Border>
						<Border Name="HeaderHoverBorder"
                                BorderThickness="1,0,1,1"
                                Margin="1,1,0,0"/>
						<Border Name="HeaderPressBorder"
                                BorderThickness="1,1,1,0"
                                Margin="1,0,0,1"/>
						<Canvas>
							<Thumb x:Name="PART_HeaderGripper"
                                   Style="{StaticResource ColumnViewColumnHeaderGripper}"/>
						</Canvas>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver"
                                 Value="true">
							<Setter TargetName="HeaderBorder"
                                    Property="Background"
                                    Value="{StaticResource ColumnViewColumnHeaderHoverBackground}"/>
							<Setter TargetName="HeaderHoverBorder"
                                    Property="BorderBrush"
                                    Value="#FF88CBEB"/>
							<Setter TargetName="UpperHighlight"
                                    Property="Visibility"
                                    Value="Visible"/>
							<Setter TargetName="PART_HeaderGripper"
                                    Property="Background"
                                    Value="Transparent"/>
						</Trigger>
						<Trigger Property="IsPressed"
                                 Value="true">
							<Setter TargetName="HeaderBorder"
                                    Property="Background"
                                    Value="{StaticResource ColumnViewColumnHeaderPressBackground}"/>
							<Setter TargetName="HeaderHoverBorder"
                                    Property="BorderBrush"
                                    Value="#FF95DAF9"/>
							<Setter TargetName="HeaderPressBorder"
                                    Property="BorderBrush"
                                    Value="#FF7A9EB1"/>
							<Setter TargetName="UpperHighlight"
                                    Property="Visibility"
                                    Value="Visible"/>
							<Setter TargetName="UpperHighlight"
                                    Property="Fill"
                                    Value="#FFBCE4F9"/>
							<Setter TargetName="PART_HeaderGripper"
                                    Property="Visibility"
                                    Value="Hidden"/>
							<Setter TargetName="HeaderContent"
                                    Property="Margin"
                                    Value="1,1,0,0"/>
						</Trigger>
						<Trigger Property="Height"
                                 Value="Auto">
							<Setter Property="MinHeight"
                                    Value="20"/>
						</Trigger>
						<Trigger Property="IsEnabled"
                                 Value="false">
							<Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="Role"
                     Value="Padding">
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type controls:ColumnViewColumnHeader}">
							<Border Name="HeaderBorder"
                                    BorderThickness="0,1,0,1"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    Background="{TemplateBinding Background}"/>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
		</Style.Triggers>
	</Style>
	<!-- ColumnViewColumnCell Style -->
	<Style x:Key="{x:Type controls:ColumnViewColumnCell}"
           TargetType="{x:Type controls:ColumnViewColumnCell}">
		<Setter Property="Padding"
                Value="6,0,6,0"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:ColumnViewColumnCell}">
					<Border Padding="{TemplateBinding Padding}">
						<ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
										  x:Name="PART_ContentPresenter"
										  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										  RecognizesAccessKey="True"
										  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!-- ColumnView Style -->
	<Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type controls:ColumnView}, ResourceId=ColumnViewStyle}"
		   TargetType="{x:Type ListView}">
		<Setter Property="Background"
				Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
		<Setter Property="BorderBrush"
				Value="{StaticResource ListBorder}"/>
		<Setter Property="BorderThickness"
				Value="0"/>
		<Setter Property="Foreground"
				Value="#FF042271"/>
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
				Value="Auto"/>
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility"
				Value="Auto"/>
		<Setter Property="ScrollViewer.CanContentScroll"
				Value="true"/>
		<Setter Property="ScrollViewer.PanningMode"
				Value="Both"/>
		<Setter Property="Stylus.IsFlicksEnabled"
				Value="False"/>
		<Setter Property="VerticalContentAlignment"
				Value="Center"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListView}">
					<ScrollViewer Padding="{TemplateBinding Padding}"
									Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type controls:ColumnView}, ResourceId=ColumnViewScrollViewerStyle}}">
						<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
					</ScrollViewer>
					<ControlTemplate.Triggers>
						<Trigger Property="IsGrouping"
								 Value="true">
							<Setter Property="ScrollViewer.CanContentScroll"
									Value="false"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>
