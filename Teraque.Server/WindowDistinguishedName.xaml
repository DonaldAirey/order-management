<Window x:Class="Teraque.WindowDistinguishedName"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:src="clr-namespace:Teraque"
        Background="white"
        Title="Windows Security"
		SizeToContent="Height"
        Width="429"
        ResizeMode="NoResize"
        ShowInTaskbar="False">
	<Grid>
		<Grid.Resources>
			<!-- IssuerConverter -->
			<src:IssuerConverter x:Key="IssuerConverter" />
			<!-- IssuedToConverter -->
			<src:IssuedToConverter x:Key="IssuedToConverter" />
			<!-- EffectiveDateConverter -->
			<src:EffectiveDateConverter x:Key="EffectiveDateConverter" />
			<!-- ExpirationDateConverter -->
			<src:ExpirationDateConverter x:Key="ExpirationDateConverter" />
			<!-- ItemFocusBackgroundBrush -->
			<LinearGradientBrush EndPoint="0.0,1.0"
								 x:Key="ItemFocusBackgroundBrushKey"
								 StartPoint="0.0,0.0">
				<LinearGradientBrush.GradientStops>
					<GradientStop Color="#DCEBFC"
								  Offset="0.0"/>
					<GradientStop Color="#C1DBFC"
								  Offset="1.0"/>
				</LinearGradientBrush.GradientStops>
			</LinearGradientBrush>
			<!-- ItemFocusInnerBorderBrushKey -->
			<LinearGradientBrush EndPoint="0.0,1.0"
								 x:Key="ItemFocusInnerBorderBrushKey"
								 StartPoint="0.0,0.0">
				<LinearGradientBrush.GradientStops>
					<GradientStop Color="#EBF4FD"
								  Offset="0.0"/>
					<GradientStop Color="#DBEAFD"
								  Offset="1.0"/>
				</LinearGradientBrush.GradientStops>
			</LinearGradientBrush>
			<!-- ItemFocusOuterBorderBrush -->
			<SolidColorBrush Color="#7A9FCB"
							 x:Key="ItemFocusOuterBorderBrushKey"/>
			<!-- ItemMouseOverBackgroundBrush -->
			<LinearGradientBrush EndPoint="0.0,1.0"
								 x:Key="ItemMouseOverBackgroundBrushKey"
								 StartPoint="0.0,0.0">
				<LinearGradientBrush.GradientStops>
					<GradientStop Color="#FAFBFD"
								  Offset="0.0"/>
					<GradientStop Color="#EBF3FD"
								  Offset="1.0"/>
				</LinearGradientBrush.GradientStops>
			</LinearGradientBrush>
			<!-- ItemMouseOverInnerBorderBrush -->
			<LinearGradientBrush EndPoint="0.0,1.0"
								 x:Key="ItemMouseOverInnerBorderBrushKey"
								 StartPoint="0.0,0.0">
				<LinearGradientBrush.GradientStops>
					<GradientStop Color="#FCFDFE"
								  Offset="0.0"/>
					<GradientStop Color="#F2F7FE"
								  Offset="1.0"/>
				</LinearGradientBrush.GradientStops>
			</LinearGradientBrush>
			<!-- ItemMouseOverOuterBorderBrush -->
			<SolidColorBrush Color="#B099C4FA"
							 x:Key="ItemMouseOverOuterBorderBrushKey"/>
			<!-- ItemSelectBackgroundBrush -->
			<LinearGradientBrush EndPoint="0.0,1.0"
								 x:Key="ItemSelectBackgroundBrushKey"
								 StartPoint="0.0,0.0">
				<LinearGradientBrush.GradientStops>
					<GradientStop Color="#F8F8F8"
								  Offset="0.0"/>
					<GradientStop Color="#E5E5E5"
								  Offset="1.0"/>
				</LinearGradientBrush.GradientStops>
			</LinearGradientBrush>
			<!-- ItemSelectInnerBorderBrush -->
			<LinearGradientBrush EndPoint="0.0,1.0"
						 x:Key="ItemSelectInnerBorderBrushKey"
						 StartPoint="0.0,0.0">
				<LinearGradientBrush.GradientStops>
					<GradientStop Color="#FAFAFB"
						  Offset="0.0"/>
					<GradientStop Color="#F0F0F0"
						  Offset="1.0"/>
				</LinearGradientBrush.GradientStops>
			</LinearGradientBrush>
			<!-- ItemSelectOuterBorderBrush -->
			<SolidColorBrush Color="#D0D0D0"
							 x:Key="ItemSelectOuterBorderBrushKey"/>
			<!-- ListBox -->
			<Style x:Key="{x:Type ListBox}" TargetType="{x:Type ListBox}">
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type ListBox}">
							<Border x:Name="Bd"
									BorderBrush="{TemplateBinding BorderBrush}"
									BorderThickness="{TemplateBinding BorderThickness}"
									Background="{TemplateBinding Background}"
									Padding="{TemplateBinding Padding}"
									SnapsToDevicePixels="True">
								<ScrollViewer Focusable="False">
									<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
								</ScrollViewer>
							</Border>
							<ControlTemplate.Triggers>
								<Trigger Property="IsEnabled"
										 Value="False">
									<Setter Property="Background"
											TargetName="Bd"
											Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<!-- CredentialContainerStyle -->
			<Style x:Key="CredentialContainerStyle" TargetType="{x:Type ListBoxItem}">
				<Setter Property="FocusVisualStyle" Value="{x:Null}" />
				<Setter Property="Focusable" Value="false"/>
				<Setter Property="Padding" Value="0"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type ListBoxItem}">
							<Border Background="Transparent"
									BorderThickness="1"
									CornerRadius="2"
									Name="OuterBorder">
								<Border BorderThickness="1"
										CornerRadius="2"
										Name="InnerBorder">
									<ContentPresenter x:Name="ContentHost"
													  Margin="{TemplateBinding Padding}"
													  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
													  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
								</Border>
							</Border>
							<ControlTemplate.Triggers>
								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition Property="IsSelected"
												   Value="true"/>
										<Condition Property="IsKeyboardFocusWithin"
												   Value="true"/>
									</MultiTrigger.Conditions>
									<Setter Property="BorderBrush"
											TargetName="OuterBorder"
											Value="{StaticResource ItemFocusOuterBorderBrushKey}"/>
									<Setter Property="BorderBrush"
											TargetName="InnerBorder"
											Value="{StaticResource ItemFocusInnerBorderBrushKey}"/>
									<Setter Property="Background"
											TargetName="InnerBorder"
											Value="{StaticResource ItemFocusBackgroundBrushKey}"/>
								</MultiTrigger>
								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition Property="IsSelected"
												   Value="true"/>
										<Condition Property="IsKeyboardFocusWithin"
												   Value="false"/>
									</MultiTrigger.Conditions>
									<Setter Property="BorderBrush"
											TargetName="OuterBorder"
											Value="{StaticResource ItemSelectOuterBorderBrushKey}"/>
									<Setter Property="BorderBrush"
											TargetName="InnerBorder"
											Value="{StaticResource ItemSelectInnerBorderBrushKey}"/>
									<Setter Property="Background"
											TargetName="InnerBorder"
											Value="{StaticResource ItemSelectBackgroundBrushKey}"/>
								</MultiTrigger>
								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition Property="IsSelected"
												   Value="false"/>
										<Condition Property="IsMouseOver"
												   Value="true"/>
									</MultiTrigger.Conditions>
									<Setter Property="BorderBrush"
											TargetName="OuterBorder"
											Value="{StaticResource ItemMouseOverOuterBorderBrushKey}"/>
									<Setter Property="BorderBrush"
											TargetName="InnerBorder"
											Value="{StaticResource ItemMouseOverInnerBorderBrushKey}"/>
									<Setter Property="Background"
											TargetName="InnerBorder"
											Value="{StaticResource ItemMouseOverBackgroundBrushKey}"/>
								</MultiTrigger>
								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition Property="IsSelected"
												   Value="true"/>
										<Condition Property="IsMouseOver"
												   Value="true"/>
									</MultiTrigger.Conditions>
									<Setter Property="BorderBrush"
											TargetName="OuterBorder"
											Value="{StaticResource ItemFocusOuterBorderBrushKey}"/>
									<Setter Property="BorderBrush"
											TargetName="InnerBorder"
											Value="{StaticResource ItemFocusInnerBorderBrushKey}"/>
									<Setter Property="Background"
											TargetName="InnerBorder"
											Value="{StaticResource ItemFocusBackgroundBrushKey}"/>
								</MultiTrigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<!-- DomainCredentialDataTemplate -->
			<DataTemplate x:Key="DomainCredentialDataTemplate">
				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="70"/>
						<ColumnDefinition/>
					</Grid.ColumnDefinitions>
					<Image Stretch="None" HorizontalAlignment="Center" VerticalAlignment="Center" Source="Resources\Daisy.png"/>
					<StackPanel Grid.Column="1" Orientation="Vertical" Margin="7,7,7,4">
						<TextBox Name="DomainUserNameTextBox" Text="{Binding DomainUserName}" Height="25" Margin="2" Width="195" />
						<PasswordBox Name="PasswordBox" Initialized="OnPasswordBoxInitialized" PasswordChanged="OnPasswordBoxPasswordChanged" Margin="2" Height="25" Width="195" />
						<CheckBox Content="Remember my credentials" IsChecked="{Binding RememberCredentials}" />
					</StackPanel>
				</Grid>
			</DataTemplate>
		</Grid.Resources>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="43"/>
		</Grid.RowDefinitions>
		<Grid Margin="16,0,16,10">
			<Grid.RowDefinitions>
				<RowDefinition Height="35"/>
				<RowDefinition Height="Auto"/>
				<RowDefinition Height="Auto"/>
			</Grid.RowDefinitions>
			<TextBlock VerticalAlignment="Center" HorizontalAlignment="Left" FontSize="12" Text="{Binding BannerMessage}"/>
			<Rectangle Grid.Row="1" Height="1" Fill="#DFDFDF" VerticalAlignment="Top"/>
			<ListBox Grid.Row="1"
					 BorderThickness="0"
					 Margin="4,16,4,6"
					 Name="listBoxCredentials"
					 SelectionMode="Single"
					 ItemTemplate="{StaticResource DomainCredentialDataTemplate}"
					 ItemContainerStyle="{StaticResource CredentialContainerStyle}" />
			<Grid Grid.Row="2">
				<StackPanel Visibility="{Binding Path=CapsLockVisibility}" Margin="26,1,26,2" Orientation="Horizontal">
					<Image Margin="7,0" Stretch="None" Source="Resources/Caps Lock Warning.png"/>
					<TextBlock Text="Caps Lock is on"/>
				</StackPanel>
			</Grid>
		</Grid>
		<Grid Grid.Row="2" Height="43" Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}">
			<StackPanel HorizontalAlignment="Right" Orientation="Horizontal" Margin="7,0">
				<Button Click="OnButtonOkClick" Height="23" IsDefault="True" Margin="4,10" Width="73" VerticalAlignment="Center">OK</Button>
				<Button Click="OnButtonCancelClick" Height="23" IsCancel="True" Margin="4,10" Width="73" VerticalAlignment="Center">Cancel</Button>
			</StackPanel>
		</Grid>
	</Grid>
</Window>
